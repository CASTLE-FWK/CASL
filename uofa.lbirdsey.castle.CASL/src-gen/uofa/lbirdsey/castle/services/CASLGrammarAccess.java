/*
 * generated by Xtext 2.12.0
 */
package uofa.lbirdsey.castle.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class CASLGrammarAccess extends AbstractGrammarElementFinder {
	
	public class CaslElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.Casl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPackageElementsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cPackageElementsAbstractElementParserRuleCall_0_0 = (RuleCall)cPackageElementsAssignment_0.eContents().get(0);
		private final Assignment cSystemAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cSystemSystemParserRuleCall_1_0 = (RuleCall)cSystemAssignment_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cAgentsAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final RuleCall cAgentsAgentParserRuleCall_2_0_0 = (RuleCall)cAgentsAssignment_2_0.eContents().get(0);
		private final Assignment cEnvironmentsAssignment_2_1 = (Assignment)cAlternatives_2.eContents().get(1);
		private final RuleCall cEnvironmentsEnvironmentParserRuleCall_2_1_0 = (RuleCall)cEnvironmentsAssignment_2_1.eContents().get(0);
		private final Assignment cGroupsAssignment_2_2 = (Assignment)cAlternatives_2.eContents().get(2);
		private final RuleCall cGroupsGroupParserRuleCall_2_2_0 = (RuleCall)cGroupsAssignment_2_2.eContents().get(0);
		
		////The upper most level of CASL
		////A CASL description will contain: 1 system description, 1+ agents, 1+ environments
		////A CASL may also be a package descriptor, as models usually have lots of common elements (but how do we do this?)
		//Casl:
		//	packageElements+=AbstractElement*
		//	//These are for proper CAS descriptors
		//	//Describe at MOST one system (wildcard is there for stupid reasons)
		//	system=System? (agents+=Agent | environments+=Environment | groups+=Group)*
		//	//Describe at least one Environment	
		//;
		@Override public ParserRule getRule() { return rule; }
		
		////For packages and commons
		//packageElements+=AbstractElement* //These are for proper CAS descriptors
		////Describe at MOST one system (wildcard is there for stupid reasons)
		//system=System? (agents+=Agent | environments+=Environment | groups+=Group)*
		public Group getGroup() { return cGroup; }
		
		////For packages and commons
		//packageElements+=AbstractElement*
		public Assignment getPackageElementsAssignment_0() { return cPackageElementsAssignment_0; }
		
		//AbstractElement
		public RuleCall getPackageElementsAbstractElementParserRuleCall_0_0() { return cPackageElementsAbstractElementParserRuleCall_0_0; }
		
		////These are for proper CAS descriptors
		////Describe at MOST one system (wildcard is there for stupid reasons)
		//system=System?
		public Assignment getSystemAssignment_1() { return cSystemAssignment_1; }
		
		//System
		public RuleCall getSystemSystemParserRuleCall_1_0() { return cSystemSystemParserRuleCall_1_0; }
		
		//(agents+=Agent | environments+=Environment | groups+=Group)*
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//agents+=Agent
		public Assignment getAgentsAssignment_2_0() { return cAgentsAssignment_2_0; }
		
		//Agent
		public RuleCall getAgentsAgentParserRuleCall_2_0_0() { return cAgentsAgentParserRuleCall_2_0_0; }
		
		//environments+=Environment
		public Assignment getEnvironmentsAssignment_2_1() { return cEnvironmentsAssignment_2_1; }
		
		//Environment
		public RuleCall getEnvironmentsEnvironmentParserRuleCall_2_1_0() { return cEnvironmentsEnvironmentParserRuleCall_2_1_0; }
		
		//groups+=Group
		public Assignment getGroupsAssignment_2_2() { return cGroupsAssignment_2_2; }
		
		//Group
		public RuleCall getGroupsGroupParserRuleCall_2_2_0() { return cGroupsGroupParserRuleCall_2_2_0; }
	}
	public class SystemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.System");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSYSTEMKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cNameKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameSTRINGTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cDescriptionKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cDescAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cDescSTRINGTerminalRuleCall_6_0 = (RuleCall)cDescAssignment_6.eContents().get(0);
		private final Keyword cSemicolonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cRulesetKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cLeftCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cCas_rulesAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cCas_rulesCAS_RulesParserRuleCall_10_0 = (RuleCall)cCas_rulesAssignment_10.eContents().get(0);
		private final Keyword cRightCurlyBracketSemicolonKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cSystem_parametersAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cSystem_parametersParametersParserRuleCall_12_0 = (RuleCall)cSystem_parametersAssignment_12.eContents().get(0);
		private final Assignment cSystem_functionsAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final RuleCall cSystem_functionsFunctionsParserRuleCall_13_0 = (RuleCall)cSystem_functionsAssignment_13.eContents().get(0);
		private final Assignment cAgent_typesAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cAgent_typesAgent_TypesParserRuleCall_14_0 = (RuleCall)cAgent_typesAssignment_14.eContents().get(0);
		private final Assignment cGroup_typesAssignment_15 = (Assignment)cGroup.eContents().get(15);
		private final RuleCall cGroup_typesGroup_TypesParserRuleCall_15_0 = (RuleCall)cGroup_typesAssignment_15.eContents().get(0);
		private final Assignment cEnvironment_typesAssignment_16 = (Assignment)cGroup.eContents().get(16);
		private final RuleCall cEnvironment_typesEnvironment_TypesParserRuleCall_16_0 = (RuleCall)cEnvironment_typesAssignment_16.eContents().get(0);
		private final Assignment cEnd_conditionsAssignment_17 = (Assignment)cGroup.eContents().get(17);
		private final RuleCall cEnd_conditionsEnd_ConditionsParserRuleCall_17_0 = (RuleCall)cEnd_conditionsAssignment_17.eContents().get(0);
		private final Keyword cRightCurlyBracketSemicolonKeyword_18 = (Keyword)cGroup.eContents().get(18);
		
		///*
		// * The SYSTEM declaration
		// */ System:
		//	'SYSTEM:' '{'
		//	'name:' name=STRING ';'
		//	'description:' desc=STRING ';'
		//	'ruleset:' '{'
		//	cas_rules=CAS_Rules
		//	'};'
		//	system_parameters=Parameters
		//	system_functions=Functions
		//	agent_types=Agent_Types
		//	group_types=Group_Types
		//	environment_types=Environment_Types
		//	end_conditions=End_Conditions
		//	'};';
		@Override public ParserRule getRule() { return rule; }
		
		//'SYSTEM:' '{' 'name:' name=STRING ';' 'description:' desc=STRING ';' 'ruleset:' '{' cas_rules=CAS_Rules '};'
		//system_parameters=Parameters system_functions=Functions agent_types=Agent_Types group_types=Group_Types
		//environment_types=Environment_Types end_conditions=End_Conditions '};'
		public Group getGroup() { return cGroup; }
		
		//'SYSTEM:'
		public Keyword getSYSTEMKeyword_0() { return cSYSTEMKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'name:'
		public Keyword getNameKeyword_2() { return cNameKeyword_2; }
		
		//name=STRING
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_3_0() { return cNameSTRINGTerminalRuleCall_3_0; }
		
		//';'
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
		
		//'description:'
		public Keyword getDescriptionKeyword_5() { return cDescriptionKeyword_5; }
		
		//desc=STRING
		public Assignment getDescAssignment_6() { return cDescAssignment_6; }
		
		//STRING
		public RuleCall getDescSTRINGTerminalRuleCall_6_0() { return cDescSTRINGTerminalRuleCall_6_0; }
		
		//';'
		public Keyword getSemicolonKeyword_7() { return cSemicolonKeyword_7; }
		
		//'ruleset:'
		public Keyword getRulesetKeyword_8() { return cRulesetKeyword_8; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_9() { return cLeftCurlyBracketKeyword_9; }
		
		//cas_rules=CAS_Rules
		public Assignment getCas_rulesAssignment_10() { return cCas_rulesAssignment_10; }
		
		//CAS_Rules
		public RuleCall getCas_rulesCAS_RulesParserRuleCall_10_0() { return cCas_rulesCAS_RulesParserRuleCall_10_0; }
		
		//'};'
		public Keyword getRightCurlyBracketSemicolonKeyword_11() { return cRightCurlyBracketSemicolonKeyword_11; }
		
		//system_parameters=Parameters
		public Assignment getSystem_parametersAssignment_12() { return cSystem_parametersAssignment_12; }
		
		//Parameters
		public RuleCall getSystem_parametersParametersParserRuleCall_12_0() { return cSystem_parametersParametersParserRuleCall_12_0; }
		
		//system_functions=Functions
		public Assignment getSystem_functionsAssignment_13() { return cSystem_functionsAssignment_13; }
		
		//Functions
		public RuleCall getSystem_functionsFunctionsParserRuleCall_13_0() { return cSystem_functionsFunctionsParserRuleCall_13_0; }
		
		//agent_types=Agent_Types
		public Assignment getAgent_typesAssignment_14() { return cAgent_typesAssignment_14; }
		
		//Agent_Types
		public RuleCall getAgent_typesAgent_TypesParserRuleCall_14_0() { return cAgent_typesAgent_TypesParserRuleCall_14_0; }
		
		//group_types=Group_Types
		public Assignment getGroup_typesAssignment_15() { return cGroup_typesAssignment_15; }
		
		//Group_Types
		public RuleCall getGroup_typesGroup_TypesParserRuleCall_15_0() { return cGroup_typesGroup_TypesParserRuleCall_15_0; }
		
		//environment_types=Environment_Types
		public Assignment getEnvironment_typesAssignment_16() { return cEnvironment_typesAssignment_16; }
		
		//Environment_Types
		public RuleCall getEnvironment_typesEnvironment_TypesParserRuleCall_16_0() { return cEnvironment_typesEnvironment_TypesParserRuleCall_16_0; }
		
		//end_conditions=End_Conditions
		public Assignment getEnd_conditionsAssignment_17() { return cEnd_conditionsAssignment_17; }
		
		//End_Conditions
		public RuleCall getEnd_conditionsEnd_ConditionsParserRuleCall_17_0() { return cEnd_conditionsEnd_ConditionsParserRuleCall_17_0; }
		
		//'};'
		public Keyword getRightCurlyBracketSemicolonKeyword_18() { return cRightCurlyBracketSemicolonKeyword_18; }
	}
	public class Agent_TypesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.Agent_Types");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAgent_typesKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cAgent_typesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAgent_typesAgent_Type_NameParserRuleCall_2_0 = (RuleCall)cAgent_typesAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cAgent_typesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cAgent_typesAgent_Type_NameParserRuleCall_3_1_0 = (RuleCall)cAgent_typesAssignment_3_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cRightCurlyBracketSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		///**
		// * We need a way to statically check that each agent and env
		// * type listed here has a definition
		// * Is this actually useful? Diversity checks!
		// */ Agent_Types:
		//	'agent_types:' '{'
		//	agent_types+=Agent_Type_Name (',' agent_types+=Agent_Type_Name)* ';'
		//	'};';
		@Override public ParserRule getRule() { return rule; }
		
		//'agent_types:' '{' agent_types+=Agent_Type_Name (',' agent_types+=Agent_Type_Name)* ';' '};'
		public Group getGroup() { return cGroup; }
		
		//'agent_types:'
		public Keyword getAgent_typesKeyword_0() { return cAgent_typesKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//agent_types+=Agent_Type_Name
		public Assignment getAgent_typesAssignment_2() { return cAgent_typesAssignment_2; }
		
		//Agent_Type_Name
		public RuleCall getAgent_typesAgent_Type_NameParserRuleCall_2_0() { return cAgent_typesAgent_Type_NameParserRuleCall_2_0; }
		
		//(',' agent_types+=Agent_Type_Name)*
		public Group getGroup_3() { return cGroup_3; }
		
		//','
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }
		
		//agent_types+=Agent_Type_Name
		public Assignment getAgent_typesAssignment_3_1() { return cAgent_typesAssignment_3_1; }
		
		//Agent_Type_Name
		public RuleCall getAgent_typesAgent_Type_NameParserRuleCall_3_1_0() { return cAgent_typesAgent_Type_NameParserRuleCall_3_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
		
		//'};'
		public Keyword getRightCurlyBracketSemicolonKeyword_5() { return cRightCurlyBracketSemicolonKeyword_5; }
	}
	public class Agent_Type_NameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.Agent_Type_Name");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAgent_Type_NameAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cAgent_type_nameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cAgent_type_nameQualifiedNameParserRuleCall_1_0 = (RuleCall)cAgent_type_nameAssignment_1.eContents().get(0);
		
		//Agent_Type_Name:
		//	{Agent_Type_Name} agent_type_name=QualifiedName;
		@Override public ParserRule getRule() { return rule; }
		
		//{Agent_Type_Name} agent_type_name=QualifiedName
		public Group getGroup() { return cGroup; }
		
		//{Agent_Type_Name}
		public Action getAgent_Type_NameAction_0() { return cAgent_Type_NameAction_0; }
		
		//agent_type_name=QualifiedName
		public Assignment getAgent_type_nameAssignment_1() { return cAgent_type_nameAssignment_1; }
		
		//QualifiedName
		public RuleCall getAgent_type_nameQualifiedNameParserRuleCall_1_0() { return cAgent_type_nameQualifiedNameParserRuleCall_1_0; }
	}
	public class Environment_TypesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.Environment_Types");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEnvironment_TypesAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cEnvironment_typesKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cEnvironment_typesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cEnvironment_typesEnvironment_Type_NameParserRuleCall_3_0 = (RuleCall)cEnvironment_typesAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cEnvironment_typesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cEnvironment_typesEnvironment_Type_NameParserRuleCall_4_1_0 = (RuleCall)cEnvironment_typesAssignment_4_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cRightCurlyBracketSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Environment_Types:
		//	{Environment_Types}
		//	'environment_types:' '{'
		//	environment_types+=Environment_Type_Name (',' environment_types+=Environment_Type_Name)* ';'
		//	'};';
		@Override public ParserRule getRule() { return rule; }
		
		//{Environment_Types} 'environment_types:' '{' environment_types+=Environment_Type_Name (','
		//environment_types+=Environment_Type_Name)* ';' '};'
		public Group getGroup() { return cGroup; }
		
		//{Environment_Types}
		public Action getEnvironment_TypesAction_0() { return cEnvironment_TypesAction_0; }
		
		//'environment_types:'
		public Keyword getEnvironment_typesKeyword_1() { return cEnvironment_typesKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//environment_types+=Environment_Type_Name
		public Assignment getEnvironment_typesAssignment_3() { return cEnvironment_typesAssignment_3; }
		
		//Environment_Type_Name
		public RuleCall getEnvironment_typesEnvironment_Type_NameParserRuleCall_3_0() { return cEnvironment_typesEnvironment_Type_NameParserRuleCall_3_0; }
		
		//(',' environment_types+=Environment_Type_Name)*
		public Group getGroup_4() { return cGroup_4; }
		
		//','
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }
		
		//environment_types+=Environment_Type_Name
		public Assignment getEnvironment_typesAssignment_4_1() { return cEnvironment_typesAssignment_4_1; }
		
		//Environment_Type_Name
		public RuleCall getEnvironment_typesEnvironment_Type_NameParserRuleCall_4_1_0() { return cEnvironment_typesEnvironment_Type_NameParserRuleCall_4_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
		
		//'};'
		public Keyword getRightCurlyBracketSemicolonKeyword_6() { return cRightCurlyBracketSemicolonKeyword_6; }
	}
	public class Environment_Type_NameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.Environment_Type_Name");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEnvironment_Type_NameAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cEnvironment_type_nameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cEnvironment_type_nameQualifiedNameParserRuleCall_1_0 = (RuleCall)cEnvironment_type_nameAssignment_1.eContents().get(0);
		
		//Environment_Type_Name:
		//	{Environment_Type_Name} environment_type_name=QualifiedName;
		@Override public ParserRule getRule() { return rule; }
		
		//{Environment_Type_Name} environment_type_name=QualifiedName
		public Group getGroup() { return cGroup; }
		
		//{Environment_Type_Name}
		public Action getEnvironment_Type_NameAction_0() { return cEnvironment_Type_NameAction_0; }
		
		//environment_type_name=QualifiedName
		public Assignment getEnvironment_type_nameAssignment_1() { return cEnvironment_type_nameAssignment_1; }
		
		//QualifiedName
		public RuleCall getEnvironment_type_nameQualifiedNameParserRuleCall_1_0() { return cEnvironment_type_nameQualifiedNameParserRuleCall_1_0; }
	}
	public class Environment_RulesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.Environment_Rules");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEnvironment_rulesKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cTypeKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cEnv_defAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cEnv_defEnvironment_TypeEnumRuleCall_3_0 = (RuleCall)cEnv_defAssignment_3.eContents().get(0);
		private final Keyword cAttributesKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cEnv_attributesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cEnv_attributesEnvironment_AttributeEnumRuleCall_5_0 = (RuleCall)cEnv_attributesAssignment_5.eContents().get(0);
		private final Keyword cLayout_typeKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cLayout_typeAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cLayout_typeLayoutTypeEnumRuleCall_7_0 = (RuleCall)cLayout_typeAssignment_7.eContents().get(0);
		private final Keyword cSemicolonKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cRightCurlyBracketSemicolonKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//Environment_Rules:
		//	'environment_rules:' '{'
		//	'type:' env_def=Environment_Type
		//	'attributes:' env_attributes=Environment_Attribute
		//	'layout_type:' layout_type=LayoutType ';'
		//	'};';
		@Override public ParserRule getRule() { return rule; }
		
		//'environment_rules:' '{' 'type:' env_def=Environment_Type 'attributes:' env_attributes=Environment_Attribute
		//'layout_type:' layout_type=LayoutType ';' '};'
		public Group getGroup() { return cGroup; }
		
		//'environment_rules:'
		public Keyword getEnvironment_rulesKeyword_0() { return cEnvironment_rulesKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'type:'
		public Keyword getTypeKeyword_2() { return cTypeKeyword_2; }
		
		//env_def=Environment_Type
		public Assignment getEnv_defAssignment_3() { return cEnv_defAssignment_3; }
		
		//Environment_Type
		public RuleCall getEnv_defEnvironment_TypeEnumRuleCall_3_0() { return cEnv_defEnvironment_TypeEnumRuleCall_3_0; }
		
		//'attributes:'
		public Keyword getAttributesKeyword_4() { return cAttributesKeyword_4; }
		
		//env_attributes=Environment_Attribute
		public Assignment getEnv_attributesAssignment_5() { return cEnv_attributesAssignment_5; }
		
		//Environment_Attribute
		public RuleCall getEnv_attributesEnvironment_AttributeEnumRuleCall_5_0() { return cEnv_attributesEnvironment_AttributeEnumRuleCall_5_0; }
		
		//'layout_type:'
		public Keyword getLayout_typeKeyword_6() { return cLayout_typeKeyword_6; }
		
		//layout_type=LayoutType
		public Assignment getLayout_typeAssignment_7() { return cLayout_typeAssignment_7; }
		
		//LayoutType
		public RuleCall getLayout_typeLayoutTypeEnumRuleCall_7_0() { return cLayout_typeLayoutTypeEnumRuleCall_7_0; }
		
		//';'
		public Keyword getSemicolonKeyword_8() { return cSemicolonKeyword_8; }
		
		//'};'
		public Keyword getRightCurlyBracketSemicolonKeyword_9() { return cRightCurlyBracketSemicolonKeyword_9; }
	}
	public class Group_TypesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.Group_Types");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGroup_TypesAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cGroup_typesKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cGroup_typesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cGroup_typesGroup_Type_NameParserRuleCall_3_0 = (RuleCall)cGroup_typesAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cGroup_typesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cGroup_typesGroup_Type_NameParserRuleCall_4_1_0 = (RuleCall)cGroup_typesAssignment_4_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cRightCurlyBracketSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		////TODO: Handle the enumeration in validation
		//Group_Types:
		//	{Group_Types}
		//	'group_types:' '{'
		//	group_types+=Group_Type_Name? (',' group_types+=Group_Type_Name)* ';'
		//	'};';
		@Override public ParserRule getRule() { return rule; }
		
		//{Group_Types} 'group_types:' '{' group_types+=Group_Type_Name? (',' group_types+=Group_Type_Name)* ';' '};'
		public Group getGroup() { return cGroup; }
		
		//{Group_Types}
		public Action getGroup_TypesAction_0() { return cGroup_TypesAction_0; }
		
		//'group_types:'
		public Keyword getGroup_typesKeyword_1() { return cGroup_typesKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//group_types+=Group_Type_Name?
		public Assignment getGroup_typesAssignment_3() { return cGroup_typesAssignment_3; }
		
		//Group_Type_Name
		public RuleCall getGroup_typesGroup_Type_NameParserRuleCall_3_0() { return cGroup_typesGroup_Type_NameParserRuleCall_3_0; }
		
		//(',' group_types+=Group_Type_Name)*
		public Group getGroup_4() { return cGroup_4; }
		
		//','
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }
		
		//group_types+=Group_Type_Name
		public Assignment getGroup_typesAssignment_4_1() { return cGroup_typesAssignment_4_1; }
		
		//Group_Type_Name
		public RuleCall getGroup_typesGroup_Type_NameParserRuleCall_4_1_0() { return cGroup_typesGroup_Type_NameParserRuleCall_4_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
		
		//'};'
		public Keyword getRightCurlyBracketSemicolonKeyword_6() { return cRightCurlyBracketSemicolonKeyword_6; }
	}
	public class Group_Type_NameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.Group_Type_Name");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGroup_Type_NameAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cGroup_type_nameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cGroup_type_nameQualifiedNameParserRuleCall_1_0 = (RuleCall)cGroup_type_nameAssignment_1.eContents().get(0);
		
		//Group_Type_Name:
		//	{Group_Type_Name} group_type_name=QualifiedName;
		@Override public ParserRule getRule() { return rule; }
		
		//{Group_Type_Name} group_type_name=QualifiedName
		public Group getGroup() { return cGroup; }
		
		//{Group_Type_Name}
		public Action getGroup_Type_NameAction_0() { return cGroup_Type_NameAction_0; }
		
		//group_type_name=QualifiedName
		public Assignment getGroup_type_nameAssignment_1() { return cGroup_type_nameAssignment_1; }
		
		//QualifiedName
		public RuleCall getGroup_type_nameQualifiedNameParserRuleCall_1_0() { return cGroup_type_nameQualifiedNameParserRuleCall_1_0; }
	}
	public class End_ConditionsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.End_Conditions");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEnd_conditionsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cEnd_conditionsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cEnd_conditionsEnd_ConditionParserRuleCall_2_0 = (RuleCall)cEnd_conditionsAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		///**
		// * End Conditions:
		// * Each condition listed is in priority order
		// * Need a way to note (wtf is note?)
		// */ End_Conditions:
		//	'end_conditions:' '{'
		//	end_conditions+=End_Condition+
		//	'};';
		@Override public ParserRule getRule() { return rule; }
		
		//'end_conditions:' '{' end_conditions+=End_Condition+ '};'
		public Group getGroup() { return cGroup; }
		
		//'end_conditions:'
		public Keyword getEnd_conditionsKeyword_0() { return cEnd_conditionsKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//end_conditions+=End_Condition+
		public Assignment getEnd_conditionsAssignment_2() { return cEnd_conditionsAssignment_2; }
		
		//End_Condition
		public RuleCall getEnd_conditionsEnd_ConditionParserRuleCall_2_0() { return cEnd_conditionsEnd_ConditionParserRuleCall_2_0; }
		
		//'};'
		public Keyword getRightCurlyBracketSemicolonKeyword_3() { return cRightCurlyBracketSemicolonKeyword_3; }
	}
	public class End_ConditionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.End_Condition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cConditionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cEndTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cEndTypeEndConditionTypesEnumRuleCall_1_0 = (RuleCall)cEndTypeAssignment_1.eContents().get(0);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		///**
		// * End conditions should be altered at runtime
		// */ End_Condition:
		//	'condition' endType=EndConditionTypes name=ID ';' //':'(val = AbstractElement)';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'condition' endType=EndConditionTypes name=ID ';'
		public Group getGroup() { return cGroup; }
		
		//'condition'
		public Keyword getConditionKeyword_0() { return cConditionKeyword_0; }
		
		//endType=EndConditionTypes
		public Assignment getEndTypeAssignment_1() { return cEndTypeAssignment_1; }
		
		//EndConditionTypes
		public RuleCall getEndTypeEndConditionTypesEnumRuleCall_1_0() { return cEndTypeEndConditionTypesEnumRuleCall_1_0; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//';'
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}
	public class CAS_RulesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.CAS_Rules");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCAS_RulesAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTypeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cCas_ruleAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCas_ruleCAS_Rule_TypesEnumRuleCall_2_0 = (RuleCall)cCas_ruleAssignment_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cInspection_levelKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cCas_checkAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cCas_checkCAS_Inspection_LevelEnumRuleCall_5_0 = (RuleCall)cCas_checkAssignment_5.eContents().get(0);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cLenient_exceptionsKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cExceptionsAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cExceptionsCAS_Rule_ExceptionEnumRuleCall_8_0 = (RuleCall)cExceptionsAssignment_8.eContents().get(0);
		private final Keyword cSemicolonKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cSemantic_groupsKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cSemanticgroupsAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cSemanticgroupsCAS_Semantic_Group_SwitchEnumRuleCall_11_0 = (RuleCall)cSemanticgroupsAssignment_11.eContents().get(0);
		private final Keyword cSemicolonKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		///**
		// * CAS Rules
		// */ CAS_Rules:
		//	{CAS_Rules}
		//	'type:' cas_rule=CAS_Rule_Types ';'
		//	'inspection_level:' cas_check=CAS_Inspection_Level ';'
		//	'lenient_exceptions:' exceptions+=CAS_Rule_Exception* ';' //((flags += CAS_Rule_Exception)(flags += CAS_Rule_Exception)?)?
		//	'semantic_groups:' semanticgroups=CAS_Semantic_Group_Switch ';';
		@Override public ParserRule getRule() { return rule; }
		
		//{CAS_Rules} 'type:' cas_rule=CAS_Rule_Types ';' 'inspection_level:' cas_check=CAS_Inspection_Level ';'
		//'lenient_exceptions:' exceptions+=CAS_Rule_Exception* ';' //((flags += CAS_Rule_Exception)(flags += CAS_Rule_Exception)?)?
		//'semantic_groups:' semanticgroups=CAS_Semantic_Group_Switch ';'
		public Group getGroup() { return cGroup; }
		
		//{CAS_Rules}
		public Action getCAS_RulesAction_0() { return cCAS_RulesAction_0; }
		
		//'type:'
		public Keyword getTypeKeyword_1() { return cTypeKeyword_1; }
		
		//cas_rule=CAS_Rule_Types
		public Assignment getCas_ruleAssignment_2() { return cCas_ruleAssignment_2; }
		
		//CAS_Rule_Types
		public RuleCall getCas_ruleCAS_Rule_TypesEnumRuleCall_2_0() { return cCas_ruleCAS_Rule_TypesEnumRuleCall_2_0; }
		
		//';'
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
		
		//'inspection_level:'
		public Keyword getInspection_levelKeyword_4() { return cInspection_levelKeyword_4; }
		
		//cas_check=CAS_Inspection_Level
		public Assignment getCas_checkAssignment_5() { return cCas_checkAssignment_5; }
		
		//CAS_Inspection_Level
		public RuleCall getCas_checkCAS_Inspection_LevelEnumRuleCall_5_0() { return cCas_checkCAS_Inspection_LevelEnumRuleCall_5_0; }
		
		//';'
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
		
		//'lenient_exceptions:'
		public Keyword getLenient_exceptionsKeyword_7() { return cLenient_exceptionsKeyword_7; }
		
		//exceptions+=CAS_Rule_Exception*
		public Assignment getExceptionsAssignment_8() { return cExceptionsAssignment_8; }
		
		//CAS_Rule_Exception
		public RuleCall getExceptionsCAS_Rule_ExceptionEnumRuleCall_8_0() { return cExceptionsCAS_Rule_ExceptionEnumRuleCall_8_0; }
		
		//';'
		public Keyword getSemicolonKeyword_9() { return cSemicolonKeyword_9; }
		
		////((flags += CAS_Rule_Exception)(flags += CAS_Rule_Exception)?)?
		//'semantic_groups:'
		public Keyword getSemantic_groupsKeyword_10() { return cSemantic_groupsKeyword_10; }
		
		//semanticgroups=CAS_Semantic_Group_Switch
		public Assignment getSemanticgroupsAssignment_11() { return cSemanticgroupsAssignment_11; }
		
		//CAS_Semantic_Group_Switch
		public RuleCall getSemanticgroupsCAS_Semantic_Group_SwitchEnumRuleCall_11_0() { return cSemanticgroupsCAS_Semantic_Group_SwitchEnumRuleCall_11_0; }
		
		//';'
		public Keyword getSemicolonKeyword_12() { return cSemicolonKeyword_12; }
	}
	public class EntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.Entity");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAgentParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cGroupParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cEnvironmentParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Entity:
		//	Agent | Group | Environment;
		@Override public ParserRule getRule() { return rule; }
		
		//Agent | Group | Environment
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Agent
		public RuleCall getAgentParserRuleCall_0() { return cAgentParserRuleCall_0; }
		
		//Group
		public RuleCall getGroupParserRuleCall_1() { return cGroupParserRuleCall_1; }
		
		//Environment
		public RuleCall getEnvironmentParserRuleCall_2() { return cEnvironmentParserRuleCall_2; }
	}
	public class Entity_FeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.Entity_Feature");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cFieldParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cFunctionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cBehaviorParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cInteractionParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cAdaptiveProcessParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cSubSystemParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cGroupExternalInteractionParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cGroupInternalInteractionParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		
		//Entity_Feature:
		//	Field | Function | Behavior | Interaction | AdaptiveProcess | SubSystem | GroupExternalInteraction |
		//	GroupInternalInteraction;
		@Override public ParserRule getRule() { return rule; }
		
		//Field | Function | Behavior | Interaction | AdaptiveProcess | SubSystem | GroupExternalInteraction |
		//GroupInternalInteraction
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Field
		public RuleCall getFieldParserRuleCall_0() { return cFieldParserRuleCall_0; }
		
		//Function
		public RuleCall getFunctionParserRuleCall_1() { return cFunctionParserRuleCall_1; }
		
		//Behavior
		public RuleCall getBehaviorParserRuleCall_2() { return cBehaviorParserRuleCall_2; }
		
		//Interaction
		public RuleCall getInteractionParserRuleCall_3() { return cInteractionParserRuleCall_3; }
		
		//AdaptiveProcess
		public RuleCall getAdaptiveProcessParserRuleCall_4() { return cAdaptiveProcessParserRuleCall_4; }
		
		//SubSystem
		public RuleCall getSubSystemParserRuleCall_5() { return cSubSystemParserRuleCall_5; }
		
		//GroupExternalInteraction
		public RuleCall getGroupExternalInteractionParserRuleCall_6() { return cGroupExternalInteractionParserRuleCall_6; }
		
		//GroupInternalInteraction
		public RuleCall getGroupInternalInteractionParserRuleCall_7() { return cGroupInternalInteractionParserRuleCall_7; }
	}
	public class AgentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.Agent");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAGENTKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cDescriptionKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cDescAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cDescSTRINGTerminalRuleCall_5_0 = (RuleCall)cDescAssignment_5.eContents().get(0);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cAgent_parametersAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cAgent_parametersParametersParserRuleCall_7_0 = (RuleCall)cAgent_parametersAssignment_7.eContents().get(0);
		private final Assignment cAgent_functionsAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cAgent_functionsFunctionsParserRuleCall_8_0 = (RuleCall)cAgent_functionsAssignment_8.eContents().get(0);
		private final Assignment cAgent_behaviorsAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cAgent_behaviorsBehaviorsParserRuleCall_9_0 = (RuleCall)cAgent_behaviorsAssignment_9.eContents().get(0);
		private final Assignment cAgent_interactionsAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cAgent_interactionsAgentInteractionsParserRuleCall_10_0 = (RuleCall)cAgent_interactionsAssignment_10.eContents().get(0);
		private final Assignment cAgent_adaptationAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cAgent_adaptationAdaptiveProcessesParserRuleCall_11_0 = (RuleCall)cAgent_adaptationAssignment_11.eContents().get(0);
		private final Assignment cAgent_subSystemsAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cAgent_subSystemsSubSystemsParserRuleCall_12_0 = (RuleCall)cAgent_subSystemsAssignment_12.eContents().get(0);
		private final Keyword cRightCurlyBracketSemicolonKeyword_13 = (Keyword)cGroup.eContents().get(13);
		
		///**
		// * The AGENT declaration
		// */ Agent:
		//	'AGENT' name=ID ':' '{'
		//	'description:' desc=STRING ';'
		//	//Agent Parameters
		//	agent_parameters=Parameters
		//	//Agent Functions
		//	agent_functions=Functions
		//	//Agent Behaviors
		//	agent_behaviors=Behaviors
		//	//Agent Interactions
		//	agent_interactions=AgentInteractions
		//	//Agent Adaptive Processes
		//	agent_adaptation=AdaptiveProcesses
		//	//Agent SubSystems
		//	agent_subSystems=SubSystems
		//	'};';
		@Override public ParserRule getRule() { return rule; }
		
		//'AGENT' name=ID ':' '{' 'description:' desc=STRING ';' //Agent Parameters
		//agent_parameters=Parameters //Agent Functions
		//agent_functions=Functions //Agent Behaviors
		//agent_behaviors=Behaviors //Agent Interactions
		//agent_interactions=AgentInteractions //Agent Adaptive Processes
		//agent_adaptation=AdaptiveProcesses //Agent SubSystems
		//agent_subSystems=SubSystems '};'
		public Group getGroup() { return cGroup; }
		
		//'AGENT'
		public Keyword getAGENTKeyword_0() { return cAGENTKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//'description:'
		public Keyword getDescriptionKeyword_4() { return cDescriptionKeyword_4; }
		
		//desc=STRING
		public Assignment getDescAssignment_5() { return cDescAssignment_5; }
		
		//STRING
		public RuleCall getDescSTRINGTerminalRuleCall_5_0() { return cDescSTRINGTerminalRuleCall_5_0; }
		
		//';'
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
		
		////Agent Parameters
		//agent_parameters=Parameters
		public Assignment getAgent_parametersAssignment_7() { return cAgent_parametersAssignment_7; }
		
		//Parameters
		public RuleCall getAgent_parametersParametersParserRuleCall_7_0() { return cAgent_parametersParametersParserRuleCall_7_0; }
		
		////Agent Functions
		//agent_functions=Functions
		public Assignment getAgent_functionsAssignment_8() { return cAgent_functionsAssignment_8; }
		
		//Functions
		public RuleCall getAgent_functionsFunctionsParserRuleCall_8_0() { return cAgent_functionsFunctionsParserRuleCall_8_0; }
		
		////Agent Behaviors
		//agent_behaviors=Behaviors
		public Assignment getAgent_behaviorsAssignment_9() { return cAgent_behaviorsAssignment_9; }
		
		//Behaviors
		public RuleCall getAgent_behaviorsBehaviorsParserRuleCall_9_0() { return cAgent_behaviorsBehaviorsParserRuleCall_9_0; }
		
		////Agent Interactions
		//agent_interactions=AgentInteractions
		public Assignment getAgent_interactionsAssignment_10() { return cAgent_interactionsAssignment_10; }
		
		//AgentInteractions
		public RuleCall getAgent_interactionsAgentInteractionsParserRuleCall_10_0() { return cAgent_interactionsAgentInteractionsParserRuleCall_10_0; }
		
		////Agent Adaptive Processes
		//agent_adaptation=AdaptiveProcesses
		public Assignment getAgent_adaptationAssignment_11() { return cAgent_adaptationAssignment_11; }
		
		//AdaptiveProcesses
		public RuleCall getAgent_adaptationAdaptiveProcessesParserRuleCall_11_0() { return cAgent_adaptationAdaptiveProcessesParserRuleCall_11_0; }
		
		////Agent SubSystems
		//agent_subSystems=SubSystems
		public Assignment getAgent_subSystemsAssignment_12() { return cAgent_subSystemsAssignment_12; }
		
		//SubSystems
		public RuleCall getAgent_subSystemsSubSystemsParserRuleCall_12_0() { return cAgent_subSystemsSubSystemsParserRuleCall_12_0; }
		
		//'};'
		public Keyword getRightCurlyBracketSemicolonKeyword_13() { return cRightCurlyBracketSemicolonKeyword_13; }
	}
	public class EnvironmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.Environment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cENVIRONMENTKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cDescriptionKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cDescAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cDescSTRINGTerminalRuleCall_5_0 = (RuleCall)cDescAssignment_5.eContents().get(0);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cEnv_attributesAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cEnv_attributesEnvironment_RulesParserRuleCall_7_0 = (RuleCall)cEnv_attributesAssignment_7.eContents().get(0);
		private final Assignment cEnv_parametersAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cEnv_parametersParametersParserRuleCall_8_0 = (RuleCall)cEnv_parametersAssignment_8.eContents().get(0);
		private final Assignment cEnv_functionsAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cEnv_functionsFunctionsParserRuleCall_9_0 = (RuleCall)cEnv_functionsAssignment_9.eContents().get(0);
		private final Assignment cEnv_behaviorsAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cEnv_behaviorsBehaviorsParserRuleCall_10_0 = (RuleCall)cEnv_behaviorsAssignment_10.eContents().get(0);
		private final Assignment cEnv_interactionsAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cEnv_interactionsEnvironmentInteractionsParserRuleCall_11_0 = (RuleCall)cEnv_interactionsAssignment_11.eContents().get(0);
		private final Assignment cEnv_adaptationAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cEnv_adaptationAdaptiveProcessesParserRuleCall_12_0 = (RuleCall)cEnv_adaptationAssignment_12.eContents().get(0);
		private final Assignment cEnv_subSystemsAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final RuleCall cEnv_subSystemsSubSystemsParserRuleCall_13_0 = (RuleCall)cEnv_subSystemsAssignment_13.eContents().get(0);
		private final Assignment cEnv_groupinteractionsAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cEnv_groupinteractionsEGInteractionsParserRuleCall_14_0 = (RuleCall)cEnv_groupinteractionsAssignment_14.eContents().get(0);
		private final Keyword cRightCurlyBracketSemicolonKeyword_15 = (Keyword)cGroup.eContents().get(15);
		
		///**
		// * The ENVIRONMENT declaration
		// */ Environment:
		//	'ENVIRONMENT' name=ID ':' '{'
		//	'description:' desc=STRING ';'
		//	env_attributes=Environment_Rules
		//	//Environment Parameters
		//	env_parameters=Parameters
		//	//Environment Functions
		//	env_functions=Functions
		//	//Environment Behaviors
		//	env_behaviors=Behaviors
		//	//Environment Interactions
		//	env_interactions=EnvironmentInteractions
		//	//Environment Adaptive Processes
		//	env_adaptation=AdaptiveProcesses
		//	//Environment SubSystems
		//	env_subSystems=SubSystems
		//	//This needs to be enabled only if ULCASL is enabled
		//	env_groupinteractions=EGInteractions
		//	'};';
		@Override public ParserRule getRule() { return rule; }
		
		//'ENVIRONMENT' name=ID ':' '{' 'description:' desc=STRING ';' env_attributes=Environment_Rules //Environment Parameters
		//env_parameters=Parameters //Environment Functions
		//env_functions=Functions //Environment Behaviors
		//env_behaviors=Behaviors //Environment Interactions
		//env_interactions=EnvironmentInteractions //Environment Adaptive Processes
		//env_adaptation=AdaptiveProcesses //Environment SubSystems
		//env_subSystems=SubSystems //This needs to be enabled only if ULCASL is enabled
		//env_groupinteractions=EGInteractions '};'
		public Group getGroup() { return cGroup; }
		
		//'ENVIRONMENT'
		public Keyword getENVIRONMENTKeyword_0() { return cENVIRONMENTKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//'description:'
		public Keyword getDescriptionKeyword_4() { return cDescriptionKeyword_4; }
		
		//desc=STRING
		public Assignment getDescAssignment_5() { return cDescAssignment_5; }
		
		//STRING
		public RuleCall getDescSTRINGTerminalRuleCall_5_0() { return cDescSTRINGTerminalRuleCall_5_0; }
		
		//';'
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
		
		//env_attributes=Environment_Rules
		public Assignment getEnv_attributesAssignment_7() { return cEnv_attributesAssignment_7; }
		
		//Environment_Rules
		public RuleCall getEnv_attributesEnvironment_RulesParserRuleCall_7_0() { return cEnv_attributesEnvironment_RulesParserRuleCall_7_0; }
		
		////Environment Parameters
		//env_parameters=Parameters
		public Assignment getEnv_parametersAssignment_8() { return cEnv_parametersAssignment_8; }
		
		//Parameters
		public RuleCall getEnv_parametersParametersParserRuleCall_8_0() { return cEnv_parametersParametersParserRuleCall_8_0; }
		
		////Environment Functions
		//env_functions=Functions
		public Assignment getEnv_functionsAssignment_9() { return cEnv_functionsAssignment_9; }
		
		//Functions
		public RuleCall getEnv_functionsFunctionsParserRuleCall_9_0() { return cEnv_functionsFunctionsParserRuleCall_9_0; }
		
		////Environment Behaviors
		//env_behaviors=Behaviors
		public Assignment getEnv_behaviorsAssignment_10() { return cEnv_behaviorsAssignment_10; }
		
		//Behaviors
		public RuleCall getEnv_behaviorsBehaviorsParserRuleCall_10_0() { return cEnv_behaviorsBehaviorsParserRuleCall_10_0; }
		
		////Environment Interactions
		//env_interactions=EnvironmentInteractions
		public Assignment getEnv_interactionsAssignment_11() { return cEnv_interactionsAssignment_11; }
		
		//EnvironmentInteractions
		public RuleCall getEnv_interactionsEnvironmentInteractionsParserRuleCall_11_0() { return cEnv_interactionsEnvironmentInteractionsParserRuleCall_11_0; }
		
		////Environment Adaptive Processes
		//env_adaptation=AdaptiveProcesses
		public Assignment getEnv_adaptationAssignment_12() { return cEnv_adaptationAssignment_12; }
		
		//AdaptiveProcesses
		public RuleCall getEnv_adaptationAdaptiveProcessesParserRuleCall_12_0() { return cEnv_adaptationAdaptiveProcessesParserRuleCall_12_0; }
		
		////Environment SubSystems
		//env_subSystems=SubSystems
		public Assignment getEnv_subSystemsAssignment_13() { return cEnv_subSystemsAssignment_13; }
		
		//SubSystems
		public RuleCall getEnv_subSystemsSubSystemsParserRuleCall_13_0() { return cEnv_subSystemsSubSystemsParserRuleCall_13_0; }
		
		////This needs to be enabled only if ULCASL is enabled
		//env_groupinteractions=EGInteractions
		public Assignment getEnv_groupinteractionsAssignment_14() { return cEnv_groupinteractionsAssignment_14; }
		
		//EGInteractions
		public RuleCall getEnv_groupinteractionsEGInteractionsParserRuleCall_14_0() { return cEnv_groupinteractionsEGInteractionsParserRuleCall_14_0; }
		
		//'};'
		public Keyword getRightCurlyBracketSemicolonKeyword_15() { return cRightCurlyBracketSemicolonKeyword_15; }
	}
	public class GroupElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.Group");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGROUPKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cDescriptionKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cDescAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cDescSTRINGTerminalRuleCall_5_0 = (RuleCall)cDescAssignment_5.eContents().get(0);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cGroup_rulesAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cGroup_rulesGroup_RulesParserRuleCall_7_0 = (RuleCall)cGroup_rulesAssignment_7.eContents().get(0);
		private final Assignment cGroup_parametersAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cGroup_parametersParametersParserRuleCall_8_0 = (RuleCall)cGroup_parametersAssignment_8.eContents().get(0);
		private final Assignment cGroup_functionsAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cGroup_functionsFunctionsParserRuleCall_9_0 = (RuleCall)cGroup_functionsAssignment_9.eContents().get(0);
		private final Assignment cGroup_behaviorsAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cGroup_behaviorsBehaviorsParserRuleCall_10_0 = (RuleCall)cGroup_behaviorsAssignment_10.eContents().get(0);
		private final Assignment cGroup_external_interactionsAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cGroup_external_interactionsGroupExternalInteractionsParserRuleCall_11_0 = (RuleCall)cGroup_external_interactionsAssignment_11.eContents().get(0);
		private final Assignment cGroup_internal_interactionsAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cGroup_internal_interactionsGroupInternalInteractionsParserRuleCall_12_0 = (RuleCall)cGroup_internal_interactionsAssignment_12.eContents().get(0);
		private final Keyword cRightCurlyBracketSemicolonKeyword_13 = (Keyword)cGroup.eContents().get(13);
		
		//Group:
		//	'GROUP' name=ID ':' '{'
		//	'description:' desc=STRING ';'
		//	group_rules=Group_Rules
		//	group_parameters=Parameters
		//	group_functions=Functions
		//	group_behaviors=Behaviors
		//	group_external_interactions=GroupExternalInteractions
		//	group_internal_interactions=GroupInternalInteractions
		//	'};';
		@Override public ParserRule getRule() { return rule; }
		
		//'GROUP' name=ID ':' '{' 'description:' desc=STRING ';' group_rules=Group_Rules group_parameters=Parameters
		//group_functions=Functions group_behaviors=Behaviors group_external_interactions=GroupExternalInteractions
		//group_internal_interactions=GroupInternalInteractions '};'
		public Group getGroup() { return cGroup; }
		
		//'GROUP'
		public Keyword getGROUPKeyword_0() { return cGROUPKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//'description:'
		public Keyword getDescriptionKeyword_4() { return cDescriptionKeyword_4; }
		
		//desc=STRING
		public Assignment getDescAssignment_5() { return cDescAssignment_5; }
		
		//STRING
		public RuleCall getDescSTRINGTerminalRuleCall_5_0() { return cDescSTRINGTerminalRuleCall_5_0; }
		
		//';'
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
		
		//group_rules=Group_Rules
		public Assignment getGroup_rulesAssignment_7() { return cGroup_rulesAssignment_7; }
		
		//Group_Rules
		public RuleCall getGroup_rulesGroup_RulesParserRuleCall_7_0() { return cGroup_rulesGroup_RulesParserRuleCall_7_0; }
		
		//group_parameters=Parameters
		public Assignment getGroup_parametersAssignment_8() { return cGroup_parametersAssignment_8; }
		
		//Parameters
		public RuleCall getGroup_parametersParametersParserRuleCall_8_0() { return cGroup_parametersParametersParserRuleCall_8_0; }
		
		//group_functions=Functions
		public Assignment getGroup_functionsAssignment_9() { return cGroup_functionsAssignment_9; }
		
		//Functions
		public RuleCall getGroup_functionsFunctionsParserRuleCall_9_0() { return cGroup_functionsFunctionsParserRuleCall_9_0; }
		
		//group_behaviors=Behaviors
		public Assignment getGroup_behaviorsAssignment_10() { return cGroup_behaviorsAssignment_10; }
		
		//Behaviors
		public RuleCall getGroup_behaviorsBehaviorsParserRuleCall_10_0() { return cGroup_behaviorsBehaviorsParserRuleCall_10_0; }
		
		//group_external_interactions=GroupExternalInteractions
		public Assignment getGroup_external_interactionsAssignment_11() { return cGroup_external_interactionsAssignment_11; }
		
		//GroupExternalInteractions
		public RuleCall getGroup_external_interactionsGroupExternalInteractionsParserRuleCall_11_0() { return cGroup_external_interactionsGroupExternalInteractionsParserRuleCall_11_0; }
		
		//group_internal_interactions=GroupInternalInteractions
		public Assignment getGroup_internal_interactionsAssignment_12() { return cGroup_internal_interactionsAssignment_12; }
		
		//GroupInternalInteractions
		public RuleCall getGroup_internal_interactionsGroupInternalInteractionsParserRuleCall_12_0() { return cGroup_internal_interactionsGroupInternalInteractionsParserRuleCall_12_0; }
		
		//'};'
		public Keyword getRightCurlyBracketSemicolonKeyword_13() { return cRightCurlyBracketSemicolonKeyword_13; }
	}
	public class Group_RulesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.Group_Rules");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGroup_RulesAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cGroup_rulesKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLayout_typeKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cLayout_typeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cLayout_typeLayoutTypeEnumRuleCall_4_0 = (RuleCall)cLayout_typeAssignment_4.eContents().get(0);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cRightCurlyBracketSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Group_Rules:
		//	{Group_Rules}
		//	'group_rules:' '{'
		//	'layout_type:' layout_type=LayoutType ';'
		//	'};';
		@Override public ParserRule getRule() { return rule; }
		
		//{Group_Rules} 'group_rules:' '{' 'layout_type:' layout_type=LayoutType ';' '};'
		public Group getGroup() { return cGroup; }
		
		//{Group_Rules}
		public Action getGroup_RulesAction_0() { return cGroup_RulesAction_0; }
		
		//'group_rules:'
		public Keyword getGroup_rulesKeyword_1() { return cGroup_rulesKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'layout_type:'
		public Keyword getLayout_typeKeyword_3() { return cLayout_typeKeyword_3; }
		
		//layout_type=LayoutType
		public Assignment getLayout_typeAssignment_4() { return cLayout_typeAssignment_4; }
		
		//LayoutType
		public RuleCall getLayout_typeLayoutTypeEnumRuleCall_4_0() { return cLayout_typeLayoutTypeEnumRuleCall_4_0; }
		
		//';'
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
		
		//'};'
		public Keyword getRightCurlyBracketSemicolonKeyword_6() { return cRightCurlyBracketSemicolonKeyword_6; }
	}
	public class GroupExternalInteractionsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.GroupExternalInteractions");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGroupExternalInteractionsAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cExternal_interactionsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cExternal_interactionsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cExternal_interactionsGroupExternalInteractionParserRuleCall_3_0 = (RuleCall)cExternal_interactionsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//GroupExternalInteractions:
		//	{GroupExternalInteractions}
		//	//These are essentially interactions that rely on slightly more complicated functions
		//	//and must be wrapped as a message to the environment
		//	'external_interactions:' '{'
		//	external_interactions+=GroupExternalInteraction*
		//	'};';
		@Override public ParserRule getRule() { return rule; }
		
		//{GroupExternalInteractions} //These are essentially interactions that rely on slightly more complicated functions
		////and must be wrapped as a message to the environment
		//'external_interactions:' '{' external_interactions+=GroupExternalInteraction* '};'
		public Group getGroup() { return cGroup; }
		
		//{GroupExternalInteractions}
		public Action getGroupExternalInteractionsAction_0() { return cGroupExternalInteractionsAction_0; }
		
		////These are essentially interactions that rely on slightly more complicated functions
		////and must be wrapped as a message to the environment
		//'external_interactions:'
		public Keyword getExternal_interactionsKeyword_1() { return cExternal_interactionsKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//external_interactions+=GroupExternalInteraction*
		public Assignment getExternal_interactionsAssignment_3() { return cExternal_interactionsAssignment_3; }
		
		//GroupExternalInteraction
		public RuleCall getExternal_interactionsGroupExternalInteractionParserRuleCall_3_0() { return cExternal_interactionsGroupExternalInteractionParserRuleCall_3_0; }
		
		//'};'
		public Keyword getRightCurlyBracketSemicolonKeyword_4() { return cRightCurlyBracketSemicolonKeyword_4; }
	}
	public class GroupExternalInteractionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.GroupExternalInteraction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGroupExternalInteractionAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTransmissionPhaseAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTransmissionPhaseTransmission_PhaseEnumRuleCall_3_0 = (RuleCall)cTransmissionPhaseAssignment_3.eContents().get(0);
		private final Keyword cRightSquareBracketLeftSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cTransmissionContentsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cTransmissionContentsTransmission_ContentsEnumRuleCall_5_0 = (RuleCall)cTransmissionContentsAssignment_5.eContents().get(0);
		private final Keyword cRightSquareBracketLeftSquareBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cTransmissionRepeatAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cTransmissionRepeatTransmission_RepeatEnumRuleCall_7_0 = (RuleCall)cTransmissionRepeatAssignment_7.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cLeftParenthesisKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cReaction_time_parmAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cReaction_time_parmExpressionParserRuleCall_8_1_0 = (RuleCall)cReaction_time_parmAssignment_8_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_8_2 = (Keyword)cGroup_8.eContents().get(2);
		private final Keyword cRightSquareBracketLeftParenthesisKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Assignment cFunctionParametersAssignment_10_0 = (Assignment)cGroup_10.eContents().get(0);
		private final RuleCall cFunctionParametersFunctionParameterParserRuleCall_10_0_0 = (RuleCall)cFunctionParametersAssignment_10_0.eContents().get(0);
		private final Group cGroup_10_1 = (Group)cGroup_10.eContents().get(1);
		private final Keyword cCommaKeyword_10_1_0 = (Keyword)cGroup_10_1.eContents().get(0);
		private final Assignment cFunctionParametersAssignment_10_1_1 = (Assignment)cGroup_10_1.eContents().get(1);
		private final RuleCall cFunctionParametersFunctionParameterParserRuleCall_10_1_1_0 = (RuleCall)cFunctionParametersAssignment_10_1_1.eContents().get(0);
		private final Keyword cRightParenthesisColonKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cLeftCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Group cGroup_13 = (Group)cGroup.eContents().get(13);
		private final Alternatives cAlternatives_13_0 = (Alternatives)cGroup_13.eContents().get(0);
		private final Assignment cBodyAssignment_13_0_0 = (Assignment)cAlternatives_13_0.eContents().get(0);
		private final RuleCall cBodyFieldParserRuleCall_13_0_0_0 = (RuleCall)cBodyAssignment_13_0_0.eContents().get(0);
		private final Assignment cBodyAssignment_13_0_1 = (Assignment)cAlternatives_13_0.eContents().get(1);
		private final RuleCall cBodyExpressionParserRuleCall_13_0_1_0 = (RuleCall)cBodyAssignment_13_0_1.eContents().get(0);
		private final Assignment cBodyAssignment_13_0_2 = (Assignment)cAlternatives_13_0.eContents().get(2);
		private final RuleCall cBodyFormulaParserRuleCall_13_0_2_0 = (RuleCall)cBodyAssignment_13_0_2.eContents().get(0);
		private final Assignment cBodyAssignment_13_0_3 = (Assignment)cAlternatives_13_0.eContents().get(3);
		private final RuleCall cBodySelfAssignedFormulaParserRuleCall_13_0_3_0 = (RuleCall)cBodyAssignment_13_0_3.eContents().get(0);
		private final Keyword cSemicolonKeyword_13_1 = (Keyword)cGroup_13.eContents().get(1);
		private final Keyword cRightCurlyBracketSemicolonKeyword_14 = (Keyword)cGroup.eContents().get(14);
		
		//GroupExternalInteraction:
		//	{GroupExternalInteraction} name=ID '[' transmissionPhase=Transmission_Phase ']['
		//	transmissionContents=Transmission_Contents ']['
		//	transmissionRepeat=Transmission_Repeat ('(' reaction_time_parm=Expression ')')? ']('
		//	(functionParameters+=FunctionParameter (',' functionParameters+=FunctionParameter)*)? '):' '{' ((body+=Field |
		//	body+=Expression | body+=Formula | body+=SelfAssignedFormula) ';')*
		//	'};';
		@Override public ParserRule getRule() { return rule; }
		
		//{GroupExternalInteraction} name=ID '[' transmissionPhase=Transmission_Phase ']['
		//transmissionContents=Transmission_Contents '][' transmissionRepeat=Transmission_Repeat ('('
		//reaction_time_parm=Expression ')')? '](' (functionParameters+=FunctionParameter (','
		//functionParameters+=FunctionParameter)*)? '):' '{' ((body+=Field | body+=Expression | body+=Formula |
		//body+=SelfAssignedFormula) ';')* '};'
		public Group getGroup() { return cGroup; }
		
		//{GroupExternalInteraction}
		public Action getGroupExternalInteractionAction_0() { return cGroupExternalInteractionAction_0; }
		
		////Change interaction type, interaction triggger type, and params
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_2() { return cLeftSquareBracketKeyword_2; }
		
		//transmissionPhase=Transmission_Phase
		public Assignment getTransmissionPhaseAssignment_3() { return cTransmissionPhaseAssignment_3; }
		
		//Transmission_Phase
		public RuleCall getTransmissionPhaseTransmission_PhaseEnumRuleCall_3_0() { return cTransmissionPhaseTransmission_PhaseEnumRuleCall_3_0; }
		
		//']['
		public Keyword getRightSquareBracketLeftSquareBracketKeyword_4() { return cRightSquareBracketLeftSquareBracketKeyword_4; }
		
		//transmissionContents=Transmission_Contents
		public Assignment getTransmissionContentsAssignment_5() { return cTransmissionContentsAssignment_5; }
		
		//Transmission_Contents
		public RuleCall getTransmissionContentsTransmission_ContentsEnumRuleCall_5_0() { return cTransmissionContentsTransmission_ContentsEnumRuleCall_5_0; }
		
		//']['
		public Keyword getRightSquareBracketLeftSquareBracketKeyword_6() { return cRightSquareBracketLeftSquareBracketKeyword_6; }
		
		//transmissionRepeat=Transmission_Repeat
		public Assignment getTransmissionRepeatAssignment_7() { return cTransmissionRepeatAssignment_7; }
		
		//Transmission_Repeat
		public RuleCall getTransmissionRepeatTransmission_RepeatEnumRuleCall_7_0() { return cTransmissionRepeatTransmission_RepeatEnumRuleCall_7_0; }
		
		//('(' reaction_time_parm=Expression ')')?
		public Group getGroup_8() { return cGroup_8; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_8_0() { return cLeftParenthesisKeyword_8_0; }
		
		//reaction_time_parm=Expression
		public Assignment getReaction_time_parmAssignment_8_1() { return cReaction_time_parmAssignment_8_1; }
		
		//Expression
		public RuleCall getReaction_time_parmExpressionParserRuleCall_8_1_0() { return cReaction_time_parmExpressionParserRuleCall_8_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_8_2() { return cRightParenthesisKeyword_8_2; }
		
		//']('
		public Keyword getRightSquareBracketLeftParenthesisKeyword_9() { return cRightSquareBracketLeftParenthesisKeyword_9; }
		
		//(functionParameters+=FunctionParameter (',' functionParameters+=FunctionParameter)*)?
		public Group getGroup_10() { return cGroup_10; }
		
		//functionParameters+=FunctionParameter
		public Assignment getFunctionParametersAssignment_10_0() { return cFunctionParametersAssignment_10_0; }
		
		//FunctionParameter
		public RuleCall getFunctionParametersFunctionParameterParserRuleCall_10_0_0() { return cFunctionParametersFunctionParameterParserRuleCall_10_0_0; }
		
		//(',' functionParameters+=FunctionParameter)*
		public Group getGroup_10_1() { return cGroup_10_1; }
		
		//','
		public Keyword getCommaKeyword_10_1_0() { return cCommaKeyword_10_1_0; }
		
		//functionParameters+=FunctionParameter
		public Assignment getFunctionParametersAssignment_10_1_1() { return cFunctionParametersAssignment_10_1_1; }
		
		//FunctionParameter
		public RuleCall getFunctionParametersFunctionParameterParserRuleCall_10_1_1_0() { return cFunctionParametersFunctionParameterParserRuleCall_10_1_1_0; }
		
		//'):'
		public Keyword getRightParenthesisColonKeyword_11() { return cRightParenthesisColonKeyword_11; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_12() { return cLeftCurlyBracketKeyword_12; }
		
		//((body+=Field | body+=Expression | body+=Formula | body+=SelfAssignedFormula) ';')*
		public Group getGroup_13() { return cGroup_13; }
		
		//body+=Field | body+=Expression | body+=Formula | body+=SelfAssignedFormula
		public Alternatives getAlternatives_13_0() { return cAlternatives_13_0; }
		
		//body+=Field
		public Assignment getBodyAssignment_13_0_0() { return cBodyAssignment_13_0_0; }
		
		//Field
		public RuleCall getBodyFieldParserRuleCall_13_0_0_0() { return cBodyFieldParserRuleCall_13_0_0_0; }
		
		//body+=Expression
		public Assignment getBodyAssignment_13_0_1() { return cBodyAssignment_13_0_1; }
		
		//Expression
		public RuleCall getBodyExpressionParserRuleCall_13_0_1_0() { return cBodyExpressionParserRuleCall_13_0_1_0; }
		
		//body+=Formula
		public Assignment getBodyAssignment_13_0_2() { return cBodyAssignment_13_0_2; }
		
		//Formula
		public RuleCall getBodyFormulaParserRuleCall_13_0_2_0() { return cBodyFormulaParserRuleCall_13_0_2_0; }
		
		//body+=SelfAssignedFormula
		public Assignment getBodyAssignment_13_0_3() { return cBodyAssignment_13_0_3; }
		
		//SelfAssignedFormula
		public RuleCall getBodySelfAssignedFormulaParserRuleCall_13_0_3_0() { return cBodySelfAssignedFormulaParserRuleCall_13_0_3_0; }
		
		//';'
		public Keyword getSemicolonKeyword_13_1() { return cSemicolonKeyword_13_1; }
		
		//'};'
		public Keyword getRightCurlyBracketSemicolonKeyword_14() { return cRightCurlyBracketSemicolonKeyword_14; }
	}
	public class GroupInternalInteractionsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.GroupInternalInteractions");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGroupInternalInteractionsAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cInternal_interactionsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cInternal_interactionsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cInternal_interactionsGroupInternalInteractionParserRuleCall_3_0 = (RuleCall)cInternal_interactionsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//GroupInternalInteractions:
		//	{GroupInternalInteractions}
		//	//These are also essentially interactions that rely on slightly more complicated functions
		//	//but do not need to be messages as the contained agents make the request directly from the
		//	//group layer
		//	'internal_interactions:' '{'
		//	internal_interactions+=GroupInternalInteraction*
		//	'};';
		@Override public ParserRule getRule() { return rule; }
		
		//{GroupInternalInteractions} //These are also essentially interactions that rely on slightly more complicated functions
		////but do not need to be messages as the contained agents make the request directly from the
		////group layer
		//'internal_interactions:' '{' internal_interactions+=GroupInternalInteraction* '};'
		public Group getGroup() { return cGroup; }
		
		//{GroupInternalInteractions}
		public Action getGroupInternalInteractionsAction_0() { return cGroupInternalInteractionsAction_0; }
		
		////These are also essentially interactions that rely on slightly more complicated functions
		////but do not need to be messages as the contained agents make the request directly from the
		////group layer
		//'internal_interactions:'
		public Keyword getInternal_interactionsKeyword_1() { return cInternal_interactionsKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//internal_interactions+=GroupInternalInteraction*
		public Assignment getInternal_interactionsAssignment_3() { return cInternal_interactionsAssignment_3; }
		
		//GroupInternalInteraction
		public RuleCall getInternal_interactionsGroupInternalInteractionParserRuleCall_3_0() { return cInternal_interactionsGroupInternalInteractionParserRuleCall_3_0; }
		
		//'};'
		public Keyword getRightCurlyBracketSemicolonKeyword_4() { return cRightCurlyBracketSemicolonKeyword_4; }
	}
	public class GroupInternalInteractionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.GroupInternalInteraction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGroupInternalInteractionAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cInteraction_typeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cInteraction_typeInteractionTypeEnumRuleCall_3_0 = (RuleCall)cInteraction_typeAssignment_3.eContents().get(0);
		private final Keyword cRightSquareBracketLeftSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cTrigger_typeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cTrigger_typeInteractionTriggerTypesEnumRuleCall_5_0 = (RuleCall)cTrigger_typeAssignment_5.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cTriggerParamAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cTriggerParamInteractionTriggerParameterParserRuleCall_7_0 = (RuleCall)cTriggerParamAssignment_7.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cRightSquareBracketLeftParenthesisKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Assignment cFunctionParametersAssignment_10_0 = (Assignment)cGroup_10.eContents().get(0);
		private final RuleCall cFunctionParametersFunctionParameterParserRuleCall_10_0_0 = (RuleCall)cFunctionParametersAssignment_10_0.eContents().get(0);
		private final Group cGroup_10_1 = (Group)cGroup_10.eContents().get(1);
		private final Keyword cCommaKeyword_10_1_0 = (Keyword)cGroup_10_1.eContents().get(0);
		private final Assignment cFunctionParametersAssignment_10_1_1 = (Assignment)cGroup_10_1.eContents().get(1);
		private final RuleCall cFunctionParametersFunctionParameterParserRuleCall_10_1_1_0 = (RuleCall)cFunctionParametersAssignment_10_1_1.eContents().get(0);
		private final Keyword cRightParenthesisColonKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cLeftCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Group cGroup_13 = (Group)cGroup.eContents().get(13);
		private final Alternatives cAlternatives_13_0 = (Alternatives)cGroup_13.eContents().get(0);
		private final Assignment cBodyAssignment_13_0_0 = (Assignment)cAlternatives_13_0.eContents().get(0);
		private final RuleCall cBodyFieldParserRuleCall_13_0_0_0 = (RuleCall)cBodyAssignment_13_0_0.eContents().get(0);
		private final Assignment cBodyAssignment_13_0_1 = (Assignment)cAlternatives_13_0.eContents().get(1);
		private final RuleCall cBodyExpressionParserRuleCall_13_0_1_0 = (RuleCall)cBodyAssignment_13_0_1.eContents().get(0);
		private final Assignment cBodyAssignment_13_0_2 = (Assignment)cAlternatives_13_0.eContents().get(2);
		private final RuleCall cBodyFormulaParserRuleCall_13_0_2_0 = (RuleCall)cBodyAssignment_13_0_2.eContents().get(0);
		private final Assignment cBodyAssignment_13_0_3 = (Assignment)cAlternatives_13_0.eContents().get(3);
		private final RuleCall cBodySelfAssignedFormulaParserRuleCall_13_0_3_0 = (RuleCall)cBodyAssignment_13_0_3.eContents().get(0);
		private final Keyword cSemicolonKeyword_13_1 = (Keyword)cGroup_13.eContents().get(1);
		private final Keyword cRightCurlyBracketSemicolonKeyword_14 = (Keyword)cGroup.eContents().get(14);
		
		//GroupInternalInteraction:
		//	{GroupInternalInteraction} name=ID '[' interaction_type=InteractionType '][' trigger_type=InteractionTriggerTypes '('
		//	triggerParam=InteractionTriggerParameter? ')' '](' (functionParameters+=FunctionParameter (','
		//	functionParameters+=FunctionParameter)*)? '):' '{' ((body+=Field | body+=Expression | body+=Formula |
		//	body+=SelfAssignedFormula) ';')*
		//	'};';
		@Override public ParserRule getRule() { return rule; }
		
		//{GroupInternalInteraction} name=ID '[' interaction_type=InteractionType '][' trigger_type=InteractionTriggerTypes '('
		//triggerParam=InteractionTriggerParameter? ')' '](' (functionParameters+=FunctionParameter (','
		//functionParameters+=FunctionParameter)*)? '):' '{' ((body+=Field | body+=Expression | body+=Formula |
		//body+=SelfAssignedFormula) ';')* '};'
		public Group getGroup() { return cGroup; }
		
		//{GroupInternalInteraction}
		public Action getGroupInternalInteractionAction_0() { return cGroupInternalInteractionAction_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_2() { return cLeftSquareBracketKeyword_2; }
		
		//interaction_type=InteractionType
		public Assignment getInteraction_typeAssignment_3() { return cInteraction_typeAssignment_3; }
		
		//InteractionType
		public RuleCall getInteraction_typeInteractionTypeEnumRuleCall_3_0() { return cInteraction_typeInteractionTypeEnumRuleCall_3_0; }
		
		//']['
		public Keyword getRightSquareBracketLeftSquareBracketKeyword_4() { return cRightSquareBracketLeftSquareBracketKeyword_4; }
		
		//trigger_type=InteractionTriggerTypes
		public Assignment getTrigger_typeAssignment_5() { return cTrigger_typeAssignment_5; }
		
		//InteractionTriggerTypes
		public RuleCall getTrigger_typeInteractionTriggerTypesEnumRuleCall_5_0() { return cTrigger_typeInteractionTriggerTypesEnumRuleCall_5_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_6() { return cLeftParenthesisKeyword_6; }
		
		//triggerParam=InteractionTriggerParameter?
		public Assignment getTriggerParamAssignment_7() { return cTriggerParamAssignment_7; }
		
		//InteractionTriggerParameter
		public RuleCall getTriggerParamInteractionTriggerParameterParserRuleCall_7_0() { return cTriggerParamInteractionTriggerParameterParserRuleCall_7_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_8() { return cRightParenthesisKeyword_8; }
		
		//']('
		public Keyword getRightSquareBracketLeftParenthesisKeyword_9() { return cRightSquareBracketLeftParenthesisKeyword_9; }
		
		//(functionParameters+=FunctionParameter (',' functionParameters+=FunctionParameter)*)?
		public Group getGroup_10() { return cGroup_10; }
		
		//functionParameters+=FunctionParameter
		public Assignment getFunctionParametersAssignment_10_0() { return cFunctionParametersAssignment_10_0; }
		
		//FunctionParameter
		public RuleCall getFunctionParametersFunctionParameterParserRuleCall_10_0_0() { return cFunctionParametersFunctionParameterParserRuleCall_10_0_0; }
		
		//(',' functionParameters+=FunctionParameter)*
		public Group getGroup_10_1() { return cGroup_10_1; }
		
		//','
		public Keyword getCommaKeyword_10_1_0() { return cCommaKeyword_10_1_0; }
		
		//functionParameters+=FunctionParameter
		public Assignment getFunctionParametersAssignment_10_1_1() { return cFunctionParametersAssignment_10_1_1; }
		
		//FunctionParameter
		public RuleCall getFunctionParametersFunctionParameterParserRuleCall_10_1_1_0() { return cFunctionParametersFunctionParameterParserRuleCall_10_1_1_0; }
		
		//'):'
		public Keyword getRightParenthesisColonKeyword_11() { return cRightParenthesisColonKeyword_11; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_12() { return cLeftCurlyBracketKeyword_12; }
		
		//((body+=Field | body+=Expression | body+=Formula | body+=SelfAssignedFormula) ';')*
		public Group getGroup_13() { return cGroup_13; }
		
		//body+=Field | body+=Expression | body+=Formula | body+=SelfAssignedFormula
		public Alternatives getAlternatives_13_0() { return cAlternatives_13_0; }
		
		//body+=Field
		public Assignment getBodyAssignment_13_0_0() { return cBodyAssignment_13_0_0; }
		
		//Field
		public RuleCall getBodyFieldParserRuleCall_13_0_0_0() { return cBodyFieldParserRuleCall_13_0_0_0; }
		
		//body+=Expression
		public Assignment getBodyAssignment_13_0_1() { return cBodyAssignment_13_0_1; }
		
		//Expression
		public RuleCall getBodyExpressionParserRuleCall_13_0_1_0() { return cBodyExpressionParserRuleCall_13_0_1_0; }
		
		//body+=Formula
		public Assignment getBodyAssignment_13_0_2() { return cBodyAssignment_13_0_2; }
		
		//Formula
		public RuleCall getBodyFormulaParserRuleCall_13_0_2_0() { return cBodyFormulaParserRuleCall_13_0_2_0; }
		
		//body+=SelfAssignedFormula
		public Assignment getBodyAssignment_13_0_3() { return cBodyAssignment_13_0_3; }
		
		//SelfAssignedFormula
		public RuleCall getBodySelfAssignedFormulaParserRuleCall_13_0_3_0() { return cBodySelfAssignedFormulaParserRuleCall_13_0_3_0; }
		
		//';'
		public Keyword getSemicolonKeyword_13_1() { return cSemicolonKeyword_13_1; }
		
		//'};'
		public Keyword getRightCurlyBracketSemicolonKeyword_14() { return cRightCurlyBracketSemicolonKeyword_14; }
	}
	public class ParametersElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.Parameters");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cParametersAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cParametersKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Alternatives cAlternatives_3_0 = (Alternatives)cGroup_3.eContents().get(0);
		private final Assignment cFieldsAssignment_3_0_0 = (Assignment)cAlternatives_3_0.eContents().get(0);
		private final RuleCall cFieldsFieldParserRuleCall_3_0_0_0 = (RuleCall)cFieldsAssignment_3_0_0.eContents().get(0);
		private final Assignment cFieldsAssignment_3_0_1 = (Assignment)cAlternatives_3_0.eContents().get(1);
		private final RuleCall cFieldsConcernParserRuleCall_3_0_1_0 = (RuleCall)cFieldsAssignment_3_0_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Keyword cRightCurlyBracketSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Parameters:
		//	{Parameters}
		//	// 	name = 'fields' //How can we force a name so that eclipse is happy?
		//	//	name = "parameters" ': {' //Gah How
		//	'parameters:' '{' ((fields+=Field | fields+=Concern) ';')*
		//	'};';
		@Override public ParserRule getRule() { return rule; }
		
		//{Parameters} // 	name = 'fields' //How can we force a name so that eclipse is happy?
		////	name = "parameters" ': {' //Gah How
		//'parameters:' '{' ((fields+=Field | fields+=Concern) ';')* '};'
		public Group getGroup() { return cGroup; }
		
		//{Parameters}
		public Action getParametersAction_0() { return cParametersAction_0; }
		
		//// 	name = 'fields' //How can we force a name so that eclipse is happy?
		////	name = "parameters" ': {' //Gah How
		//'parameters:'
		public Keyword getParametersKeyword_1() { return cParametersKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//((fields+=Field | fields+=Concern) ';')*
		public Group getGroup_3() { return cGroup_3; }
		
		//fields+=Field | fields+=Concern
		public Alternatives getAlternatives_3_0() { return cAlternatives_3_0; }
		
		//fields+=Field
		public Assignment getFieldsAssignment_3_0_0() { return cFieldsAssignment_3_0_0; }
		
		//Field
		public RuleCall getFieldsFieldParserRuleCall_3_0_0_0() { return cFieldsFieldParserRuleCall_3_0_0_0; }
		
		//fields+=Concern
		public Assignment getFieldsAssignment_3_0_1() { return cFieldsAssignment_3_0_1; }
		
		//Concern
		public RuleCall getFieldsConcernParserRuleCall_3_0_1_0() { return cFieldsConcernParserRuleCall_3_0_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_3_1() { return cSemicolonKeyword_3_1; }
		
		//'};'
		public Keyword getRightCurlyBracketSemicolonKeyword_4() { return cRightCurlyBracketSemicolonKeyword_4; }
	}
	public class FieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.Field");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cDeclarationAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cDeclarationDataTypeDeclarationParserRuleCall_0_0 = (RuleCall)cDeclarationAssignment_0.eContents().get(0);
		private final Assignment cAgentFieldRefAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cAgentFieldRefAgentFieldReferenceParserRuleCall_1_0 = (RuleCall)cAgentFieldRefAssignment_1.eContents().get(0);
		private final Assignment cEnvFieldRefAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cEnvFieldRefEnvironmentFieldReferenceParserRuleCall_2_0 = (RuleCall)cEnvFieldRefAssignment_2.eContents().get(0);
		private final Assignment cGrpFieldRefAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final RuleCall cGrpFieldRefGroupFieldReferenceParserRuleCall_3_0 = (RuleCall)cGrpFieldRefAssignment_3.eContents().get(0);
		
		///**
		// * Field:
		// * Can be an ass
		// */ Field:
		//	declaration=DataTypeDeclaration | agentFieldRef=AgentFieldReference | envFieldRef=EnvironmentFieldReference |
		//	grpFieldRef=GroupFieldReference;
		@Override public ParserRule getRule() { return rule; }
		
		//declaration=DataTypeDeclaration | agentFieldRef=AgentFieldReference | envFieldRef=EnvironmentFieldReference |
		//grpFieldRef=GroupFieldReference
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//declaration=DataTypeDeclaration
		public Assignment getDeclarationAssignment_0() { return cDeclarationAssignment_0; }
		
		//DataTypeDeclaration
		public RuleCall getDeclarationDataTypeDeclarationParserRuleCall_0_0() { return cDeclarationDataTypeDeclarationParserRuleCall_0_0; }
		
		//agentFieldRef=AgentFieldReference
		public Assignment getAgentFieldRefAssignment_1() { return cAgentFieldRefAssignment_1; }
		
		//AgentFieldReference
		public RuleCall getAgentFieldRefAgentFieldReferenceParserRuleCall_1_0() { return cAgentFieldRefAgentFieldReferenceParserRuleCall_1_0; }
		
		//envFieldRef=EnvironmentFieldReference
		public Assignment getEnvFieldRefAssignment_2() { return cEnvFieldRefAssignment_2; }
		
		//EnvironmentFieldReference
		public RuleCall getEnvFieldRefEnvironmentFieldReferenceParserRuleCall_2_0() { return cEnvFieldRefEnvironmentFieldReferenceParserRuleCall_2_0; }
		
		//grpFieldRef=GroupFieldReference
		public Assignment getGrpFieldRefAssignment_3() { return cGrpFieldRefAssignment_3; }
		
		//GroupFieldReference
		public RuleCall getGrpFieldRefGroupFieldReferenceParserRuleCall_3_0() { return cGrpFieldRefGroupFieldReferenceParserRuleCall_3_0; }
	}
	public class AgentFieldReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.AgentFieldReference");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAgentFieldReferenceAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAgtKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cAgentAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cAgentAgentCrossReference_2_0 = (CrossReference)cAgentAssignment_2.eContents().get(0);
		private final RuleCall cAgentAgentIDTerminalRuleCall_2_0_1 = (RuleCall)cAgentAgentCrossReference_2_0.eContents().get(1);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameIDTerminalRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cEqualsSignKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cAssignmentAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cAssignmentExpressionParserRuleCall_5_1_0 = (RuleCall)cAssignmentAssignment_5_1.eContents().get(0);
		
		//AgentFieldReference Symbol:
		//	{AgentFieldReference}
		//	'agt' agent=[Agent] ':' name=ID ('=' assignment=Expression)?;
		@Override public ParserRule getRule() { return rule; }
		
		//{AgentFieldReference} 'agt' agent=[Agent] ':' name=ID ('=' assignment=Expression)?
		public Group getGroup() { return cGroup; }
		
		//{AgentFieldReference}
		public Action getAgentFieldReferenceAction_0() { return cAgentFieldReferenceAction_0; }
		
		//'agt'
		public Keyword getAgtKeyword_1() { return cAgtKeyword_1; }
		
		//agent=[Agent]
		public Assignment getAgentAssignment_2() { return cAgentAssignment_2; }
		
		//[Agent]
		public CrossReference getAgentAgentCrossReference_2_0() { return cAgentAgentCrossReference_2_0; }
		
		//ID
		public RuleCall getAgentAgentIDTerminalRuleCall_2_0_1() { return cAgentAgentIDTerminalRuleCall_2_0_1; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//name=ID
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_4_0() { return cNameIDTerminalRuleCall_4_0; }
		
		//('=' assignment=Expression)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'='
		public Keyword getEqualsSignKeyword_5_0() { return cEqualsSignKeyword_5_0; }
		
		//assignment=Expression
		public Assignment getAssignmentAssignment_5_1() { return cAssignmentAssignment_5_1; }
		
		//Expression
		public RuleCall getAssignmentExpressionParserRuleCall_5_1_0() { return cAssignmentExpressionParserRuleCall_5_1_0; }
	}
	public class EnvironmentFieldReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.EnvironmentFieldReference");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEnvironmentFieldReferenceAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cEnvKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cEnvAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cEnvEnvironmentCrossReference_2_0 = (CrossReference)cEnvAssignment_2.eContents().get(0);
		private final RuleCall cEnvEnvironmentIDTerminalRuleCall_2_0_1 = (RuleCall)cEnvEnvironmentCrossReference_2_0.eContents().get(1);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameIDTerminalRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cEqualsSignKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cAssignmentAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cAssignmentExpressionParserRuleCall_5_1_0 = (RuleCall)cAssignmentAssignment_5_1.eContents().get(0);
		
		//EnvironmentFieldReference Symbol:
		//	{EnvironmentFieldReference}
		//	'env' env=[Environment] ':' name=ID ('=' assignment=Expression)?;
		@Override public ParserRule getRule() { return rule; }
		
		//{EnvironmentFieldReference} 'env' env=[Environment] ':' name=ID ('=' assignment=Expression)?
		public Group getGroup() { return cGroup; }
		
		//{EnvironmentFieldReference}
		public Action getEnvironmentFieldReferenceAction_0() { return cEnvironmentFieldReferenceAction_0; }
		
		//'env'
		public Keyword getEnvKeyword_1() { return cEnvKeyword_1; }
		
		//env=[Environment]
		public Assignment getEnvAssignment_2() { return cEnvAssignment_2; }
		
		//[Environment]
		public CrossReference getEnvEnvironmentCrossReference_2_0() { return cEnvEnvironmentCrossReference_2_0; }
		
		//ID
		public RuleCall getEnvEnvironmentIDTerminalRuleCall_2_0_1() { return cEnvEnvironmentIDTerminalRuleCall_2_0_1; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//name=ID
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_4_0() { return cNameIDTerminalRuleCall_4_0; }
		
		//('=' assignment=Expression)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'='
		public Keyword getEqualsSignKeyword_5_0() { return cEqualsSignKeyword_5_0; }
		
		//assignment=Expression
		public Assignment getAssignmentAssignment_5_1() { return cAssignmentAssignment_5_1; }
		
		//Expression
		public RuleCall getAssignmentExpressionParserRuleCall_5_1_0() { return cAssignmentExpressionParserRuleCall_5_1_0; }
	}
	public class GroupFieldReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.GroupFieldReference");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGroupFieldReferenceAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cGrpKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cGrpAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cGrpGroupCrossReference_2_0 = (CrossReference)cGrpAssignment_2.eContents().get(0);
		private final RuleCall cGrpGroupIDTerminalRuleCall_2_0_1 = (RuleCall)cGrpGroupCrossReference_2_0.eContents().get(1);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameIDTerminalRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cEqualsSignKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cAssignmentAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cAssignmentExpressionParserRuleCall_5_1_0 = (RuleCall)cAssignmentAssignment_5_1.eContents().get(0);
		
		//GroupFieldReference Symbol:
		//	{GroupFieldReference}
		//	'grp' grp=[Group] ':' name=ID ('=' assignment=Expression)?;
		@Override public ParserRule getRule() { return rule; }
		
		//{GroupFieldReference} 'grp' grp=[Group] ':' name=ID ('=' assignment=Expression)?
		public Group getGroup() { return cGroup; }
		
		//{GroupFieldReference}
		public Action getGroupFieldReferenceAction_0() { return cGroupFieldReferenceAction_0; }
		
		//'grp'
		public Keyword getGrpKeyword_1() { return cGrpKeyword_1; }
		
		//grp=[Group]
		public Assignment getGrpAssignment_2() { return cGrpAssignment_2; }
		
		//[Group]
		public CrossReference getGrpGroupCrossReference_2_0() { return cGrpGroupCrossReference_2_0; }
		
		//ID
		public RuleCall getGrpGroupIDTerminalRuleCall_2_0_1() { return cGrpGroupIDTerminalRuleCall_2_0_1; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//name=ID
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_4_0() { return cNameIDTerminalRuleCall_4_0; }
		
		//('=' assignment=Expression)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'='
		public Keyword getEqualsSignKeyword_5_0() { return cEqualsSignKeyword_5_0; }
		
		//assignment=Expression
		public Assignment getAssignmentAssignment_5_1() { return cAssignmentAssignment_5_1; }
		
		//Expression
		public RuleCall getAssignmentExpressionParserRuleCall_5_1_0() { return cAssignmentExpressionParserRuleCall_5_1_0; }
	}
	public class FunctionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.Function");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cFunctionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cDefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cFunctionParametersAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cFunctionParametersFunctionParameterParserRuleCall_4_0 = (RuleCall)cFunctionParametersAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cFunctionParametersAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cFunctionParametersFunctionParameterParserRuleCall_5_1_0 = (RuleCall)cFunctionParametersAssignment_5_1.eContents().get(0);
		private final Keyword cRightParenthesisLeftParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cReturnTypeAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cReturnTypeFunctionParameterParserRuleCall_7_0 = (RuleCall)cReturnTypeAssignment_7.eContents().get(0);
		private final Keyword cRightParenthesisColonKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cLeftCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Alternatives cAlternatives_10_0 = (Alternatives)cGroup_10.eContents().get(0);
		private final Assignment cBodyAssignment_10_0_0 = (Assignment)cAlternatives_10_0.eContents().get(0);
		private final RuleCall cBodyFieldParserRuleCall_10_0_0_0 = (RuleCall)cBodyAssignment_10_0_0.eContents().get(0);
		private final Assignment cBodyAssignment_10_0_1 = (Assignment)cAlternatives_10_0.eContents().get(1);
		private final RuleCall cBodyExpressionParserRuleCall_10_0_1_0 = (RuleCall)cBodyAssignment_10_0_1.eContents().get(0);
		private final Assignment cBodyAssignment_10_0_2 = (Assignment)cAlternatives_10_0.eContents().get(2);
		private final RuleCall cBodyFormulaParserRuleCall_10_0_2_0 = (RuleCall)cBodyAssignment_10_0_2.eContents().get(0);
		private final Assignment cBodyAssignment_10_0_3 = (Assignment)cAlternatives_10_0.eContents().get(3);
		private final RuleCall cBodySelfAssignedFormulaParserRuleCall_10_0_3_0 = (RuleCall)cBodyAssignment_10_0_3.eContents().get(0);
		private final Assignment cBodyAssignment_10_0_4 = (Assignment)cAlternatives_10_0.eContents().get(4);
		private final RuleCall cBodyRaw_Java_BlockParserRuleCall_10_0_4_0 = (RuleCall)cBodyAssignment_10_0_4.eContents().get(0);
		private final Keyword cSemicolonKeyword_10_1 = (Keyword)cGroup_10.eContents().get(1);
		private final Keyword cRightCurlyBracketSemicolonKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		///**
		// * Function:
		// * name:(inputs){};
		// */ Function:
		//	{Function}
		//	'def' name=ID '(' functionParameters+=FunctionParameter? (',' functionParameters+=FunctionParameter)* ')('
		//	returnType=FunctionParameter? '):' '{' ((body+=Field | body+=Expression | body+=Formula | body+=SelfAssignedFormula |
		//	body+=Raw_Java_Block) ';')*
		//	'};';
		@Override public ParserRule getRule() { return rule; }
		
		//{Function} 'def' name=ID '(' functionParameters+=FunctionParameter? (',' functionParameters+=FunctionParameter)* ')('
		//returnType=FunctionParameter? '):' '{' ((body+=Field | body+=Expression | body+=Formula | body+=SelfAssignedFormula |
		//body+=Raw_Java_Block) ';')* '};'
		public Group getGroup() { return cGroup; }
		
		//{Function}
		public Action getFunctionAction_0() { return cFunctionAction_0; }
		
		//'def'
		public Keyword getDefKeyword_1() { return cDefKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }
		
		//functionParameters+=FunctionParameter?
		public Assignment getFunctionParametersAssignment_4() { return cFunctionParametersAssignment_4; }
		
		//FunctionParameter
		public RuleCall getFunctionParametersFunctionParameterParserRuleCall_4_0() { return cFunctionParametersFunctionParameterParserRuleCall_4_0; }
		
		//(',' functionParameters+=FunctionParameter)*
		public Group getGroup_5() { return cGroup_5; }
		
		//','
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }
		
		//functionParameters+=FunctionParameter
		public Assignment getFunctionParametersAssignment_5_1() { return cFunctionParametersAssignment_5_1; }
		
		//FunctionParameter
		public RuleCall getFunctionParametersFunctionParameterParserRuleCall_5_1_0() { return cFunctionParametersFunctionParameterParserRuleCall_5_1_0; }
		
		//')('
		public Keyword getRightParenthesisLeftParenthesisKeyword_6() { return cRightParenthesisLeftParenthesisKeyword_6; }
		
		//returnType=FunctionParameter?
		public Assignment getReturnTypeAssignment_7() { return cReturnTypeAssignment_7; }
		
		//FunctionParameter
		public RuleCall getReturnTypeFunctionParameterParserRuleCall_7_0() { return cReturnTypeFunctionParameterParserRuleCall_7_0; }
		
		//'):'
		public Keyword getRightParenthesisColonKeyword_8() { return cRightParenthesisColonKeyword_8; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_9() { return cLeftCurlyBracketKeyword_9; }
		
		//((body+=Field | body+=Expression | body+=Formula | body+=SelfAssignedFormula | body+=Raw_Java_Block) ';')*
		public Group getGroup_10() { return cGroup_10; }
		
		//body+=Field | body+=Expression | body+=Formula | body+=SelfAssignedFormula | body+=Raw_Java_Block
		public Alternatives getAlternatives_10_0() { return cAlternatives_10_0; }
		
		//body+=Field
		public Assignment getBodyAssignment_10_0_0() { return cBodyAssignment_10_0_0; }
		
		//Field
		public RuleCall getBodyFieldParserRuleCall_10_0_0_0() { return cBodyFieldParserRuleCall_10_0_0_0; }
		
		//body+=Expression
		public Assignment getBodyAssignment_10_0_1() { return cBodyAssignment_10_0_1; }
		
		//Expression
		public RuleCall getBodyExpressionParserRuleCall_10_0_1_0() { return cBodyExpressionParserRuleCall_10_0_1_0; }
		
		//body+=Formula
		public Assignment getBodyAssignment_10_0_2() { return cBodyAssignment_10_0_2; }
		
		//Formula
		public RuleCall getBodyFormulaParserRuleCall_10_0_2_0() { return cBodyFormulaParserRuleCall_10_0_2_0; }
		
		//body+=SelfAssignedFormula
		public Assignment getBodyAssignment_10_0_3() { return cBodyAssignment_10_0_3; }
		
		//SelfAssignedFormula
		public RuleCall getBodySelfAssignedFormulaParserRuleCall_10_0_3_0() { return cBodySelfAssignedFormulaParserRuleCall_10_0_3_0; }
		
		//body+=Raw_Java_Block
		public Assignment getBodyAssignment_10_0_4() { return cBodyAssignment_10_0_4; }
		
		//Raw_Java_Block
		public RuleCall getBodyRaw_Java_BlockParserRuleCall_10_0_4_0() { return cBodyRaw_Java_BlockParserRuleCall_10_0_4_0; }
		
		//';'
		public Keyword getSemicolonKeyword_10_1() { return cSemicolonKeyword_10_1; }
		
		//'};'
		public Keyword getRightCurlyBracketSemicolonKeyword_11() { return cRightCurlyBracketSemicolonKeyword_11; }
	}
	public class FunctionsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.Functions");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cFunctionsAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cFunctionsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cFunctionsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cFunctionsFunctionParserRuleCall_3_0 = (RuleCall)cFunctionsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Functions:
		//	{Functions}
		//	'functions:' '{'
		//	functions+=Function*
		//	'};';
		@Override public ParserRule getRule() { return rule; }
		
		//{Functions} 'functions:' '{' functions+=Function* '};'
		public Group getGroup() { return cGroup; }
		
		//{Functions}
		public Action getFunctionsAction_0() { return cFunctionsAction_0; }
		
		//'functions:'
		public Keyword getFunctionsKeyword_1() { return cFunctionsKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//functions+=Function*
		public Assignment getFunctionsAssignment_3() { return cFunctionsAssignment_3; }
		
		//Function
		public RuleCall getFunctionsFunctionParserRuleCall_3_0() { return cFunctionsFunctionParserRuleCall_3_0; }
		
		//'};'
		public Keyword getRightCurlyBracketSemicolonKeyword_4() { return cRightCurlyBracketSemicolonKeyword_4; }
	}
	public class FunctionParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.FunctionParameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cFunctionParameterAction_0 = (Action)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cVarKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final Assignment cTypeAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final RuleCall cTypePrimitiveTypeParserRuleCall_1_0_1_0 = (RuleCall)cTypeAssignment_1_0_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Keyword cAgtKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cAgentAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final CrossReference cAgentAgentCrossReference_1_1_1_0 = (CrossReference)cAgentAssignment_1_1_1.eContents().get(0);
		private final RuleCall cAgentAgentIDTerminalRuleCall_1_1_1_0_1 = (RuleCall)cAgentAgentCrossReference_1_1_1_0.eContents().get(1);
		private final Group cGroup_1_2 = (Group)cAlternatives_1.eContents().get(2);
		private final Keyword cEnvKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final Assignment cEnvAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final CrossReference cEnvEnvironmentCrossReference_1_2_1_0 = (CrossReference)cEnvAssignment_1_2_1.eContents().get(0);
		private final RuleCall cEnvEnvironmentIDTerminalRuleCall_1_2_1_0_1 = (RuleCall)cEnvEnvironmentCrossReference_1_2_1_0.eContents().get(1);
		private final Group cGroup_1_3 = (Group)cAlternatives_1.eContents().get(3);
		private final Keyword cVarKeyword_1_3_0 = (Keyword)cGroup_1_3.eContents().get(0);
		private final Assignment cObjAssignment_1_3_1 = (Assignment)cGroup_1_3.eContents().get(1);
		private final CrossReference cObjNonPrimitiveTypeCrossReference_1_3_1_0 = (CrossReference)cObjAssignment_1_3_1.eContents().get(0);
		private final RuleCall cObjNonPrimitiveTypeIDTerminalRuleCall_1_3_1_0_1 = (RuleCall)cObjNonPrimitiveTypeCrossReference_1_3_1_0.eContents().get(1);
		private final Alternatives cAlternatives_1_3_2 = (Alternatives)cGroup_1_3.eContents().get(2);
		private final Group cGroup_1_3_2_0 = (Group)cAlternatives_1_3_2.eContents().get(0);
		private final Keyword cColonKeyword_1_3_2_0_0 = (Keyword)cGroup_1_3_2_0.eContents().get(0);
		private final Assignment cUseObjAssignment_1_3_2_0_1 = (Assignment)cGroup_1_3_2_0.eContents().get(1);
		private final CrossReference cUseObjNonPrimitiveTypeCrossReference_1_3_2_0_1_0 = (CrossReference)cUseObjAssignment_1_3_2_0_1.eContents().get(0);
		private final RuleCall cUseObjNonPrimitiveTypeIDTerminalRuleCall_1_3_2_0_1_0_1 = (RuleCall)cUseObjNonPrimitiveTypeCrossReference_1_3_2_0_1_0.eContents().get(1);
		private final Group cGroup_1_3_2_1 = (Group)cAlternatives_1_3_2.eContents().get(1);
		private final Keyword cColonKeyword_1_3_2_1_0 = (Keyword)cGroup_1_3_2_1.eContents().get(0);
		private final Assignment cUseTypeAssignment_1_3_2_1_1 = (Assignment)cGroup_1_3_2_1.eContents().get(1);
		private final RuleCall cUseTypePrimitiveTypeParserRuleCall_1_3_2_1_1_0 = (RuleCall)cUseTypeAssignment_1_3_2_1_1.eContents().get(0);
		private final Group cGroup_1_3_2_2 = (Group)cAlternatives_1_3_2.eContents().get(2);
		private final Keyword cLessThanSignKeyword_1_3_2_2_0 = (Keyword)cGroup_1_3_2_2.eContents().get(0);
		private final Alternatives cAlternatives_1_3_2_2_1 = (Alternatives)cGroup_1_3_2_2.eContents().get(1);
		private final Group cGroup_1_3_2_2_1_0 = (Group)cAlternatives_1_3_2_2_1.eContents().get(0);
		private final Keyword cGrpKeyword_1_3_2_2_1_0_0 = (Keyword)cGroup_1_3_2_2_1_0.eContents().get(0);
		private final Assignment cUseGroupAssignment_1_3_2_2_1_0_1 = (Assignment)cGroup_1_3_2_2_1_0.eContents().get(1);
		private final CrossReference cUseGroupGroupCrossReference_1_3_2_2_1_0_1_0 = (CrossReference)cUseGroupAssignment_1_3_2_2_1_0_1.eContents().get(0);
		private final RuleCall cUseGroupGroupIDTerminalRuleCall_1_3_2_2_1_0_1_0_1 = (RuleCall)cUseGroupGroupCrossReference_1_3_2_2_1_0_1_0.eContents().get(1);
		private final Group cGroup_1_3_2_2_1_1 = (Group)cAlternatives_1_3_2_2_1.eContents().get(1);
		private final Keyword cAgtKeyword_1_3_2_2_1_1_0 = (Keyword)cGroup_1_3_2_2_1_1.eContents().get(0);
		private final Assignment cUseAgentAssignment_1_3_2_2_1_1_1 = (Assignment)cGroup_1_3_2_2_1_1.eContents().get(1);
		private final CrossReference cUseAgentAgentCrossReference_1_3_2_2_1_1_1_0 = (CrossReference)cUseAgentAssignment_1_3_2_2_1_1_1.eContents().get(0);
		private final RuleCall cUseAgentAgentIDTerminalRuleCall_1_3_2_2_1_1_1_0_1 = (RuleCall)cUseAgentAgentCrossReference_1_3_2_2_1_1_1_0.eContents().get(1);
		private final Group cGroup_1_3_2_2_1_2 = (Group)cAlternatives_1_3_2_2_1.eContents().get(2);
		private final Keyword cEnvKeyword_1_3_2_2_1_2_0 = (Keyword)cGroup_1_3_2_2_1_2.eContents().get(0);
		private final Assignment cUseEnvAssignment_1_3_2_2_1_2_1 = (Assignment)cGroup_1_3_2_2_1_2.eContents().get(1);
		private final CrossReference cUseEnvEnvironmentCrossReference_1_3_2_2_1_2_1_0 = (CrossReference)cUseEnvAssignment_1_3_2_2_1_2_1.eContents().get(0);
		private final RuleCall cUseEnvEnvironmentIDTerminalRuleCall_1_3_2_2_1_2_1_0_1 = (RuleCall)cUseEnvEnvironmentCrossReference_1_3_2_2_1_2_1_0.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_1_3_2_2_2 = (Keyword)cGroup_1_3_2_2.eContents().get(2);
		private final Group cGroup_1_4 = (Group)cAlternatives_1.eContents().get(4);
		private final Keyword cGrpKeyword_1_4_0 = (Keyword)cGroup_1_4.eContents().get(0);
		private final Assignment cGrpAssignment_1_4_1 = (Assignment)cGroup_1_4.eContents().get(1);
		private final CrossReference cGrpGroupCrossReference_1_4_1_0 = (CrossReference)cGrpAssignment_1_4_1.eContents().get(0);
		private final RuleCall cGrpGroupIDTerminalRuleCall_1_4_1_0_1 = (RuleCall)cGrpGroupCrossReference_1_4_1_0.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		
		//FunctionParameter Symbol:
		//	{FunctionParameter} ('var' type=PrimitiveType | 'agt' agent=[Agent] | 'env' env=[Environment] | 'var'
		//	obj=[NonPrimitiveType] (':' useObj=[NonPrimitiveType] |
		//	':' useType=PrimitiveType | '<' ('grp.' useGroup=[Group] | 'agt.' useAgent=[Agent] | 'env.' useEnv=[Environment])
		//	'>')? | 'grp' grp=[Group])
		//	':' name=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//{FunctionParameter} ('var' type=PrimitiveType | 'agt' agent=[Agent] | 'env' env=[Environment] | 'var'
		//obj=[NonPrimitiveType] (':' useObj=[NonPrimitiveType] | ':' useType=PrimitiveType | '<' ('grp.' useGroup=[Group] |
		//'agt.' useAgent=[Agent] | 'env.' useEnv=[Environment]) '>')? | 'grp' grp=[Group]) ':' name=ID
		public Group getGroup() { return cGroup; }
		
		//{FunctionParameter}
		public Action getFunctionParameterAction_0() { return cFunctionParameterAction_0; }
		
		//'var' type=PrimitiveType | 'agt' agent=[Agent] | 'env' env=[Environment] | 'var' obj=[NonPrimitiveType] (':'
		//useObj=[NonPrimitiveType] | ':' useType=PrimitiveType | '<' ('grp.' useGroup=[Group] | 'agt.' useAgent=[Agent] | 'env.'
		//useEnv=[Environment]) '>')? | 'grp' grp=[Group]
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'var' type=PrimitiveType
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'var'
		public Keyword getVarKeyword_1_0_0() { return cVarKeyword_1_0_0; }
		
		//type=PrimitiveType
		public Assignment getTypeAssignment_1_0_1() { return cTypeAssignment_1_0_1; }
		
		//PrimitiveType
		public RuleCall getTypePrimitiveTypeParserRuleCall_1_0_1_0() { return cTypePrimitiveTypeParserRuleCall_1_0_1_0; }
		
		//'agt' agent=[Agent]
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'agt'
		public Keyword getAgtKeyword_1_1_0() { return cAgtKeyword_1_1_0; }
		
		//agent=[Agent]
		public Assignment getAgentAssignment_1_1_1() { return cAgentAssignment_1_1_1; }
		
		//[Agent]
		public CrossReference getAgentAgentCrossReference_1_1_1_0() { return cAgentAgentCrossReference_1_1_1_0; }
		
		//ID
		public RuleCall getAgentAgentIDTerminalRuleCall_1_1_1_0_1() { return cAgentAgentIDTerminalRuleCall_1_1_1_0_1; }
		
		//'env' env=[Environment]
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//'env'
		public Keyword getEnvKeyword_1_2_0() { return cEnvKeyword_1_2_0; }
		
		//env=[Environment]
		public Assignment getEnvAssignment_1_2_1() { return cEnvAssignment_1_2_1; }
		
		//[Environment]
		public CrossReference getEnvEnvironmentCrossReference_1_2_1_0() { return cEnvEnvironmentCrossReference_1_2_1_0; }
		
		//ID
		public RuleCall getEnvEnvironmentIDTerminalRuleCall_1_2_1_0_1() { return cEnvEnvironmentIDTerminalRuleCall_1_2_1_0_1; }
		
		//'var' obj=[NonPrimitiveType] (':' useObj=[NonPrimitiveType] | ':' useType=PrimitiveType | '<' ('grp.' useGroup=[Group] |
		//'agt.' useAgent=[Agent] | 'env.' useEnv=[Environment]) '>')?
		public Group getGroup_1_3() { return cGroup_1_3; }
		
		//'var'
		public Keyword getVarKeyword_1_3_0() { return cVarKeyword_1_3_0; }
		
		//obj=[NonPrimitiveType]
		public Assignment getObjAssignment_1_3_1() { return cObjAssignment_1_3_1; }
		
		//[NonPrimitiveType]
		public CrossReference getObjNonPrimitiveTypeCrossReference_1_3_1_0() { return cObjNonPrimitiveTypeCrossReference_1_3_1_0; }
		
		//ID
		public RuleCall getObjNonPrimitiveTypeIDTerminalRuleCall_1_3_1_0_1() { return cObjNonPrimitiveTypeIDTerminalRuleCall_1_3_1_0_1; }
		
		//(':' useObj=[NonPrimitiveType] | ':' useType=PrimitiveType | '<' ('grp.' useGroup=[Group] | 'agt.' useAgent=[Agent] |
		//'env.' useEnv=[Environment]) '>')?
		public Alternatives getAlternatives_1_3_2() { return cAlternatives_1_3_2; }
		
		//':' useObj=[NonPrimitiveType]
		public Group getGroup_1_3_2_0() { return cGroup_1_3_2_0; }
		
		//':'
		public Keyword getColonKeyword_1_3_2_0_0() { return cColonKeyword_1_3_2_0_0; }
		
		//useObj=[NonPrimitiveType]
		public Assignment getUseObjAssignment_1_3_2_0_1() { return cUseObjAssignment_1_3_2_0_1; }
		
		//[NonPrimitiveType]
		public CrossReference getUseObjNonPrimitiveTypeCrossReference_1_3_2_0_1_0() { return cUseObjNonPrimitiveTypeCrossReference_1_3_2_0_1_0; }
		
		//ID
		public RuleCall getUseObjNonPrimitiveTypeIDTerminalRuleCall_1_3_2_0_1_0_1() { return cUseObjNonPrimitiveTypeIDTerminalRuleCall_1_3_2_0_1_0_1; }
		
		//':' useType=PrimitiveType
		public Group getGroup_1_3_2_1() { return cGroup_1_3_2_1; }
		
		//':'
		public Keyword getColonKeyword_1_3_2_1_0() { return cColonKeyword_1_3_2_1_0; }
		
		//useType=PrimitiveType
		public Assignment getUseTypeAssignment_1_3_2_1_1() { return cUseTypeAssignment_1_3_2_1_1; }
		
		//PrimitiveType
		public RuleCall getUseTypePrimitiveTypeParserRuleCall_1_3_2_1_1_0() { return cUseTypePrimitiveTypeParserRuleCall_1_3_2_1_1_0; }
		
		//'<' ('grp.' useGroup=[Group] | 'agt.' useAgent=[Agent] | 'env.' useEnv=[Environment]) '>'
		public Group getGroup_1_3_2_2() { return cGroup_1_3_2_2; }
		
		//'<'
		public Keyword getLessThanSignKeyword_1_3_2_2_0() { return cLessThanSignKeyword_1_3_2_2_0; }
		
		//'grp.' useGroup=[Group] | 'agt.' useAgent=[Agent] | 'env.' useEnv=[Environment]
		public Alternatives getAlternatives_1_3_2_2_1() { return cAlternatives_1_3_2_2_1; }
		
		//'grp.' useGroup=[Group]
		public Group getGroup_1_3_2_2_1_0() { return cGroup_1_3_2_2_1_0; }
		
		//'grp.'
		public Keyword getGrpKeyword_1_3_2_2_1_0_0() { return cGrpKeyword_1_3_2_2_1_0_0; }
		
		//useGroup=[Group]
		public Assignment getUseGroupAssignment_1_3_2_2_1_0_1() { return cUseGroupAssignment_1_3_2_2_1_0_1; }
		
		//[Group]
		public CrossReference getUseGroupGroupCrossReference_1_3_2_2_1_0_1_0() { return cUseGroupGroupCrossReference_1_3_2_2_1_0_1_0; }
		
		//ID
		public RuleCall getUseGroupGroupIDTerminalRuleCall_1_3_2_2_1_0_1_0_1() { return cUseGroupGroupIDTerminalRuleCall_1_3_2_2_1_0_1_0_1; }
		
		//'agt.' useAgent=[Agent]
		public Group getGroup_1_3_2_2_1_1() { return cGroup_1_3_2_2_1_1; }
		
		//'agt.'
		public Keyword getAgtKeyword_1_3_2_2_1_1_0() { return cAgtKeyword_1_3_2_2_1_1_0; }
		
		//useAgent=[Agent]
		public Assignment getUseAgentAssignment_1_3_2_2_1_1_1() { return cUseAgentAssignment_1_3_2_2_1_1_1; }
		
		//[Agent]
		public CrossReference getUseAgentAgentCrossReference_1_3_2_2_1_1_1_0() { return cUseAgentAgentCrossReference_1_3_2_2_1_1_1_0; }
		
		//ID
		public RuleCall getUseAgentAgentIDTerminalRuleCall_1_3_2_2_1_1_1_0_1() { return cUseAgentAgentIDTerminalRuleCall_1_3_2_2_1_1_1_0_1; }
		
		//'env.' useEnv=[Environment]
		public Group getGroup_1_3_2_2_1_2() { return cGroup_1_3_2_2_1_2; }
		
		//'env.'
		public Keyword getEnvKeyword_1_3_2_2_1_2_0() { return cEnvKeyword_1_3_2_2_1_2_0; }
		
		//useEnv=[Environment]
		public Assignment getUseEnvAssignment_1_3_2_2_1_2_1() { return cUseEnvAssignment_1_3_2_2_1_2_1; }
		
		//[Environment]
		public CrossReference getUseEnvEnvironmentCrossReference_1_3_2_2_1_2_1_0() { return cUseEnvEnvironmentCrossReference_1_3_2_2_1_2_1_0; }
		
		//ID
		public RuleCall getUseEnvEnvironmentIDTerminalRuleCall_1_3_2_2_1_2_1_0_1() { return cUseEnvEnvironmentIDTerminalRuleCall_1_3_2_2_1_2_1_0_1; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_1_3_2_2_2() { return cGreaterThanSignKeyword_1_3_2_2_2; }
		
		//'grp' grp=[Group]
		public Group getGroup_1_4() { return cGroup_1_4; }
		
		//'grp'
		public Keyword getGrpKeyword_1_4_0() { return cGrpKeyword_1_4_0; }
		
		//grp=[Group]
		public Assignment getGrpAssignment_1_4_1() { return cGrpAssignment_1_4_1; }
		
		//[Group]
		public CrossReference getGrpGroupCrossReference_1_4_1_0() { return cGrpGroupCrossReference_1_4_1_0; }
		
		//ID
		public RuleCall getGrpGroupIDTerminalRuleCall_1_4_1_0_1() { return cGrpGroupIDTerminalRuleCall_1_4_1_0_1; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }
	}
	public class ConcernElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.Concern");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cBehavior_stateKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cDescriptionKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cDescAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cDescSTRINGTerminalRuleCall_5_0 = (RuleCall)cDescAssignment_5.eContents().get(0);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cStateFieldsAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cStateFieldsState_Block_RefsParserRuleCall_7_0 = (RuleCall)cStateFieldsAssignment_7.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cCommaKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cStateFieldsAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cStateFieldsState_Block_RefsParserRuleCall_8_1_0 = (RuleCall)cStateFieldsAssignment_8_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cRightCurlyBracketSemicolonKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		///*These StateBlocks inform things
		// * 
		// * */ Concern:
		//	"behavior_state" name=ID ':' '{'
		//	"description:" desc=STRING ';'
		//	stateFields+=State_Block_Refs (',' stateFields+=State_Block_Refs)* ';'
		//	"};";
		@Override public ParserRule getRule() { return rule; }
		
		//"behavior_state" name=ID ':' '{' "description:" desc=STRING ';' stateFields+=State_Block_Refs (','
		//stateFields+=State_Block_Refs)* ';' "};"
		public Group getGroup() { return cGroup; }
		
		//"behavior_state"
		public Keyword getBehavior_stateKeyword_0() { return cBehavior_stateKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//"description:"
		public Keyword getDescriptionKeyword_4() { return cDescriptionKeyword_4; }
		
		//desc=STRING
		public Assignment getDescAssignment_5() { return cDescAssignment_5; }
		
		//STRING
		public RuleCall getDescSTRINGTerminalRuleCall_5_0() { return cDescSTRINGTerminalRuleCall_5_0; }
		
		//';'
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
		
		//stateFields+=State_Block_Refs
		public Assignment getStateFieldsAssignment_7() { return cStateFieldsAssignment_7; }
		
		//State_Block_Refs
		public RuleCall getStateFieldsState_Block_RefsParserRuleCall_7_0() { return cStateFieldsState_Block_RefsParserRuleCall_7_0; }
		
		//(',' stateFields+=State_Block_Refs)*
		public Group getGroup_8() { return cGroup_8; }
		
		//','
		public Keyword getCommaKeyword_8_0() { return cCommaKeyword_8_0; }
		
		//stateFields+=State_Block_Refs
		public Assignment getStateFieldsAssignment_8_1() { return cStateFieldsAssignment_8_1; }
		
		//State_Block_Refs
		public RuleCall getStateFieldsState_Block_RefsParserRuleCall_8_1_0() { return cStateFieldsState_Block_RefsParserRuleCall_8_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_9() { return cSemicolonKeyword_9; }
		
		//"};"
		public Keyword getRightCurlyBracketSemicolonKeyword_10() { return cRightCurlyBracketSemicolonKeyword_10; }
	}
	public class State_Block_RefsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.State_Block_Refs");
		private final Assignment cRefAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cRefSymbolCrossReference_0 = (CrossReference)cRefAssignment.eContents().get(0);
		private final RuleCall cRefSymbolIDTerminalRuleCall_0_1 = (RuleCall)cRefSymbolCrossReference_0.eContents().get(1);
		
		//State_Block_Refs:
		//	ref=[Symbol];
		@Override public ParserRule getRule() { return rule; }
		
		//ref=[Symbol]
		public Assignment getRefAssignment() { return cRefAssignment; }
		
		//[Symbol]
		public CrossReference getRefSymbolCrossReference_0() { return cRefSymbolCrossReference_0; }
		
		//ID
		public RuleCall getRefSymbolIDTerminalRuleCall_0_1() { return cRefSymbolIDTerminalRuleCall_0_1; }
	}
	public class BehaviorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.Behavior");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cBehavior_typeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cBehavior_typeBehaviorTypeEnumRuleCall_2_0 = (RuleCall)cBehavior_typeAssignment_2.eContents().get(0);
		private final Keyword cRightSquareBracketLeftSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cBehavior_reaction_timeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cBehavior_reaction_timeBehaviorReactionTimeEnumRuleCall_4_0 = (RuleCall)cBehavior_reaction_timeAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cLeftParenthesisKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cReaction_time_parmAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cReaction_time_parmExpressionParserRuleCall_5_1_0 = (RuleCall)cReaction_time_parmAssignment_5_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5_2 = (Keyword)cGroup_5.eContents().get(2);
		private final Keyword cRightSquareBracketLeftParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cFunctionParametersAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cFunctionParametersFunctionParameterParserRuleCall_7_0 = (RuleCall)cFunctionParametersAssignment_7.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cCommaKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cFunctionParametersAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cFunctionParametersFunctionParameterParserRuleCall_8_1_0 = (RuleCall)cFunctionParametersAssignment_8_1.eContents().get(0);
		private final Keyword cRightParenthesisColonKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cLeftCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Alternatives cAlternatives_11_0 = (Alternatives)cGroup_11.eContents().get(0);
		private final Assignment cBodyAssignment_11_0_0 = (Assignment)cAlternatives_11_0.eContents().get(0);
		private final RuleCall cBodyFieldParserRuleCall_11_0_0_0 = (RuleCall)cBodyAssignment_11_0_0.eContents().get(0);
		private final Assignment cBodyAssignment_11_0_1 = (Assignment)cAlternatives_11_0.eContents().get(1);
		private final RuleCall cBodyExpressionParserRuleCall_11_0_1_0 = (RuleCall)cBodyAssignment_11_0_1.eContents().get(0);
		private final Assignment cBodyAssignment_11_0_2 = (Assignment)cAlternatives_11_0.eContents().get(2);
		private final RuleCall cBodyFormulaParserRuleCall_11_0_2_0 = (RuleCall)cBodyAssignment_11_0_2.eContents().get(0);
		private final Assignment cBodyAssignment_11_0_3 = (Assignment)cAlternatives_11_0.eContents().get(3);
		private final RuleCall cBodySelfAssignedFormulaParserRuleCall_11_0_3_0 = (RuleCall)cBodyAssignment_11_0_3.eContents().get(0);
		private final Keyword cSemicolonKeyword_11_1 = (Keyword)cGroup_11.eContents().get(1);
		private final Keyword cRightCurlyBracketSemicolonKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		///**
		// * Behavior:
		// * name:[BehaviorType](Inputs){};
		// */ Behavior:
		//	name=ID '[' behavior_type=BehaviorType '][' behavior_reaction_time=BehaviorReactionTime ('('
		//	reaction_time_parm=Expression ')')? ']('
		//	functionParameters+=FunctionParameter? (',' functionParameters+=FunctionParameter)* '):' '{' ((body+=Field |
		//	body+=Expression | body+=Formula | body+=SelfAssignedFormula) ';')*
		//	'};';
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID '[' behavior_type=BehaviorType '][' behavior_reaction_time=BehaviorReactionTime ('('
		//reaction_time_parm=Expression ')')? '](' functionParameters+=FunctionParameter? (','
		//functionParameters+=FunctionParameter)* '):' '{' ((body+=Field | body+=Expression | body+=Formula |
		//body+=SelfAssignedFormula) ';')* '};'
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }
		
		//behavior_type=BehaviorType
		public Assignment getBehavior_typeAssignment_2() { return cBehavior_typeAssignment_2; }
		
		//BehaviorType
		public RuleCall getBehavior_typeBehaviorTypeEnumRuleCall_2_0() { return cBehavior_typeBehaviorTypeEnumRuleCall_2_0; }
		
		//']['
		public Keyword getRightSquareBracketLeftSquareBracketKeyword_3() { return cRightSquareBracketLeftSquareBracketKeyword_3; }
		
		//behavior_reaction_time=BehaviorReactionTime
		public Assignment getBehavior_reaction_timeAssignment_4() { return cBehavior_reaction_timeAssignment_4; }
		
		//BehaviorReactionTime
		public RuleCall getBehavior_reaction_timeBehaviorReactionTimeEnumRuleCall_4_0() { return cBehavior_reaction_timeBehaviorReactionTimeEnumRuleCall_4_0; }
		
		//('(' reaction_time_parm=Expression ')')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_5_0() { return cLeftParenthesisKeyword_5_0; }
		
		//reaction_time_parm=Expression
		public Assignment getReaction_time_parmAssignment_5_1() { return cReaction_time_parmAssignment_5_1; }
		
		//Expression
		public RuleCall getReaction_time_parmExpressionParserRuleCall_5_1_0() { return cReaction_time_parmExpressionParserRuleCall_5_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5_2() { return cRightParenthesisKeyword_5_2; }
		
		//']('
		public Keyword getRightSquareBracketLeftParenthesisKeyword_6() { return cRightSquareBracketLeftParenthesisKeyword_6; }
		
		//functionParameters+=FunctionParameter?
		public Assignment getFunctionParametersAssignment_7() { return cFunctionParametersAssignment_7; }
		
		//FunctionParameter
		public RuleCall getFunctionParametersFunctionParameterParserRuleCall_7_0() { return cFunctionParametersFunctionParameterParserRuleCall_7_0; }
		
		//(',' functionParameters+=FunctionParameter)*
		public Group getGroup_8() { return cGroup_8; }
		
		//','
		public Keyword getCommaKeyword_8_0() { return cCommaKeyword_8_0; }
		
		//functionParameters+=FunctionParameter
		public Assignment getFunctionParametersAssignment_8_1() { return cFunctionParametersAssignment_8_1; }
		
		//FunctionParameter
		public RuleCall getFunctionParametersFunctionParameterParserRuleCall_8_1_0() { return cFunctionParametersFunctionParameterParserRuleCall_8_1_0; }
		
		//'):'
		public Keyword getRightParenthesisColonKeyword_9() { return cRightParenthesisColonKeyword_9; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_10() { return cLeftCurlyBracketKeyword_10; }
		
		//((body+=Field | body+=Expression | body+=Formula | body+=SelfAssignedFormula) ';')*
		public Group getGroup_11() { return cGroup_11; }
		
		//body+=Field | body+=Expression | body+=Formula | body+=SelfAssignedFormula
		public Alternatives getAlternatives_11_0() { return cAlternatives_11_0; }
		
		//body+=Field
		public Assignment getBodyAssignment_11_0_0() { return cBodyAssignment_11_0_0; }
		
		//Field
		public RuleCall getBodyFieldParserRuleCall_11_0_0_0() { return cBodyFieldParserRuleCall_11_0_0_0; }
		
		//body+=Expression
		public Assignment getBodyAssignment_11_0_1() { return cBodyAssignment_11_0_1; }
		
		//Expression
		public RuleCall getBodyExpressionParserRuleCall_11_0_1_0() { return cBodyExpressionParserRuleCall_11_0_1_0; }
		
		//body+=Formula
		public Assignment getBodyAssignment_11_0_2() { return cBodyAssignment_11_0_2; }
		
		//Formula
		public RuleCall getBodyFormulaParserRuleCall_11_0_2_0() { return cBodyFormulaParserRuleCall_11_0_2_0; }
		
		//body+=SelfAssignedFormula
		public Assignment getBodyAssignment_11_0_3() { return cBodyAssignment_11_0_3; }
		
		//SelfAssignedFormula
		public RuleCall getBodySelfAssignedFormulaParserRuleCall_11_0_3_0() { return cBodySelfAssignedFormulaParserRuleCall_11_0_3_0; }
		
		//';'
		public Keyword getSemicolonKeyword_11_1() { return cSemicolonKeyword_11_1; }
		
		//'};'
		public Keyword getRightCurlyBracketSemicolonKeyword_12() { return cRightCurlyBracketSemicolonKeyword_12; }
	}
	public class BehaviorsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.Behaviors");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cBehaviorsAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cBehaviorsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cBehaviorsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cBehaviorsBehaviorParserRuleCall_3_0 = (RuleCall)cBehaviorsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Behaviors:
		//	{Behaviors}
		//	'behaviors:' '{'
		//	behaviors+=Behavior*
		//	'};';
		@Override public ParserRule getRule() { return rule; }
		
		//{Behaviors} 'behaviors:' '{' behaviors+=Behavior* '};'
		public Group getGroup() { return cGroup; }
		
		//{Behaviors}
		public Action getBehaviorsAction_0() { return cBehaviorsAction_0; }
		
		//'behaviors:'
		public Keyword getBehaviorsKeyword_1() { return cBehaviorsKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//behaviors+=Behavior*
		public Assignment getBehaviorsAssignment_3() { return cBehaviorsAssignment_3; }
		
		//Behavior
		public RuleCall getBehaviorsBehaviorParserRuleCall_3_0() { return cBehaviorsBehaviorParserRuleCall_3_0; }
		
		//'};'
		public Keyword getRightCurlyBracketSemicolonKeyword_4() { return cRightCurlyBracketSemicolonKeyword_4; }
	}
	public class AgentInteractionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.AgentInteraction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAgentInteractionAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cInteraction_typeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cInteraction_typeInteractionTypeEnumRuleCall_3_0 = (RuleCall)cInteraction_typeAssignment_3.eContents().get(0);
		private final Keyword cRightSquareBracketLeftSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cTrigger_typeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cTrigger_typeInteractionTriggerTypesEnumRuleCall_5_0 = (RuleCall)cTrigger_typeAssignment_5.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cTriggerParamAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cTriggerParamInteractionTriggerParameterParserRuleCall_7_0 = (RuleCall)cTriggerParamAssignment_7.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cRightSquareBracketLeftParenthesisKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Assignment cFunctionParametersAssignment_10_0 = (Assignment)cGroup_10.eContents().get(0);
		private final RuleCall cFunctionParametersFunctionParameterParserRuleCall_10_0_0 = (RuleCall)cFunctionParametersAssignment_10_0.eContents().get(0);
		private final Group cGroup_10_1 = (Group)cGroup_10.eContents().get(1);
		private final Keyword cCommaKeyword_10_1_0 = (Keyword)cGroup_10_1.eContents().get(0);
		private final Assignment cFunctionParametersAssignment_10_1_1 = (Assignment)cGroup_10_1.eContents().get(1);
		private final RuleCall cFunctionParametersFunctionParameterParserRuleCall_10_1_1_0 = (RuleCall)cFunctionParametersAssignment_10_1_1.eContents().get(0);
		private final Keyword cRightParenthesisColonKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cLeftCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Group cGroup_13 = (Group)cGroup.eContents().get(13);
		private final Alternatives cAlternatives_13_0 = (Alternatives)cGroup_13.eContents().get(0);
		private final Assignment cBodyAssignment_13_0_0 = (Assignment)cAlternatives_13_0.eContents().get(0);
		private final RuleCall cBodyFieldParserRuleCall_13_0_0_0 = (RuleCall)cBodyAssignment_13_0_0.eContents().get(0);
		private final Assignment cBodyAssignment_13_0_1 = (Assignment)cAlternatives_13_0.eContents().get(1);
		private final RuleCall cBodyExpressionParserRuleCall_13_0_1_0 = (RuleCall)cBodyAssignment_13_0_1.eContents().get(0);
		private final Assignment cBodyAssignment_13_0_2 = (Assignment)cAlternatives_13_0.eContents().get(2);
		private final RuleCall cBodyFormulaParserRuleCall_13_0_2_0 = (RuleCall)cBodyAssignment_13_0_2.eContents().get(0);
		private final Assignment cBodyAssignment_13_0_3 = (Assignment)cAlternatives_13_0.eContents().get(3);
		private final RuleCall cBodySelfAssignedFormulaParserRuleCall_13_0_3_0 = (RuleCall)cBodyAssignment_13_0_3.eContents().get(0);
		private final Keyword cSemicolonKeyword_13_1 = (Keyword)cGroup_13.eContents().get(1);
		private final Keyword cRightCurlyBracketSemicolonKeyword_14 = (Keyword)cGroup.eContents().get(14);
		
		///**
		// * Interaction:
		// * name:[Affectee][Type][Trigger]{};
		// */ //We need to do something about this being accessible across agent and environment types
		//AgentInteraction Interaction:
		//	{AgentInteraction} name=ID '[' interaction_type=InteractionType '][' trigger_type=InteractionTriggerTypes '('
		//	triggerParam=InteractionTriggerParameter? ')' '](' (functionParameters+=FunctionParameter (','
		//	functionParameters+=FunctionParameter)*)? '):' '{' ((body+=Field | body+=Expression | body+=Formula |
		//	body+=SelfAssignedFormula) ';')*
		//	'};';
		@Override public ParserRule getRule() { return rule; }
		
		//{AgentInteraction} name=ID '[' interaction_type=InteractionType '][' trigger_type=InteractionTriggerTypes '('
		//triggerParam=InteractionTriggerParameter? ')' '](' (functionParameters+=FunctionParameter (','
		//functionParameters+=FunctionParameter)*)? '):' '{' ((body+=Field | body+=Expression | body+=Formula |
		//body+=SelfAssignedFormula) ';')* '};'
		public Group getGroup() { return cGroup; }
		
		//{AgentInteraction}
		public Action getAgentInteractionAction_0() { return cAgentInteractionAction_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_2() { return cLeftSquareBracketKeyword_2; }
		
		//interaction_type=InteractionType
		public Assignment getInteraction_typeAssignment_3() { return cInteraction_typeAssignment_3; }
		
		//InteractionType
		public RuleCall getInteraction_typeInteractionTypeEnumRuleCall_3_0() { return cInteraction_typeInteractionTypeEnumRuleCall_3_0; }
		
		//']['
		public Keyword getRightSquareBracketLeftSquareBracketKeyword_4() { return cRightSquareBracketLeftSquareBracketKeyword_4; }
		
		//trigger_type=InteractionTriggerTypes
		public Assignment getTrigger_typeAssignment_5() { return cTrigger_typeAssignment_5; }
		
		//InteractionTriggerTypes
		public RuleCall getTrigger_typeInteractionTriggerTypesEnumRuleCall_5_0() { return cTrigger_typeInteractionTriggerTypesEnumRuleCall_5_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_6() { return cLeftParenthesisKeyword_6; }
		
		//triggerParam=InteractionTriggerParameter?
		public Assignment getTriggerParamAssignment_7() { return cTriggerParamAssignment_7; }
		
		//InteractionTriggerParameter
		public RuleCall getTriggerParamInteractionTriggerParameterParserRuleCall_7_0() { return cTriggerParamInteractionTriggerParameterParserRuleCall_7_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_8() { return cRightParenthesisKeyword_8; }
		
		//']('
		public Keyword getRightSquareBracketLeftParenthesisKeyword_9() { return cRightSquareBracketLeftParenthesisKeyword_9; }
		
		//(functionParameters+=FunctionParameter (',' functionParameters+=FunctionParameter)*)?
		public Group getGroup_10() { return cGroup_10; }
		
		//functionParameters+=FunctionParameter
		public Assignment getFunctionParametersAssignment_10_0() { return cFunctionParametersAssignment_10_0; }
		
		//FunctionParameter
		public RuleCall getFunctionParametersFunctionParameterParserRuleCall_10_0_0() { return cFunctionParametersFunctionParameterParserRuleCall_10_0_0; }
		
		//(',' functionParameters+=FunctionParameter)*
		public Group getGroup_10_1() { return cGroup_10_1; }
		
		//','
		public Keyword getCommaKeyword_10_1_0() { return cCommaKeyword_10_1_0; }
		
		//functionParameters+=FunctionParameter
		public Assignment getFunctionParametersAssignment_10_1_1() { return cFunctionParametersAssignment_10_1_1; }
		
		//FunctionParameter
		public RuleCall getFunctionParametersFunctionParameterParserRuleCall_10_1_1_0() { return cFunctionParametersFunctionParameterParserRuleCall_10_1_1_0; }
		
		//'):'
		public Keyword getRightParenthesisColonKeyword_11() { return cRightParenthesisColonKeyword_11; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_12() { return cLeftCurlyBracketKeyword_12; }
		
		//((body+=Field | body+=Expression | body+=Formula | body+=SelfAssignedFormula) ';')*
		public Group getGroup_13() { return cGroup_13; }
		
		//body+=Field | body+=Expression | body+=Formula | body+=SelfAssignedFormula
		public Alternatives getAlternatives_13_0() { return cAlternatives_13_0; }
		
		//body+=Field
		public Assignment getBodyAssignment_13_0_0() { return cBodyAssignment_13_0_0; }
		
		//Field
		public RuleCall getBodyFieldParserRuleCall_13_0_0_0() { return cBodyFieldParserRuleCall_13_0_0_0; }
		
		//body+=Expression
		public Assignment getBodyAssignment_13_0_1() { return cBodyAssignment_13_0_1; }
		
		//Expression
		public RuleCall getBodyExpressionParserRuleCall_13_0_1_0() { return cBodyExpressionParserRuleCall_13_0_1_0; }
		
		//body+=Formula
		public Assignment getBodyAssignment_13_0_2() { return cBodyAssignment_13_0_2; }
		
		//Formula
		public RuleCall getBodyFormulaParserRuleCall_13_0_2_0() { return cBodyFormulaParserRuleCall_13_0_2_0; }
		
		//body+=SelfAssignedFormula
		public Assignment getBodyAssignment_13_0_3() { return cBodyAssignment_13_0_3; }
		
		//SelfAssignedFormula
		public RuleCall getBodySelfAssignedFormulaParserRuleCall_13_0_3_0() { return cBodySelfAssignedFormulaParserRuleCall_13_0_3_0; }
		
		//';'
		public Keyword getSemicolonKeyword_13_1() { return cSemicolonKeyword_13_1; }
		
		//'};'
		public Keyword getRightCurlyBracketSemicolonKeyword_14() { return cRightCurlyBracketSemicolonKeyword_14; }
	}
	public class AgentInteractionsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.AgentInteractions");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAgentInteractionsAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cInteractionsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cInteractionsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cInteractionsAgentInteractionParserRuleCall_3_0 = (RuleCall)cInteractionsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//AgentInteractions:
		//	{AgentInteractions}
		//	'interactions:' '{'
		//	interactions+=AgentInteraction*
		//	'};';
		@Override public ParserRule getRule() { return rule; }
		
		//{AgentInteractions} 'interactions:' '{' interactions+=AgentInteraction* '};'
		public Group getGroup() { return cGroup; }
		
		//{AgentInteractions}
		public Action getAgentInteractionsAction_0() { return cAgentInteractionsAction_0; }
		
		//'interactions:'
		public Keyword getInteractionsKeyword_1() { return cInteractionsKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//interactions+=AgentInteraction*
		public Assignment getInteractionsAssignment_3() { return cInteractionsAssignment_3; }
		
		//AgentInteraction
		public RuleCall getInteractionsAgentInteractionParserRuleCall_3_0() { return cInteractionsAgentInteractionParserRuleCall_3_0; }
		
		//'};'
		public Keyword getRightCurlyBracketSemicolonKeyword_4() { return cRightCurlyBracketSemicolonKeyword_4; }
	}
	public class InteractionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.Interaction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cInteractionAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cInteraction_typeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cInteraction_typeInteractionTypeEnumRuleCall_3_0 = (RuleCall)cInteraction_typeAssignment_3.eContents().get(0);
		private final Keyword cRightSquareBracketLeftSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cTrigger_typeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cTrigger_typeInteractionTriggerTypesEnumRuleCall_5_0 = (RuleCall)cTrigger_typeAssignment_5.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cTriggerParamAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cTriggerParamInteractionTriggerParameterParserRuleCall_7_0 = (RuleCall)cTriggerParamAssignment_7.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cRightSquareBracketLeftParenthesisKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Assignment cFunctionParametersAssignment_10_0 = (Assignment)cGroup_10.eContents().get(0);
		private final RuleCall cFunctionParametersFunctionParameterParserRuleCall_10_0_0 = (RuleCall)cFunctionParametersAssignment_10_0.eContents().get(0);
		private final Group cGroup_10_1 = (Group)cGroup_10.eContents().get(1);
		private final Keyword cCommaKeyword_10_1_0 = (Keyword)cGroup_10_1.eContents().get(0);
		private final Assignment cFunctionParametersAssignment_10_1_1 = (Assignment)cGroup_10_1.eContents().get(1);
		private final RuleCall cFunctionParametersFunctionParameterParserRuleCall_10_1_1_0 = (RuleCall)cFunctionParametersAssignment_10_1_1.eContents().get(0);
		private final Keyword cRightParenthesisColonKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cLeftCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Group cGroup_13 = (Group)cGroup.eContents().get(13);
		private final Alternatives cAlternatives_13_0 = (Alternatives)cGroup_13.eContents().get(0);
		private final Assignment cBodyAssignment_13_0_0 = (Assignment)cAlternatives_13_0.eContents().get(0);
		private final RuleCall cBodyFieldParserRuleCall_13_0_0_0 = (RuleCall)cBodyAssignment_13_0_0.eContents().get(0);
		private final Assignment cBodyAssignment_13_0_1 = (Assignment)cAlternatives_13_0.eContents().get(1);
		private final RuleCall cBodyExpressionParserRuleCall_13_0_1_0 = (RuleCall)cBodyAssignment_13_0_1.eContents().get(0);
		private final Assignment cBodyAssignment_13_0_2 = (Assignment)cAlternatives_13_0.eContents().get(2);
		private final RuleCall cBodyFormulaParserRuleCall_13_0_2_0 = (RuleCall)cBodyAssignment_13_0_2.eContents().get(0);
		private final Assignment cBodyAssignment_13_0_3 = (Assignment)cAlternatives_13_0.eContents().get(3);
		private final RuleCall cBodySelfAssignedFormulaParserRuleCall_13_0_3_0 = (RuleCall)cBodyAssignment_13_0_3.eContents().get(0);
		private final Keyword cSemicolonKeyword_13_1 = (Keyword)cGroup_13.eContents().get(1);
		private final Keyword cRightCurlyBracketSemicolonKeyword_14 = (Keyword)cGroup.eContents().get(14);
		
		////we may change back to these one day (although it should be okay now)
		//Interaction:
		//	{Interaction} name=ID '[' interaction_type=InteractionType '][' trigger_type=InteractionTriggerTypes '('
		//	triggerParam=InteractionTriggerParameter? ')' '](' (functionParameters+=FunctionParameter (','
		//	functionParameters+=FunctionParameter)*)? '):' '{' ((body+=Field | body+=Expression | body+=Formula |
		//	body+=SelfAssignedFormula) ';')*
		//	'};';
		@Override public ParserRule getRule() { return rule; }
		
		//{Interaction} name=ID '[' interaction_type=InteractionType '][' trigger_type=InteractionTriggerTypes '('
		//triggerParam=InteractionTriggerParameter? ')' '](' (functionParameters+=FunctionParameter (','
		//functionParameters+=FunctionParameter)*)? '):' '{' ((body+=Field | body+=Expression | body+=Formula |
		//body+=SelfAssignedFormula) ';')* '};'
		public Group getGroup() { return cGroup; }
		
		//{Interaction}
		public Action getInteractionAction_0() { return cInteractionAction_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_2() { return cLeftSquareBracketKeyword_2; }
		
		//interaction_type=InteractionType
		public Assignment getInteraction_typeAssignment_3() { return cInteraction_typeAssignment_3; }
		
		//InteractionType
		public RuleCall getInteraction_typeInteractionTypeEnumRuleCall_3_0() { return cInteraction_typeInteractionTypeEnumRuleCall_3_0; }
		
		//']['
		public Keyword getRightSquareBracketLeftSquareBracketKeyword_4() { return cRightSquareBracketLeftSquareBracketKeyword_4; }
		
		//trigger_type=InteractionTriggerTypes
		public Assignment getTrigger_typeAssignment_5() { return cTrigger_typeAssignment_5; }
		
		//InteractionTriggerTypes
		public RuleCall getTrigger_typeInteractionTriggerTypesEnumRuleCall_5_0() { return cTrigger_typeInteractionTriggerTypesEnumRuleCall_5_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_6() { return cLeftParenthesisKeyword_6; }
		
		//triggerParam=InteractionTriggerParameter?
		public Assignment getTriggerParamAssignment_7() { return cTriggerParamAssignment_7; }
		
		//InteractionTriggerParameter
		public RuleCall getTriggerParamInteractionTriggerParameterParserRuleCall_7_0() { return cTriggerParamInteractionTriggerParameterParserRuleCall_7_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_8() { return cRightParenthesisKeyword_8; }
		
		//']('
		public Keyword getRightSquareBracketLeftParenthesisKeyword_9() { return cRightSquareBracketLeftParenthesisKeyword_9; }
		
		//(functionParameters+=FunctionParameter (',' functionParameters+=FunctionParameter)*)?
		public Group getGroup_10() { return cGroup_10; }
		
		//functionParameters+=FunctionParameter
		public Assignment getFunctionParametersAssignment_10_0() { return cFunctionParametersAssignment_10_0; }
		
		//FunctionParameter
		public RuleCall getFunctionParametersFunctionParameterParserRuleCall_10_0_0() { return cFunctionParametersFunctionParameterParserRuleCall_10_0_0; }
		
		//(',' functionParameters+=FunctionParameter)*
		public Group getGroup_10_1() { return cGroup_10_1; }
		
		//','
		public Keyword getCommaKeyword_10_1_0() { return cCommaKeyword_10_1_0; }
		
		//functionParameters+=FunctionParameter
		public Assignment getFunctionParametersAssignment_10_1_1() { return cFunctionParametersAssignment_10_1_1; }
		
		//FunctionParameter
		public RuleCall getFunctionParametersFunctionParameterParserRuleCall_10_1_1_0() { return cFunctionParametersFunctionParameterParserRuleCall_10_1_1_0; }
		
		//'):'
		public Keyword getRightParenthesisColonKeyword_11() { return cRightParenthesisColonKeyword_11; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_12() { return cLeftCurlyBracketKeyword_12; }
		
		//((body+=Field | body+=Expression | body+=Formula | body+=SelfAssignedFormula) ';')*
		public Group getGroup_13() { return cGroup_13; }
		
		//body+=Field | body+=Expression | body+=Formula | body+=SelfAssignedFormula
		public Alternatives getAlternatives_13_0() { return cAlternatives_13_0; }
		
		//body+=Field
		public Assignment getBodyAssignment_13_0_0() { return cBodyAssignment_13_0_0; }
		
		//Field
		public RuleCall getBodyFieldParserRuleCall_13_0_0_0() { return cBodyFieldParserRuleCall_13_0_0_0; }
		
		//body+=Expression
		public Assignment getBodyAssignment_13_0_1() { return cBodyAssignment_13_0_1; }
		
		//Expression
		public RuleCall getBodyExpressionParserRuleCall_13_0_1_0() { return cBodyExpressionParserRuleCall_13_0_1_0; }
		
		//body+=Formula
		public Assignment getBodyAssignment_13_0_2() { return cBodyAssignment_13_0_2; }
		
		//Formula
		public RuleCall getBodyFormulaParserRuleCall_13_0_2_0() { return cBodyFormulaParserRuleCall_13_0_2_0; }
		
		//body+=SelfAssignedFormula
		public Assignment getBodyAssignment_13_0_3() { return cBodyAssignment_13_0_3; }
		
		//SelfAssignedFormula
		public RuleCall getBodySelfAssignedFormulaParserRuleCall_13_0_3_0() { return cBodySelfAssignedFormulaParserRuleCall_13_0_3_0; }
		
		//';'
		public Keyword getSemicolonKeyword_13_1() { return cSemicolonKeyword_13_1; }
		
		//'};'
		public Keyword getRightCurlyBracketSemicolonKeyword_14() { return cRightCurlyBracketSemicolonKeyword_14; }
	}
	public class InteractionsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.Interactions");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cInteractionsAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cInteractionsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cInteractionsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cInteractionsInteractionParserRuleCall_3_0 = (RuleCall)cInteractionsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Interactions:
		//	{Interactions}
		//	'interactions:' '{'
		//	interactions+=Interaction*
		//	'};';
		@Override public ParserRule getRule() { return rule; }
		
		//{Interactions} 'interactions:' '{' interactions+=Interaction* '};'
		public Group getGroup() { return cGroup; }
		
		//{Interactions}
		public Action getInteractionsAction_0() { return cInteractionsAction_0; }
		
		//'interactions:'
		public Keyword getInteractionsKeyword_1() { return cInteractionsKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//interactions+=Interaction*
		public Assignment getInteractionsAssignment_3() { return cInteractionsAssignment_3; }
		
		//Interaction
		public RuleCall getInteractionsInteractionParserRuleCall_3_0() { return cInteractionsInteractionParserRuleCall_3_0; }
		
		//'};'
		public Keyword getRightCurlyBracketSemicolonKeyword_4() { return cRightCurlyBracketSemicolonKeyword_4; }
	}
	public class EnvironmentInteractionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.EnvironmentInteraction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEnvironmentInteractionAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cInteraction_typeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cInteraction_typeInteractionTypeEnumRuleCall_3_0 = (RuleCall)cInteraction_typeAssignment_3.eContents().get(0);
		private final Keyword cRightSquareBracketLeftSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cTrigger_typeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cTrigger_typeInteractionTriggerTypesEnumRuleCall_5_0 = (RuleCall)cTrigger_typeAssignment_5.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cTriggerParamAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cTriggerParamInteractionTriggerParameterParserRuleCall_7_0 = (RuleCall)cTriggerParamAssignment_7.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cRightSquareBracketLeftParenthesisKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Assignment cFunctionParametersAssignment_10_0 = (Assignment)cGroup_10.eContents().get(0);
		private final RuleCall cFunctionParametersFunctionParameterParserRuleCall_10_0_0 = (RuleCall)cFunctionParametersAssignment_10_0.eContents().get(0);
		private final Group cGroup_10_1 = (Group)cGroup_10.eContents().get(1);
		private final Keyword cCommaKeyword_10_1_0 = (Keyword)cGroup_10_1.eContents().get(0);
		private final Assignment cFunctionParametersAssignment_10_1_1 = (Assignment)cGroup_10_1.eContents().get(1);
		private final RuleCall cFunctionParametersFunctionParameterParserRuleCall_10_1_1_0 = (RuleCall)cFunctionParametersAssignment_10_1_1.eContents().get(0);
		private final Keyword cRightParenthesisColonKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cLeftCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Group cGroup_13 = (Group)cGroup.eContents().get(13);
		private final Alternatives cAlternatives_13_0 = (Alternatives)cGroup_13.eContents().get(0);
		private final Assignment cBodyAssignment_13_0_0 = (Assignment)cAlternatives_13_0.eContents().get(0);
		private final RuleCall cBodyFieldParserRuleCall_13_0_0_0 = (RuleCall)cBodyAssignment_13_0_0.eContents().get(0);
		private final Assignment cBodyAssignment_13_0_1 = (Assignment)cAlternatives_13_0.eContents().get(1);
		private final RuleCall cBodyExpressionParserRuleCall_13_0_1_0 = (RuleCall)cBodyAssignment_13_0_1.eContents().get(0);
		private final Assignment cBodyAssignment_13_0_2 = (Assignment)cAlternatives_13_0.eContents().get(2);
		private final RuleCall cBodyFormulaParserRuleCall_13_0_2_0 = (RuleCall)cBodyAssignment_13_0_2.eContents().get(0);
		private final Assignment cBodyAssignment_13_0_3 = (Assignment)cAlternatives_13_0.eContents().get(3);
		private final RuleCall cBodySelfAssignedFormulaParserRuleCall_13_0_3_0 = (RuleCall)cBodyAssignment_13_0_3.eContents().get(0);
		private final Keyword cSemicolonKeyword_13_1 = (Keyword)cGroup_13.eContents().get(1);
		private final Keyword cRightCurlyBracketSemicolonKeyword_14 = (Keyword)cGroup.eContents().get(14);
		
		//EnvironmentInteraction Interaction:
		//	{EnvironmentInteraction} name=ID '[' interaction_type=InteractionType '][' trigger_type=InteractionTriggerTypes '('
		//	triggerParam=InteractionTriggerParameter? ')' '](' (functionParameters+=FunctionParameter (','
		//	functionParameters+=FunctionParameter)*)? '):' '{' ((body+=Field | body+=Expression | body+=Formula |
		//	body+=SelfAssignedFormula) ';')*
		//	'};';
		@Override public ParserRule getRule() { return rule; }
		
		//{EnvironmentInteraction} name=ID '[' interaction_type=InteractionType '][' trigger_type=InteractionTriggerTypes '('
		//triggerParam=InteractionTriggerParameter? ')' '](' (functionParameters+=FunctionParameter (','
		//functionParameters+=FunctionParameter)*)? '):' '{' ((body+=Field | body+=Expression | body+=Formula |
		//body+=SelfAssignedFormula) ';')* '};'
		public Group getGroup() { return cGroup; }
		
		//{EnvironmentInteraction}
		public Action getEnvironmentInteractionAction_0() { return cEnvironmentInteractionAction_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_2() { return cLeftSquareBracketKeyword_2; }
		
		//interaction_type=InteractionType
		public Assignment getInteraction_typeAssignment_3() { return cInteraction_typeAssignment_3; }
		
		//InteractionType
		public RuleCall getInteraction_typeInteractionTypeEnumRuleCall_3_0() { return cInteraction_typeInteractionTypeEnumRuleCall_3_0; }
		
		//']['
		public Keyword getRightSquareBracketLeftSquareBracketKeyword_4() { return cRightSquareBracketLeftSquareBracketKeyword_4; }
		
		//trigger_type=InteractionTriggerTypes
		public Assignment getTrigger_typeAssignment_5() { return cTrigger_typeAssignment_5; }
		
		//InteractionTriggerTypes
		public RuleCall getTrigger_typeInteractionTriggerTypesEnumRuleCall_5_0() { return cTrigger_typeInteractionTriggerTypesEnumRuleCall_5_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_6() { return cLeftParenthesisKeyword_6; }
		
		//triggerParam=InteractionTriggerParameter?
		public Assignment getTriggerParamAssignment_7() { return cTriggerParamAssignment_7; }
		
		//InteractionTriggerParameter
		public RuleCall getTriggerParamInteractionTriggerParameterParserRuleCall_7_0() { return cTriggerParamInteractionTriggerParameterParserRuleCall_7_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_8() { return cRightParenthesisKeyword_8; }
		
		//']('
		public Keyword getRightSquareBracketLeftParenthesisKeyword_9() { return cRightSquareBracketLeftParenthesisKeyword_9; }
		
		//(functionParameters+=FunctionParameter (',' functionParameters+=FunctionParameter)*)?
		public Group getGroup_10() { return cGroup_10; }
		
		//functionParameters+=FunctionParameter
		public Assignment getFunctionParametersAssignment_10_0() { return cFunctionParametersAssignment_10_0; }
		
		//FunctionParameter
		public RuleCall getFunctionParametersFunctionParameterParserRuleCall_10_0_0() { return cFunctionParametersFunctionParameterParserRuleCall_10_0_0; }
		
		//(',' functionParameters+=FunctionParameter)*
		public Group getGroup_10_1() { return cGroup_10_1; }
		
		//','
		public Keyword getCommaKeyword_10_1_0() { return cCommaKeyword_10_1_0; }
		
		//functionParameters+=FunctionParameter
		public Assignment getFunctionParametersAssignment_10_1_1() { return cFunctionParametersAssignment_10_1_1; }
		
		//FunctionParameter
		public RuleCall getFunctionParametersFunctionParameterParserRuleCall_10_1_1_0() { return cFunctionParametersFunctionParameterParserRuleCall_10_1_1_0; }
		
		//'):'
		public Keyword getRightParenthesisColonKeyword_11() { return cRightParenthesisColonKeyword_11; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_12() { return cLeftCurlyBracketKeyword_12; }
		
		//((body+=Field | body+=Expression | body+=Formula | body+=SelfAssignedFormula) ';')*
		public Group getGroup_13() { return cGroup_13; }
		
		//body+=Field | body+=Expression | body+=Formula | body+=SelfAssignedFormula
		public Alternatives getAlternatives_13_0() { return cAlternatives_13_0; }
		
		//body+=Field
		public Assignment getBodyAssignment_13_0_0() { return cBodyAssignment_13_0_0; }
		
		//Field
		public RuleCall getBodyFieldParserRuleCall_13_0_0_0() { return cBodyFieldParserRuleCall_13_0_0_0; }
		
		//body+=Expression
		public Assignment getBodyAssignment_13_0_1() { return cBodyAssignment_13_0_1; }
		
		//Expression
		public RuleCall getBodyExpressionParserRuleCall_13_0_1_0() { return cBodyExpressionParserRuleCall_13_0_1_0; }
		
		//body+=Formula
		public Assignment getBodyAssignment_13_0_2() { return cBodyAssignment_13_0_2; }
		
		//Formula
		public RuleCall getBodyFormulaParserRuleCall_13_0_2_0() { return cBodyFormulaParserRuleCall_13_0_2_0; }
		
		//body+=SelfAssignedFormula
		public Assignment getBodyAssignment_13_0_3() { return cBodyAssignment_13_0_3; }
		
		//SelfAssignedFormula
		public RuleCall getBodySelfAssignedFormulaParserRuleCall_13_0_3_0() { return cBodySelfAssignedFormulaParserRuleCall_13_0_3_0; }
		
		//';'
		public Keyword getSemicolonKeyword_13_1() { return cSemicolonKeyword_13_1; }
		
		//'};'
		public Keyword getRightCurlyBracketSemicolonKeyword_14() { return cRightCurlyBracketSemicolonKeyword_14; }
	}
	public class EnvironmentInteractionsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.EnvironmentInteractions");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEnvironmentInteractionsAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cInteractionsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cInteractionsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cInteractionsEnvironmentInteractionParserRuleCall_3_0 = (RuleCall)cInteractionsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//EnvironmentInteractions:
		//	{EnvironmentInteractions}
		//	'interactions:' '{'
		//	interactions+=EnvironmentInteraction*
		//	'};';
		@Override public ParserRule getRule() { return rule; }
		
		//{EnvironmentInteractions} 'interactions:' '{' interactions+=EnvironmentInteraction* '};'
		public Group getGroup() { return cGroup; }
		
		//{EnvironmentInteractions}
		public Action getEnvironmentInteractionsAction_0() { return cEnvironmentInteractionsAction_0; }
		
		//'interactions:'
		public Keyword getInteractionsKeyword_1() { return cInteractionsKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//interactions+=EnvironmentInteraction*
		public Assignment getInteractionsAssignment_3() { return cInteractionsAssignment_3; }
		
		//EnvironmentInteraction
		public RuleCall getInteractionsEnvironmentInteractionParserRuleCall_3_0() { return cInteractionsEnvironmentInteractionParserRuleCall_3_0; }
		
		//'};'
		public Keyword getRightCurlyBracketSemicolonKeyword_4() { return cRightCurlyBracketSemicolonKeyword_4; }
	}
	public class EGInteractionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.EGInteraction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEGInteractionAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cLayoutTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLayoutTypeLayoutTypeEnumRuleCall_3_0 = (RuleCall)cLayoutTypeAssignment_3.eContents().get(0);
		private final Keyword cRightSquareBracketLeftSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cTrigger_typeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cTrigger_typeInteractionTriggerTypesEnumRuleCall_5_0 = (RuleCall)cTrigger_typeAssignment_5.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cTriggerParamAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cTriggerParamInteractionTriggerParameterParserRuleCall_7_0 = (RuleCall)cTriggerParamAssignment_7.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cRightSquareBracketLeftParenthesisKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Assignment cFunctionParametersAssignment_10_0 = (Assignment)cGroup_10.eContents().get(0);
		private final RuleCall cFunctionParametersFunctionParameterParserRuleCall_10_0_0 = (RuleCall)cFunctionParametersAssignment_10_0.eContents().get(0);
		private final Group cGroup_10_1 = (Group)cGroup_10.eContents().get(1);
		private final Keyword cCommaKeyword_10_1_0 = (Keyword)cGroup_10_1.eContents().get(0);
		private final Assignment cFunctionParametersAssignment_10_1_1 = (Assignment)cGroup_10_1.eContents().get(1);
		private final RuleCall cFunctionParametersFunctionParameterParserRuleCall_10_1_1_0 = (RuleCall)cFunctionParametersAssignment_10_1_1.eContents().get(0);
		private final Keyword cRightParenthesisColonKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cLeftCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Group cGroup_13 = (Group)cGroup.eContents().get(13);
		private final Alternatives cAlternatives_13_0 = (Alternatives)cGroup_13.eContents().get(0);
		private final Assignment cBodyAssignment_13_0_0 = (Assignment)cAlternatives_13_0.eContents().get(0);
		private final RuleCall cBodyFieldParserRuleCall_13_0_0_0 = (RuleCall)cBodyAssignment_13_0_0.eContents().get(0);
		private final Assignment cBodyAssignment_13_0_1 = (Assignment)cAlternatives_13_0.eContents().get(1);
		private final RuleCall cBodyExpressionParserRuleCall_13_0_1_0 = (RuleCall)cBodyAssignment_13_0_1.eContents().get(0);
		private final Assignment cBodyAssignment_13_0_2 = (Assignment)cAlternatives_13_0.eContents().get(2);
		private final RuleCall cBodyFormulaParserRuleCall_13_0_2_0 = (RuleCall)cBodyAssignment_13_0_2.eContents().get(0);
		private final Assignment cBodyAssignment_13_0_3 = (Assignment)cAlternatives_13_0.eContents().get(3);
		private final RuleCall cBodySelfAssignedFormulaParserRuleCall_13_0_3_0 = (RuleCall)cBodyAssignment_13_0_3.eContents().get(0);
		private final Keyword cSemicolonKeyword_13_1 = (Keyword)cGroup_13.eContents().get(1);
		private final Keyword cRightCurlyBracketSemicolonKeyword_14 = (Keyword)cGroup.eContents().get(14);
		
		//EGInteraction Interaction:
		//	{EGInteraction} name=ID '[' layoutType=LayoutType '][' trigger_type=InteractionTriggerTypes '('
		//	triggerParam=InteractionTriggerParameter? ')' '](' (functionParameters+=FunctionParameter (','
		//	functionParameters+=FunctionParameter)*)? '):' '{' ((body+=Field | body+=Expression | body+=Formula |
		//	body+=SelfAssignedFormula) ';')*
		//	'};';
		@Override public ParserRule getRule() { return rule; }
		
		//{EGInteraction} name=ID '[' layoutType=LayoutType '][' trigger_type=InteractionTriggerTypes '('
		//triggerParam=InteractionTriggerParameter? ')' '](' (functionParameters+=FunctionParameter (','
		//functionParameters+=FunctionParameter)*)? '):' '{' ((body+=Field | body+=Expression | body+=Formula |
		//body+=SelfAssignedFormula) ';')* '};'
		public Group getGroup() { return cGroup; }
		
		//{EGInteraction}
		public Action getEGInteractionAction_0() { return cEGInteractionAction_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_2() { return cLeftSquareBracketKeyword_2; }
		
		//layoutType=LayoutType
		public Assignment getLayoutTypeAssignment_3() { return cLayoutTypeAssignment_3; }
		
		//LayoutType
		public RuleCall getLayoutTypeLayoutTypeEnumRuleCall_3_0() { return cLayoutTypeLayoutTypeEnumRuleCall_3_0; }
		
		//']['
		public Keyword getRightSquareBracketLeftSquareBracketKeyword_4() { return cRightSquareBracketLeftSquareBracketKeyword_4; }
		
		//trigger_type=InteractionTriggerTypes
		public Assignment getTrigger_typeAssignment_5() { return cTrigger_typeAssignment_5; }
		
		//InteractionTriggerTypes
		public RuleCall getTrigger_typeInteractionTriggerTypesEnumRuleCall_5_0() { return cTrigger_typeInteractionTriggerTypesEnumRuleCall_5_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_6() { return cLeftParenthesisKeyword_6; }
		
		//triggerParam=InteractionTriggerParameter?
		public Assignment getTriggerParamAssignment_7() { return cTriggerParamAssignment_7; }
		
		//InteractionTriggerParameter
		public RuleCall getTriggerParamInteractionTriggerParameterParserRuleCall_7_0() { return cTriggerParamInteractionTriggerParameterParserRuleCall_7_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_8() { return cRightParenthesisKeyword_8; }
		
		//']('
		public Keyword getRightSquareBracketLeftParenthesisKeyword_9() { return cRightSquareBracketLeftParenthesisKeyword_9; }
		
		//(functionParameters+=FunctionParameter (',' functionParameters+=FunctionParameter)*)?
		public Group getGroup_10() { return cGroup_10; }
		
		//functionParameters+=FunctionParameter
		public Assignment getFunctionParametersAssignment_10_0() { return cFunctionParametersAssignment_10_0; }
		
		//FunctionParameter
		public RuleCall getFunctionParametersFunctionParameterParserRuleCall_10_0_0() { return cFunctionParametersFunctionParameterParserRuleCall_10_0_0; }
		
		//(',' functionParameters+=FunctionParameter)*
		public Group getGroup_10_1() { return cGroup_10_1; }
		
		//','
		public Keyword getCommaKeyword_10_1_0() { return cCommaKeyword_10_1_0; }
		
		//functionParameters+=FunctionParameter
		public Assignment getFunctionParametersAssignment_10_1_1() { return cFunctionParametersAssignment_10_1_1; }
		
		//FunctionParameter
		public RuleCall getFunctionParametersFunctionParameterParserRuleCall_10_1_1_0() { return cFunctionParametersFunctionParameterParserRuleCall_10_1_1_0; }
		
		//'):'
		public Keyword getRightParenthesisColonKeyword_11() { return cRightParenthesisColonKeyword_11; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_12() { return cLeftCurlyBracketKeyword_12; }
		
		//((body+=Field | body+=Expression | body+=Formula | body+=SelfAssignedFormula) ';')*
		public Group getGroup_13() { return cGroup_13; }
		
		//body+=Field | body+=Expression | body+=Formula | body+=SelfAssignedFormula
		public Alternatives getAlternatives_13_0() { return cAlternatives_13_0; }
		
		//body+=Field
		public Assignment getBodyAssignment_13_0_0() { return cBodyAssignment_13_0_0; }
		
		//Field
		public RuleCall getBodyFieldParserRuleCall_13_0_0_0() { return cBodyFieldParserRuleCall_13_0_0_0; }
		
		//body+=Expression
		public Assignment getBodyAssignment_13_0_1() { return cBodyAssignment_13_0_1; }
		
		//Expression
		public RuleCall getBodyExpressionParserRuleCall_13_0_1_0() { return cBodyExpressionParserRuleCall_13_0_1_0; }
		
		//body+=Formula
		public Assignment getBodyAssignment_13_0_2() { return cBodyAssignment_13_0_2; }
		
		//Formula
		public RuleCall getBodyFormulaParserRuleCall_13_0_2_0() { return cBodyFormulaParserRuleCall_13_0_2_0; }
		
		//body+=SelfAssignedFormula
		public Assignment getBodyAssignment_13_0_3() { return cBodyAssignment_13_0_3; }
		
		//SelfAssignedFormula
		public RuleCall getBodySelfAssignedFormulaParserRuleCall_13_0_3_0() { return cBodySelfAssignedFormulaParserRuleCall_13_0_3_0; }
		
		//';'
		public Keyword getSemicolonKeyword_13_1() { return cSemicolonKeyword_13_1; }
		
		//'};'
		public Keyword getRightCurlyBracketSemicolonKeyword_14() { return cRightCurlyBracketSemicolonKeyword_14; }
	}
	public class EGInteractionsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.EGInteractions");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEGInteractionsAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cGroup_interactionsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cInteractionsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cInteractionsEGInteractionParserRuleCall_3_0 = (RuleCall)cInteractionsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//EGInteractions:
		//	{EGInteractions}
		//	'group_interactions:' '{'
		//	interactions+=EGInteraction*
		//	'};';
		@Override public ParserRule getRule() { return rule; }
		
		//{EGInteractions} 'group_interactions:' '{' interactions+=EGInteraction* '};'
		public Group getGroup() { return cGroup; }
		
		//{EGInteractions}
		public Action getEGInteractionsAction_0() { return cEGInteractionsAction_0; }
		
		//'group_interactions:'
		public Keyword getGroup_interactionsKeyword_1() { return cGroup_interactionsKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//interactions+=EGInteraction*
		public Assignment getInteractionsAssignment_3() { return cInteractionsAssignment_3; }
		
		//EGInteraction
		public RuleCall getInteractionsEGInteractionParserRuleCall_3_0() { return cInteractionsEGInteractionParserRuleCall_3_0; }
		
		//'};'
		public Keyword getRightCurlyBracketSemicolonKeyword_4() { return cRightCurlyBracketSemicolonKeyword_4; }
	}
	public class InteractionTriggerParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.InteractionTriggerParameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cInteractionTriggerParameterAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cExprAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cExprExpressionParserRuleCall_1_0 = (RuleCall)cExprAssignment_1.eContents().get(0);
		
		//InteractionTriggerParameter:
		//	{InteractionTriggerParameter} expr=Expression;
		@Override public ParserRule getRule() { return rule; }
		
		//{InteractionTriggerParameter} expr=Expression
		public Group getGroup() { return cGroup; }
		
		//{InteractionTriggerParameter}
		public Action getInteractionTriggerParameterAction_0() { return cInteractionTriggerParameterAction_0; }
		
		//expr=Expression
		public Assignment getExprAssignment_1() { return cExprAssignment_1; }
		
		//Expression
		public RuleCall getExprExpressionParserRuleCall_1_0() { return cExprExpressionParserRuleCall_1_0; }
	}
	public class AdaptiveProcessElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.AdaptiveProcess");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAdaptiveProcessAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAdaptation_typeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAdaptation_typeAdaptationTypeEnumRuleCall_3_0 = (RuleCall)cAdaptation_typeAssignment_3.eContents().get(0);
		private final Keyword cRightSquareBracketLeftSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cAdaptationDelayAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cAdaptationDelayAdaptationDelayEnumRuleCall_5_0 = (RuleCall)cAdaptationDelayAssignment_5.eContents().get(0);
		private final Keyword cRightSquareBracketLeftParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cFunctionParametersAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cFunctionParametersFunctionParameterParserRuleCall_7_0 = (RuleCall)cFunctionParametersAssignment_7.eContents().get(0);
		private final Keyword cRightParenthesisColonKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cLeftCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Alternatives cAlternatives_10_0 = (Alternatives)cGroup_10.eContents().get(0);
		private final Assignment cBodyAssignment_10_0_0 = (Assignment)cAlternatives_10_0.eContents().get(0);
		private final RuleCall cBodyFieldParserRuleCall_10_0_0_0 = (RuleCall)cBodyAssignment_10_0_0.eContents().get(0);
		private final Assignment cBodyAssignment_10_0_1 = (Assignment)cAlternatives_10_0.eContents().get(1);
		private final RuleCall cBodyExpressionParserRuleCall_10_0_1_0 = (RuleCall)cBodyAssignment_10_0_1.eContents().get(0);
		private final Assignment cBodyAssignment_10_0_2 = (Assignment)cAlternatives_10_0.eContents().get(2);
		private final RuleCall cBodyFormulaParserRuleCall_10_0_2_0 = (RuleCall)cBodyAssignment_10_0_2.eContents().get(0);
		private final Assignment cBodyAssignment_10_0_3 = (Assignment)cAlternatives_10_0.eContents().get(3);
		private final RuleCall cBodySelfAssignedFormulaParserRuleCall_10_0_3_0 = (RuleCall)cBodyAssignment_10_0_3.eContents().get(0);
		private final Keyword cSemicolonKeyword_10_1 = (Keyword)cGroup_10.eContents().get(1);
		private final Keyword cRightCurlyBracketSemicolonKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		///**
		// * Adaptive Process:
		// * name:[AdaptationType](inputs){};
		// */ AdaptiveProcess:
		//	{AdaptiveProcess} name=ID '[' adaptation_type=AdaptationType '][' adaptationDelay=AdaptationDelay ']('
		//	functionParameters+=FunctionParameter* '):' '{' ((body+=Field | body+=Expression | body+=Formula |
		//	body+=SelfAssignedFormula) ';')*
		//	'};';
		@Override public ParserRule getRule() { return rule; }
		
		//{AdaptiveProcess} name=ID '[' adaptation_type=AdaptationType '][' adaptationDelay=AdaptationDelay ']('
		//functionParameters+=FunctionParameter* '):' '{' ((body+=Field | body+=Expression | body+=Formula |
		//body+=SelfAssignedFormula) ';')* '};'
		public Group getGroup() { return cGroup; }
		
		//{AdaptiveProcess}
		public Action getAdaptiveProcessAction_0() { return cAdaptiveProcessAction_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_2() { return cLeftSquareBracketKeyword_2; }
		
		//adaptation_type=AdaptationType
		public Assignment getAdaptation_typeAssignment_3() { return cAdaptation_typeAssignment_3; }
		
		//AdaptationType
		public RuleCall getAdaptation_typeAdaptationTypeEnumRuleCall_3_0() { return cAdaptation_typeAdaptationTypeEnumRuleCall_3_0; }
		
		//']['
		public Keyword getRightSquareBracketLeftSquareBracketKeyword_4() { return cRightSquareBracketLeftSquareBracketKeyword_4; }
		
		//adaptationDelay=AdaptationDelay
		public Assignment getAdaptationDelayAssignment_5() { return cAdaptationDelayAssignment_5; }
		
		//AdaptationDelay
		public RuleCall getAdaptationDelayAdaptationDelayEnumRuleCall_5_0() { return cAdaptationDelayAdaptationDelayEnumRuleCall_5_0; }
		
		//']('
		public Keyword getRightSquareBracketLeftParenthesisKeyword_6() { return cRightSquareBracketLeftParenthesisKeyword_6; }
		
		//functionParameters+=FunctionParameter*
		public Assignment getFunctionParametersAssignment_7() { return cFunctionParametersAssignment_7; }
		
		//FunctionParameter
		public RuleCall getFunctionParametersFunctionParameterParserRuleCall_7_0() { return cFunctionParametersFunctionParameterParserRuleCall_7_0; }
		
		//'):'
		public Keyword getRightParenthesisColonKeyword_8() { return cRightParenthesisColonKeyword_8; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_9() { return cLeftCurlyBracketKeyword_9; }
		
		//((body+=Field | body+=Expression | body+=Formula | body+=SelfAssignedFormula) ';')*
		public Group getGroup_10() { return cGroup_10; }
		
		//body+=Field | body+=Expression | body+=Formula | body+=SelfAssignedFormula
		public Alternatives getAlternatives_10_0() { return cAlternatives_10_0; }
		
		//body+=Field
		public Assignment getBodyAssignment_10_0_0() { return cBodyAssignment_10_0_0; }
		
		//Field
		public RuleCall getBodyFieldParserRuleCall_10_0_0_0() { return cBodyFieldParserRuleCall_10_0_0_0; }
		
		//body+=Expression
		public Assignment getBodyAssignment_10_0_1() { return cBodyAssignment_10_0_1; }
		
		//Expression
		public RuleCall getBodyExpressionParserRuleCall_10_0_1_0() { return cBodyExpressionParserRuleCall_10_0_1_0; }
		
		//body+=Formula
		public Assignment getBodyAssignment_10_0_2() { return cBodyAssignment_10_0_2; }
		
		//Formula
		public RuleCall getBodyFormulaParserRuleCall_10_0_2_0() { return cBodyFormulaParserRuleCall_10_0_2_0; }
		
		//body+=SelfAssignedFormula
		public Assignment getBodyAssignment_10_0_3() { return cBodyAssignment_10_0_3; }
		
		//SelfAssignedFormula
		public RuleCall getBodySelfAssignedFormulaParserRuleCall_10_0_3_0() { return cBodySelfAssignedFormulaParserRuleCall_10_0_3_0; }
		
		//';'
		public Keyword getSemicolonKeyword_10_1() { return cSemicolonKeyword_10_1; }
		
		//'};'
		public Keyword getRightCurlyBracketSemicolonKeyword_11() { return cRightCurlyBracketSemicolonKeyword_11; }
	}
	public class AdaptiveProcessesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.AdaptiveProcesses");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAdaptiveProcessesAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAdaptationKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAdaptationAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAdaptationAdaptiveProcessParserRuleCall_3_0 = (RuleCall)cAdaptationAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//AdaptiveProcesses:
		//	{AdaptiveProcesses}
		//	'adaptation:' '{'
		//	adaptation+=AdaptiveProcess*
		//	'};';
		@Override public ParserRule getRule() { return rule; }
		
		//{AdaptiveProcesses} 'adaptation:' '{' adaptation+=AdaptiveProcess* '};'
		public Group getGroup() { return cGroup; }
		
		//{AdaptiveProcesses}
		public Action getAdaptiveProcessesAction_0() { return cAdaptiveProcessesAction_0; }
		
		//'adaptation:'
		public Keyword getAdaptationKeyword_1() { return cAdaptationKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//adaptation+=AdaptiveProcess*
		public Assignment getAdaptationAssignment_3() { return cAdaptationAssignment_3; }
		
		//AdaptiveProcess
		public RuleCall getAdaptationAdaptiveProcessParserRuleCall_3_0() { return cAdaptationAdaptiveProcessParserRuleCall_3_0; }
		
		//'};'
		public Keyword getRightCurlyBracketSemicolonKeyword_4() { return cRightCurlyBracketSemicolonKeyword_4; }
	}
	public class FeatureCallElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.FeatureCall");
		private final Assignment cFcAssignment = (Assignment)rule.eContents().get(1);
		private final Alternatives cFcAlternatives_0 = (Alternatives)cFcAssignment.eContents().get(0);
		private final RuleCall cFcAdaptiveProcessFeatureCallParserRuleCall_0_0 = (RuleCall)cFcAlternatives_0.eContents().get(0);
		private final RuleCall cFcAgentInteractionFeatureCallParserRuleCall_0_1 = (RuleCall)cFcAlternatives_0.eContents().get(1);
		private final RuleCall cFcEnvironmentInteractionFeatureCallParserRuleCall_0_2 = (RuleCall)cFcAlternatives_0.eContents().get(2);
		private final RuleCall cFcInteractionFeatureCallParserRuleCall_0_3 = (RuleCall)cFcAlternatives_0.eContents().get(3);
		private final RuleCall cFcFunctionFeatureCallParserRuleCall_0_4 = (RuleCall)cFcAlternatives_0.eContents().get(4);
		private final RuleCall cFcBehaviorFeatureCallParserRuleCall_0_5 = (RuleCall)cFcAlternatives_0.eContents().get(5);
		private final RuleCall cFcGroupExternalInteractionFeatureCallParserRuleCall_0_6 = (RuleCall)cFcAlternatives_0.eContents().get(6);
		private final RuleCall cFcGroupSelfInternalInteractionsFeatureCallParserRuleCall_0_7 = (RuleCall)cFcAlternatives_0.eContents().get(7);
		private final RuleCall cFcGroupInternalInteractionsFeatureCallParserRuleCall_0_8 = (RuleCall)cFcAlternatives_0.eContents().get(8);
		private final RuleCall cFcExternalInteractionFeatureCallParserRuleCall_0_9 = (RuleCall)cFcAlternatives_0.eContents().get(9);
		
		//FeatureCall:
		//	fc=(AdaptiveProcessFeatureCall | AgentInteractionFeatureCall | EnvironmentInteractionFeatureCall |
		//	InteractionFeatureCall | FunctionFeatureCall | BehaviorFeatureCall | GroupExternalInteractionFeatureCall |
		//	GroupSelfInternalInteractionsFeatureCall | GroupInternalInteractionsFeatureCall | ExternalInteractionFeatureCall);
		@Override public ParserRule getRule() { return rule; }
		
		//fc=(AdaptiveProcessFeatureCall | AgentInteractionFeatureCall | EnvironmentInteractionFeatureCall |
		//InteractionFeatureCall | FunctionFeatureCall | BehaviorFeatureCall | GroupExternalInteractionFeatureCall |
		//GroupSelfInternalInteractionsFeatureCall | GroupInternalInteractionsFeatureCall | ExternalInteractionFeatureCall)
		public Assignment getFcAssignment() { return cFcAssignment; }
		
		//(AdaptiveProcessFeatureCall | AgentInteractionFeatureCall | EnvironmentInteractionFeatureCall | InteractionFeatureCall |
		//FunctionFeatureCall | BehaviorFeatureCall | GroupExternalInteractionFeatureCall |
		//GroupSelfInternalInteractionsFeatureCall | GroupInternalInteractionsFeatureCall | ExternalInteractionFeatureCall)
		public Alternatives getFcAlternatives_0() { return cFcAlternatives_0; }
		
		//AdaptiveProcessFeatureCall
		public RuleCall getFcAdaptiveProcessFeatureCallParserRuleCall_0_0() { return cFcAdaptiveProcessFeatureCallParserRuleCall_0_0; }
		
		//AgentInteractionFeatureCall
		public RuleCall getFcAgentInteractionFeatureCallParserRuleCall_0_1() { return cFcAgentInteractionFeatureCallParserRuleCall_0_1; }
		
		//EnvironmentInteractionFeatureCall
		public RuleCall getFcEnvironmentInteractionFeatureCallParserRuleCall_0_2() { return cFcEnvironmentInteractionFeatureCallParserRuleCall_0_2; }
		
		//InteractionFeatureCall
		public RuleCall getFcInteractionFeatureCallParserRuleCall_0_3() { return cFcInteractionFeatureCallParserRuleCall_0_3; }
		
		//FunctionFeatureCall
		public RuleCall getFcFunctionFeatureCallParserRuleCall_0_4() { return cFcFunctionFeatureCallParserRuleCall_0_4; }
		
		//BehaviorFeatureCall
		public RuleCall getFcBehaviorFeatureCallParserRuleCall_0_5() { return cFcBehaviorFeatureCallParserRuleCall_0_5; }
		
		//GroupExternalInteractionFeatureCall
		public RuleCall getFcGroupExternalInteractionFeatureCallParserRuleCall_0_6() { return cFcGroupExternalInteractionFeatureCallParserRuleCall_0_6; }
		
		//GroupSelfInternalInteractionsFeatureCall
		public RuleCall getFcGroupSelfInternalInteractionsFeatureCallParserRuleCall_0_7() { return cFcGroupSelfInternalInteractionsFeatureCallParserRuleCall_0_7; }
		
		//GroupInternalInteractionsFeatureCall
		public RuleCall getFcGroupInternalInteractionsFeatureCallParserRuleCall_0_8() { return cFcGroupInternalInteractionsFeatureCallParserRuleCall_0_8; }
		
		//ExternalInteractionFeatureCall
		public RuleCall getFcExternalInteractionFeatureCallParserRuleCall_0_9() { return cFcExternalInteractionFeatureCallParserRuleCall_0_9; }
	}
	public class AdaptiveProcessFeatureCallElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.AdaptiveProcessFeatureCall");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAdaptiveProcessFeatureCallAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cADAPTATIONKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cProcessAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cProcessAdaptiveProcessCrossReference_2_0 = (CrossReference)cProcessAssignment_2.eContents().get(0);
		private final RuleCall cProcessAdaptiveProcessIDTerminalRuleCall_2_0_1 = (RuleCall)cProcessAdaptiveProcessCrossReference_2_0.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cInputsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cInputsExpressionParserRuleCall_4_0 = (RuleCall)cInputsAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cInputsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cInputsExpressionParserRuleCall_5_1_0 = (RuleCall)cInputsAssignment_5_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//AdaptiveProcessFeatureCall:
		//	{AdaptiveProcessFeatureCall} 'ADAPTATION.' process=[AdaptiveProcess] '(' inputs+=Expression? (',' inputs+=Expression)*
		//	')';
		@Override public ParserRule getRule() { return rule; }
		
		//{AdaptiveProcessFeatureCall} 'ADAPTATION.' process=[AdaptiveProcess] '(' inputs+=Expression? (',' inputs+=Expression)*
		//')'
		public Group getGroup() { return cGroup; }
		
		//{AdaptiveProcessFeatureCall}
		public Action getAdaptiveProcessFeatureCallAction_0() { return cAdaptiveProcessFeatureCallAction_0; }
		
		//'ADAPTATION.'
		public Keyword getADAPTATIONKeyword_1() { return cADAPTATIONKeyword_1; }
		
		//process=[AdaptiveProcess]
		public Assignment getProcessAssignment_2() { return cProcessAssignment_2; }
		
		//[AdaptiveProcess]
		public CrossReference getProcessAdaptiveProcessCrossReference_2_0() { return cProcessAdaptiveProcessCrossReference_2_0; }
		
		//ID
		public RuleCall getProcessAdaptiveProcessIDTerminalRuleCall_2_0_1() { return cProcessAdaptiveProcessIDTerminalRuleCall_2_0_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }
		
		//inputs+=Expression?
		public Assignment getInputsAssignment_4() { return cInputsAssignment_4; }
		
		//Expression
		public RuleCall getInputsExpressionParserRuleCall_4_0() { return cInputsExpressionParserRuleCall_4_0; }
		
		//(',' inputs+=Expression)*
		public Group getGroup_5() { return cGroup_5; }
		
		//','
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }
		
		//inputs+=Expression
		public Assignment getInputsAssignment_5_1() { return cInputsAssignment_5_1; }
		
		//Expression
		public RuleCall getInputsExpressionParserRuleCall_5_1_0() { return cInputsExpressionParserRuleCall_5_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }
	}
	public class InteractionFeatureCallElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.InteractionFeatureCall");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cInteractionFeatureCallAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cINTERACTIONKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cProcessAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cProcessInteractionCrossReference_2_0 = (CrossReference)cProcessAssignment_2.eContents().get(0);
		private final RuleCall cProcessInteractionIDTerminalRuleCall_2_0_1 = (RuleCall)cProcessInteractionCrossReference_2_0.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cInputsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cInputsExpressionParserRuleCall_4_0 = (RuleCall)cInputsAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cInputsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cInputsExpressionParserRuleCall_5_1_0 = (RuleCall)cInputsAssignment_5_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//InteractionFeatureCall:
		//	{InteractionFeatureCall} 'INTERACTION.' process=[Interaction] '(' inputs+=Expression? (',' inputs+=Expression)* ')';
		@Override public ParserRule getRule() { return rule; }
		
		//{InteractionFeatureCall} 'INTERACTION.' process=[Interaction] '(' inputs+=Expression? (',' inputs+=Expression)* ')'
		public Group getGroup() { return cGroup; }
		
		//{InteractionFeatureCall}
		public Action getInteractionFeatureCallAction_0() { return cInteractionFeatureCallAction_0; }
		
		//'INTERACTION.'
		public Keyword getINTERACTIONKeyword_1() { return cINTERACTIONKeyword_1; }
		
		//process=[Interaction]
		public Assignment getProcessAssignment_2() { return cProcessAssignment_2; }
		
		//[Interaction]
		public CrossReference getProcessInteractionCrossReference_2_0() { return cProcessInteractionCrossReference_2_0; }
		
		//ID
		public RuleCall getProcessInteractionIDTerminalRuleCall_2_0_1() { return cProcessInteractionIDTerminalRuleCall_2_0_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }
		
		//inputs+=Expression?
		public Assignment getInputsAssignment_4() { return cInputsAssignment_4; }
		
		//Expression
		public RuleCall getInputsExpressionParserRuleCall_4_0() { return cInputsExpressionParserRuleCall_4_0; }
		
		//(',' inputs+=Expression)*
		public Group getGroup_5() { return cGroup_5; }
		
		//','
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }
		
		//inputs+=Expression
		public Assignment getInputsAssignment_5_1() { return cInputsAssignment_5_1; }
		
		//Expression
		public RuleCall getInputsExpressionParserRuleCall_5_1_0() { return cInputsExpressionParserRuleCall_5_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }
	}
	public class AgentInteractionFeatureCallElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.AgentInteractionFeatureCall");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAgentInteractionFeatureCallAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cAgtAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cAgtSymbolCrossReference_1_0 = (CrossReference)cAgtAssignment_1.eContents().get(0);
		private final RuleCall cAgtSymbolIDTerminalRuleCall_1_0_1 = (RuleCall)cAgtSymbolCrossReference_1_0.eContents().get(1);
		private final Keyword cAGT_INTERACTIONKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cProcessAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cProcessAgentInteractionCrossReference_3_0 = (CrossReference)cProcessAssignment_3.eContents().get(0);
		private final RuleCall cProcessAgentInteractionIDTerminalRuleCall_3_0_1 = (RuleCall)cProcessAgentInteractionCrossReference_3_0.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cInputsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cInputsExpressionParserRuleCall_5_0 = (RuleCall)cInputsAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cInputsAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cInputsExpressionParserRuleCall_6_1_0 = (RuleCall)cInputsAssignment_6_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//AgentInteractionFeatureCall:
		//	{AgentInteractionFeatureCall} agt=[Symbol] '.AGT_INTERACTION.' process=[AgentInteraction] '(' inputs+=Expression? (','
		//	inputs+=Expression)* ')';
		@Override public ParserRule getRule() { return rule; }
		
		//{AgentInteractionFeatureCall} agt=[Symbol] '.AGT_INTERACTION.' process=[AgentInteraction] '(' inputs+=Expression? (','
		//inputs+=Expression)* ')'
		public Group getGroup() { return cGroup; }
		
		//{AgentInteractionFeatureCall}
		public Action getAgentInteractionFeatureCallAction_0() { return cAgentInteractionFeatureCallAction_0; }
		
		//agt=[Symbol]
		public Assignment getAgtAssignment_1() { return cAgtAssignment_1; }
		
		//[Symbol]
		public CrossReference getAgtSymbolCrossReference_1_0() { return cAgtSymbolCrossReference_1_0; }
		
		//ID
		public RuleCall getAgtSymbolIDTerminalRuleCall_1_0_1() { return cAgtSymbolIDTerminalRuleCall_1_0_1; }
		
		//'.AGT_INTERACTION.'
		public Keyword getAGT_INTERACTIONKeyword_2() { return cAGT_INTERACTIONKeyword_2; }
		
		//process=[AgentInteraction]
		public Assignment getProcessAssignment_3() { return cProcessAssignment_3; }
		
		//[AgentInteraction]
		public CrossReference getProcessAgentInteractionCrossReference_3_0() { return cProcessAgentInteractionCrossReference_3_0; }
		
		//ID
		public RuleCall getProcessAgentInteractionIDTerminalRuleCall_3_0_1() { return cProcessAgentInteractionIDTerminalRuleCall_3_0_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_4() { return cLeftParenthesisKeyword_4; }
		
		//inputs+=Expression?
		public Assignment getInputsAssignment_5() { return cInputsAssignment_5; }
		
		//Expression
		public RuleCall getInputsExpressionParserRuleCall_5_0() { return cInputsExpressionParserRuleCall_5_0; }
		
		//(',' inputs+=Expression)*
		public Group getGroup_6() { return cGroup_6; }
		
		//','
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }
		
		//inputs+=Expression
		public Assignment getInputsAssignment_6_1() { return cInputsAssignment_6_1; }
		
		//Expression
		public RuleCall getInputsExpressionParserRuleCall_6_1_0() { return cInputsExpressionParserRuleCall_6_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_7() { return cRightParenthesisKeyword_7; }
	}
	public class GroupExternalInteractionFeatureCallElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.GroupExternalInteractionFeatureCall");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGroupExternalInteractionFeatureCallAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cGrpAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cGrpSymbolCrossReference_1_0 = (CrossReference)cGrpAssignment_1.eContents().get(0);
		private final RuleCall cGrpSymbolIDTerminalRuleCall_1_0_1 = (RuleCall)cGrpSymbolCrossReference_1_0.eContents().get(1);
		private final Keyword cGRP_EXT_INTERACTIONKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cProcessAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cProcessGroupExternalInteractionCrossReference_3_0 = (CrossReference)cProcessAssignment_3.eContents().get(0);
		private final RuleCall cProcessGroupExternalInteractionIDTerminalRuleCall_3_0_1 = (RuleCall)cProcessGroupExternalInteractionCrossReference_3_0.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cInputsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cInputsExpressionParserRuleCall_5_0 = (RuleCall)cInputsAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cInputsAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cInputsExpressionParserRuleCall_6_1_0 = (RuleCall)cInputsAssignment_6_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//GroupExternalInteractionFeatureCall:
		//	{GroupExternalInteractionFeatureCall} grp=[Symbol] '.GRP_EXT_INTERACTION.' process=[GroupExternalInteraction] '('
		//	inputs+=Expression? (',' inputs+=Expression)* ')';
		@Override public ParserRule getRule() { return rule; }
		
		//{GroupExternalInteractionFeatureCall} grp=[Symbol] '.GRP_EXT_INTERACTION.' process=[GroupExternalInteraction] '('
		//inputs+=Expression? (',' inputs+=Expression)* ')'
		public Group getGroup() { return cGroup; }
		
		//{GroupExternalInteractionFeatureCall}
		public Action getGroupExternalInteractionFeatureCallAction_0() { return cGroupExternalInteractionFeatureCallAction_0; }
		
		//grp=[Symbol]
		public Assignment getGrpAssignment_1() { return cGrpAssignment_1; }
		
		//[Symbol]
		public CrossReference getGrpSymbolCrossReference_1_0() { return cGrpSymbolCrossReference_1_0; }
		
		//ID
		public RuleCall getGrpSymbolIDTerminalRuleCall_1_0_1() { return cGrpSymbolIDTerminalRuleCall_1_0_1; }
		
		//'.GRP_EXT_INTERACTION.'
		public Keyword getGRP_EXT_INTERACTIONKeyword_2() { return cGRP_EXT_INTERACTIONKeyword_2; }
		
		//process=[GroupExternalInteraction]
		public Assignment getProcessAssignment_3() { return cProcessAssignment_3; }
		
		//[GroupExternalInteraction]
		public CrossReference getProcessGroupExternalInteractionCrossReference_3_0() { return cProcessGroupExternalInteractionCrossReference_3_0; }
		
		//ID
		public RuleCall getProcessGroupExternalInteractionIDTerminalRuleCall_3_0_1() { return cProcessGroupExternalInteractionIDTerminalRuleCall_3_0_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_4() { return cLeftParenthesisKeyword_4; }
		
		//inputs+=Expression?
		public Assignment getInputsAssignment_5() { return cInputsAssignment_5; }
		
		//Expression
		public RuleCall getInputsExpressionParserRuleCall_5_0() { return cInputsExpressionParserRuleCall_5_0; }
		
		//(',' inputs+=Expression)*
		public Group getGroup_6() { return cGroup_6; }
		
		//','
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }
		
		//inputs+=Expression
		public Assignment getInputsAssignment_6_1() { return cInputsAssignment_6_1; }
		
		//Expression
		public RuleCall getInputsExpressionParserRuleCall_6_1_0() { return cInputsExpressionParserRuleCall_6_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_7() { return cRightParenthesisKeyword_7; }
	}
	public class ExternalInteractionFeatureCallElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.ExternalInteractionFeatureCall");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cExternalInteractionFeatureCallAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cEXT_INTERACTIONKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cProcessAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cProcessGroupExternalInteractionCrossReference_2_0 = (CrossReference)cProcessAssignment_2.eContents().get(0);
		private final RuleCall cProcessGroupExternalInteractionIDTerminalRuleCall_2_0_1 = (RuleCall)cProcessGroupExternalInteractionCrossReference_2_0.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cInputsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cInputsExpressionParserRuleCall_4_0 = (RuleCall)cInputsAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cInputsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cInputsExpressionParserRuleCall_5_1_0 = (RuleCall)cInputsAssignment_5_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//ExternalInteractionFeatureCall:
		//	{ExternalInteractionFeatureCall} 'EXT_INTERACTION.' process=[GroupExternalInteraction] '(' inputs+=Expression? (','
		//	inputs+=Expression)* ')';
		@Override public ParserRule getRule() { return rule; }
		
		//{ExternalInteractionFeatureCall} 'EXT_INTERACTION.' process=[GroupExternalInteraction] '(' inputs+=Expression? (','
		//inputs+=Expression)* ')'
		public Group getGroup() { return cGroup; }
		
		//{ExternalInteractionFeatureCall}
		public Action getExternalInteractionFeatureCallAction_0() { return cExternalInteractionFeatureCallAction_0; }
		
		//'EXT_INTERACTION.'
		public Keyword getEXT_INTERACTIONKeyword_1() { return cEXT_INTERACTIONKeyword_1; }
		
		//process=[GroupExternalInteraction]
		public Assignment getProcessAssignment_2() { return cProcessAssignment_2; }
		
		//[GroupExternalInteraction]
		public CrossReference getProcessGroupExternalInteractionCrossReference_2_0() { return cProcessGroupExternalInteractionCrossReference_2_0; }
		
		//ID
		public RuleCall getProcessGroupExternalInteractionIDTerminalRuleCall_2_0_1() { return cProcessGroupExternalInteractionIDTerminalRuleCall_2_0_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }
		
		//inputs+=Expression?
		public Assignment getInputsAssignment_4() { return cInputsAssignment_4; }
		
		//Expression
		public RuleCall getInputsExpressionParserRuleCall_4_0() { return cInputsExpressionParserRuleCall_4_0; }
		
		//(',' inputs+=Expression)*
		public Group getGroup_5() { return cGroup_5; }
		
		//','
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }
		
		//inputs+=Expression
		public Assignment getInputsAssignment_5_1() { return cInputsAssignment_5_1; }
		
		//Expression
		public RuleCall getInputsExpressionParserRuleCall_5_1_0() { return cInputsExpressionParserRuleCall_5_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }
	}
	public class GroupInternalInteractionsFeatureCallElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.GroupInternalInteractionsFeatureCall");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGroupInternalInteractionsFeatureCallAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cGrpAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cGrpSymbolCrossReference_1_0 = (CrossReference)cGrpAssignment_1.eContents().get(0);
		private final RuleCall cGrpSymbolIDTerminalRuleCall_1_0_1 = (RuleCall)cGrpSymbolCrossReference_1_0.eContents().get(1);
		private final Keyword cGRP_INT_INTERACTIONKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cProcessAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cProcessGroupInternalInteractionCrossReference_3_0 = (CrossReference)cProcessAssignment_3.eContents().get(0);
		private final RuleCall cProcessGroupInternalInteractionIDTerminalRuleCall_3_0_1 = (RuleCall)cProcessGroupInternalInteractionCrossReference_3_0.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cInputsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cInputsExpressionParserRuleCall_5_0 = (RuleCall)cInputsAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cInputsAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cInputsExpressionParserRuleCall_6_1_0 = (RuleCall)cInputsAssignment_6_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//GroupInternalInteractionsFeatureCall:
		//	{GroupInternalInteractionsFeatureCall} grp=[Symbol] '.GRP_INT_INTERACTION.' process=[GroupInternalInteraction] '('
		//	inputs+=Expression? (',' inputs+=Expression)* ')';
		@Override public ParserRule getRule() { return rule; }
		
		//{GroupInternalInteractionsFeatureCall} grp=[Symbol] '.GRP_INT_INTERACTION.' process=[GroupInternalInteraction] '('
		//inputs+=Expression? (',' inputs+=Expression)* ')'
		public Group getGroup() { return cGroup; }
		
		//{GroupInternalInteractionsFeatureCall}
		public Action getGroupInternalInteractionsFeatureCallAction_0() { return cGroupInternalInteractionsFeatureCallAction_0; }
		
		//grp=[Symbol]
		public Assignment getGrpAssignment_1() { return cGrpAssignment_1; }
		
		//[Symbol]
		public CrossReference getGrpSymbolCrossReference_1_0() { return cGrpSymbolCrossReference_1_0; }
		
		//ID
		public RuleCall getGrpSymbolIDTerminalRuleCall_1_0_1() { return cGrpSymbolIDTerminalRuleCall_1_0_1; }
		
		//'.GRP_INT_INTERACTION.'
		public Keyword getGRP_INT_INTERACTIONKeyword_2() { return cGRP_INT_INTERACTIONKeyword_2; }
		
		//process=[GroupInternalInteraction]
		public Assignment getProcessAssignment_3() { return cProcessAssignment_3; }
		
		//[GroupInternalInteraction]
		public CrossReference getProcessGroupInternalInteractionCrossReference_3_0() { return cProcessGroupInternalInteractionCrossReference_3_0; }
		
		//ID
		public RuleCall getProcessGroupInternalInteractionIDTerminalRuleCall_3_0_1() { return cProcessGroupInternalInteractionIDTerminalRuleCall_3_0_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_4() { return cLeftParenthesisKeyword_4; }
		
		//inputs+=Expression?
		public Assignment getInputsAssignment_5() { return cInputsAssignment_5; }
		
		//Expression
		public RuleCall getInputsExpressionParserRuleCall_5_0() { return cInputsExpressionParserRuleCall_5_0; }
		
		//(',' inputs+=Expression)*
		public Group getGroup_6() { return cGroup_6; }
		
		//','
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }
		
		//inputs+=Expression
		public Assignment getInputsAssignment_6_1() { return cInputsAssignment_6_1; }
		
		//Expression
		public RuleCall getInputsExpressionParserRuleCall_6_1_0() { return cInputsExpressionParserRuleCall_6_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_7() { return cRightParenthesisKeyword_7; }
	}
	public class EnvironmentInteractionFeatureCallElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.EnvironmentInteractionFeatureCall");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEnvironmentInteractionFeatureCallAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cEnvAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cEnvSymbolCrossReference_1_0 = (CrossReference)cEnvAssignment_1.eContents().get(0);
		private final RuleCall cEnvSymbolIDTerminalRuleCall_1_0_1 = (RuleCall)cEnvSymbolCrossReference_1_0.eContents().get(1);
		private final Keyword cENV_INTERACTIONKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cProcessAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cProcessEnvironmentInteractionCrossReference_3_0 = (CrossReference)cProcessAssignment_3.eContents().get(0);
		private final RuleCall cProcessEnvironmentInteractionIDTerminalRuleCall_3_0_1 = (RuleCall)cProcessEnvironmentInteractionCrossReference_3_0.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cInputsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cInputsExpressionParserRuleCall_5_0 = (RuleCall)cInputsAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cInputsAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cInputsExpressionParserRuleCall_6_1_0 = (RuleCall)cInputsAssignment_6_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//EnvironmentInteractionFeatureCall:
		//	{EnvironmentInteractionFeatureCall} env=[Symbol] '.ENV_INTERACTION.' process=[EnvironmentInteraction] '('
		//	inputs+=Expression? (',' inputs+=Expression)* ')';
		@Override public ParserRule getRule() { return rule; }
		
		//{EnvironmentInteractionFeatureCall} env=[Symbol] '.ENV_INTERACTION.' process=[EnvironmentInteraction] '('
		//inputs+=Expression? (',' inputs+=Expression)* ')'
		public Group getGroup() { return cGroup; }
		
		//{EnvironmentInteractionFeatureCall}
		public Action getEnvironmentInteractionFeatureCallAction_0() { return cEnvironmentInteractionFeatureCallAction_0; }
		
		//env=[Symbol]
		public Assignment getEnvAssignment_1() { return cEnvAssignment_1; }
		
		//[Symbol]
		public CrossReference getEnvSymbolCrossReference_1_0() { return cEnvSymbolCrossReference_1_0; }
		
		//ID
		public RuleCall getEnvSymbolIDTerminalRuleCall_1_0_1() { return cEnvSymbolIDTerminalRuleCall_1_0_1; }
		
		//'.ENV_INTERACTION.'
		public Keyword getENV_INTERACTIONKeyword_2() { return cENV_INTERACTIONKeyword_2; }
		
		//process=[EnvironmentInteraction]
		public Assignment getProcessAssignment_3() { return cProcessAssignment_3; }
		
		//[EnvironmentInteraction]
		public CrossReference getProcessEnvironmentInteractionCrossReference_3_0() { return cProcessEnvironmentInteractionCrossReference_3_0; }
		
		//ID
		public RuleCall getProcessEnvironmentInteractionIDTerminalRuleCall_3_0_1() { return cProcessEnvironmentInteractionIDTerminalRuleCall_3_0_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_4() { return cLeftParenthesisKeyword_4; }
		
		//inputs+=Expression?
		public Assignment getInputsAssignment_5() { return cInputsAssignment_5; }
		
		//Expression
		public RuleCall getInputsExpressionParserRuleCall_5_0() { return cInputsExpressionParserRuleCall_5_0; }
		
		//(',' inputs+=Expression)*
		public Group getGroup_6() { return cGroup_6; }
		
		//','
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }
		
		//inputs+=Expression
		public Assignment getInputsAssignment_6_1() { return cInputsAssignment_6_1; }
		
		//Expression
		public RuleCall getInputsExpressionParserRuleCall_6_1_0() { return cInputsExpressionParserRuleCall_6_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_7() { return cRightParenthesisKeyword_7; }
	}
	public class GroupSelfInternalInteractionsFeatureCallElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.GroupSelfInternalInteractionsFeatureCall");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGroupSelfInternalInteractionsFeatureCallAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cINT_INTERACTIONKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cProcessAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cProcessGroupInternalInteractionCrossReference_2_0 = (CrossReference)cProcessAssignment_2.eContents().get(0);
		private final RuleCall cProcessGroupInternalInteractionIDTerminalRuleCall_2_0_1 = (RuleCall)cProcessGroupInternalInteractionCrossReference_2_0.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cInputsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cInputsExpressionParserRuleCall_4_0 = (RuleCall)cInputsAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cInputsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cInputsExpressionParserRuleCall_5_1_0 = (RuleCall)cInputsAssignment_5_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//GroupSelfInternalInteractionsFeatureCall:
		//	{GroupSelfInternalInteractionsFeatureCall} 'INT_INTERACTION.' process=[GroupInternalInteraction] '('
		//	inputs+=Expression? (',' inputs+=Expression)* ')';
		@Override public ParserRule getRule() { return rule; }
		
		//{GroupSelfInternalInteractionsFeatureCall} 'INT_INTERACTION.' process=[GroupInternalInteraction] '(' inputs+=Expression?
		//(',' inputs+=Expression)* ')'
		public Group getGroup() { return cGroup; }
		
		//{GroupSelfInternalInteractionsFeatureCall}
		public Action getGroupSelfInternalInteractionsFeatureCallAction_0() { return cGroupSelfInternalInteractionsFeatureCallAction_0; }
		
		//'INT_INTERACTION.'
		public Keyword getINT_INTERACTIONKeyword_1() { return cINT_INTERACTIONKeyword_1; }
		
		//process=[GroupInternalInteraction]
		public Assignment getProcessAssignment_2() { return cProcessAssignment_2; }
		
		//[GroupInternalInteraction]
		public CrossReference getProcessGroupInternalInteractionCrossReference_2_0() { return cProcessGroupInternalInteractionCrossReference_2_0; }
		
		//ID
		public RuleCall getProcessGroupInternalInteractionIDTerminalRuleCall_2_0_1() { return cProcessGroupInternalInteractionIDTerminalRuleCall_2_0_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }
		
		//inputs+=Expression?
		public Assignment getInputsAssignment_4() { return cInputsAssignment_4; }
		
		//Expression
		public RuleCall getInputsExpressionParserRuleCall_4_0() { return cInputsExpressionParserRuleCall_4_0; }
		
		//(',' inputs+=Expression)*
		public Group getGroup_5() { return cGroup_5; }
		
		//','
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }
		
		//inputs+=Expression
		public Assignment getInputsAssignment_5_1() { return cInputsAssignment_5_1; }
		
		//Expression
		public RuleCall getInputsExpressionParserRuleCall_5_1_0() { return cInputsExpressionParserRuleCall_5_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }
	}
	public class FunctionFeatureCallElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.FunctionFeatureCall");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cFunctionFeatureCallAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cFUNCTIONKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cProcessAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cProcessFunctionCrossReference_2_0 = (CrossReference)cProcessAssignment_2.eContents().get(0);
		private final RuleCall cProcessFunctionIDTerminalRuleCall_2_0_1 = (RuleCall)cProcessFunctionCrossReference_2_0.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cInputsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cInputsExpressionParserRuleCall_4_0 = (RuleCall)cInputsAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cInputsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cInputsExpressionParserRuleCall_5_1_0 = (RuleCall)cInputsAssignment_5_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//FunctionFeatureCall:
		//	{FunctionFeatureCall} 'FUNCTION.' process=[Function] '(' inputs+=Expression? (',' inputs+=Expression)* ')';
		@Override public ParserRule getRule() { return rule; }
		
		//{FunctionFeatureCall} 'FUNCTION.' process=[Function] '(' inputs+=Expression? (',' inputs+=Expression)* ')'
		public Group getGroup() { return cGroup; }
		
		//{FunctionFeatureCall}
		public Action getFunctionFeatureCallAction_0() { return cFunctionFeatureCallAction_0; }
		
		//'FUNCTION.'
		public Keyword getFUNCTIONKeyword_1() { return cFUNCTIONKeyword_1; }
		
		//process=[Function]
		public Assignment getProcessAssignment_2() { return cProcessAssignment_2; }
		
		//[Function]
		public CrossReference getProcessFunctionCrossReference_2_0() { return cProcessFunctionCrossReference_2_0; }
		
		//ID
		public RuleCall getProcessFunctionIDTerminalRuleCall_2_0_1() { return cProcessFunctionIDTerminalRuleCall_2_0_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }
		
		//inputs+=Expression?
		public Assignment getInputsAssignment_4() { return cInputsAssignment_4; }
		
		//Expression
		public RuleCall getInputsExpressionParserRuleCall_4_0() { return cInputsExpressionParserRuleCall_4_0; }
		
		//(',' inputs+=Expression)*
		public Group getGroup_5() { return cGroup_5; }
		
		//','
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }
		
		//inputs+=Expression
		public Assignment getInputsAssignment_5_1() { return cInputsAssignment_5_1; }
		
		//Expression
		public RuleCall getInputsExpressionParserRuleCall_5_1_0() { return cInputsExpressionParserRuleCall_5_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }
	}
	public class BehaviorFeatureCallElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.BehaviorFeatureCall");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cBehaviorFeatureCallAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cBEHAVIORKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cProcessAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cProcessBehaviorCrossReference_2_0 = (CrossReference)cProcessAssignment_2.eContents().get(0);
		private final RuleCall cProcessBehaviorIDTerminalRuleCall_2_0_1 = (RuleCall)cProcessBehaviorCrossReference_2_0.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cInputsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cInputsExpressionParserRuleCall_4_0 = (RuleCall)cInputsAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cInputsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cInputsExpressionParserRuleCall_5_1_0 = (RuleCall)cInputsAssignment_5_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//BehaviorFeatureCall:
		//	{BehaviorFeatureCall} 'BEHAVIOR.' process=[Behavior] '(' inputs+=Expression? (',' inputs+=Expression)* ')';
		@Override public ParserRule getRule() { return rule; }
		
		//{BehaviorFeatureCall} 'BEHAVIOR.' process=[Behavior] '(' inputs+=Expression? (',' inputs+=Expression)* ')'
		public Group getGroup() { return cGroup; }
		
		//{BehaviorFeatureCall}
		public Action getBehaviorFeatureCallAction_0() { return cBehaviorFeatureCallAction_0; }
		
		//'BEHAVIOR.'
		public Keyword getBEHAVIORKeyword_1() { return cBEHAVIORKeyword_1; }
		
		//process=[Behavior]
		public Assignment getProcessAssignment_2() { return cProcessAssignment_2; }
		
		//[Behavior]
		public CrossReference getProcessBehaviorCrossReference_2_0() { return cProcessBehaviorCrossReference_2_0; }
		
		//ID
		public RuleCall getProcessBehaviorIDTerminalRuleCall_2_0_1() { return cProcessBehaviorIDTerminalRuleCall_2_0_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }
		
		//inputs+=Expression?
		public Assignment getInputsAssignment_4() { return cInputsAssignment_4; }
		
		//Expression
		public RuleCall getInputsExpressionParserRuleCall_4_0() { return cInputsExpressionParserRuleCall_4_0; }
		
		//(',' inputs+=Expression)*
		public Group getGroup_5() { return cGroup_5; }
		
		//','
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }
		
		//inputs+=Expression
		public Assignment getInputsAssignment_5_1() { return cInputsAssignment_5_1; }
		
		//Expression
		public RuleCall getInputsExpressionParserRuleCall_5_1_0() { return cInputsExpressionParserRuleCall_5_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }
	}
	public class SubSystemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.SubSystem");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cSubsystem_typeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cSubsystem_typeSubSystemTypeEnumRuleCall_2_0 = (RuleCall)cSubsystem_typeAssignment_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cFunctionParametersAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cFunctionParametersFunctionParameterParserRuleCall_5_0 = (RuleCall)cFunctionParametersAssignment_5.eContents().get(0);
		private final Keyword cRightParenthesisColonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cLeftCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Alternatives cAlternatives_8_0 = (Alternatives)cGroup_8.eContents().get(0);
		private final Assignment cBodyAssignment_8_0_0 = (Assignment)cAlternatives_8_0.eContents().get(0);
		private final RuleCall cBodyFieldParserRuleCall_8_0_0_0 = (RuleCall)cBodyAssignment_8_0_0.eContents().get(0);
		private final Assignment cBodyAssignment_8_0_1 = (Assignment)cAlternatives_8_0.eContents().get(1);
		private final RuleCall cBodyExpressionParserRuleCall_8_0_1_0 = (RuleCall)cBodyAssignment_8_0_1.eContents().get(0);
		private final Assignment cBodyAssignment_8_0_2 = (Assignment)cAlternatives_8_0.eContents().get(2);
		private final RuleCall cBodyFormulaParserRuleCall_8_0_2_0 = (RuleCall)cBodyAssignment_8_0_2.eContents().get(0);
		private final Assignment cBodyAssignment_8_0_3 = (Assignment)cAlternatives_8_0.eContents().get(3);
		private final RuleCall cBodySelfAssignedFormulaParserRuleCall_8_0_3_0 = (RuleCall)cBodyAssignment_8_0_3.eContents().get(0);
		private final Keyword cSemicolonKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Keyword cRightCurlyBracketSemicolonKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		///**
		// * SubSystem:
		// * name:[SystemType](inputs){};
		// */ SubSystem:
		//	name=ID '[' subsystem_type=SubSystemType ']' '(' functionParameters+=FunctionParameter* '):' '{' ((body+=Field |
		//	body+=Expression | body+=Formula | body+=SelfAssignedFormula) ';')*
		//	'};';
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID '[' subsystem_type=SubSystemType ']' '(' functionParameters+=FunctionParameter* '):' '{' ((body+=Field |
		//body+=Expression | body+=Formula | body+=SelfAssignedFormula) ';')* '};'
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }
		
		//subsystem_type=SubSystemType
		public Assignment getSubsystem_typeAssignment_2() { return cSubsystem_typeAssignment_2; }
		
		//SubSystemType
		public RuleCall getSubsystem_typeSubSystemTypeEnumRuleCall_2_0() { return cSubsystem_typeSubSystemTypeEnumRuleCall_2_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_3() { return cRightSquareBracketKeyword_3; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_4() { return cLeftParenthesisKeyword_4; }
		
		//functionParameters+=FunctionParameter*
		public Assignment getFunctionParametersAssignment_5() { return cFunctionParametersAssignment_5; }
		
		//FunctionParameter
		public RuleCall getFunctionParametersFunctionParameterParserRuleCall_5_0() { return cFunctionParametersFunctionParameterParserRuleCall_5_0; }
		
		//'):'
		public Keyword getRightParenthesisColonKeyword_6() { return cRightParenthesisColonKeyword_6; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_7() { return cLeftCurlyBracketKeyword_7; }
		
		//((body+=Field | body+=Expression | body+=Formula | body+=SelfAssignedFormula) ';')*
		public Group getGroup_8() { return cGroup_8; }
		
		//body+=Field | body+=Expression | body+=Formula | body+=SelfAssignedFormula
		public Alternatives getAlternatives_8_0() { return cAlternatives_8_0; }
		
		//body+=Field
		public Assignment getBodyAssignment_8_0_0() { return cBodyAssignment_8_0_0; }
		
		//Field
		public RuleCall getBodyFieldParserRuleCall_8_0_0_0() { return cBodyFieldParserRuleCall_8_0_0_0; }
		
		//body+=Expression
		public Assignment getBodyAssignment_8_0_1() { return cBodyAssignment_8_0_1; }
		
		//Expression
		public RuleCall getBodyExpressionParserRuleCall_8_0_1_0() { return cBodyExpressionParserRuleCall_8_0_1_0; }
		
		//body+=Formula
		public Assignment getBodyAssignment_8_0_2() { return cBodyAssignment_8_0_2; }
		
		//Formula
		public RuleCall getBodyFormulaParserRuleCall_8_0_2_0() { return cBodyFormulaParserRuleCall_8_0_2_0; }
		
		//body+=SelfAssignedFormula
		public Assignment getBodyAssignment_8_0_3() { return cBodyAssignment_8_0_3; }
		
		//SelfAssignedFormula
		public RuleCall getBodySelfAssignedFormulaParserRuleCall_8_0_3_0() { return cBodySelfAssignedFormulaParserRuleCall_8_0_3_0; }
		
		//';'
		public Keyword getSemicolonKeyword_8_1() { return cSemicolonKeyword_8_1; }
		
		//'};'
		public Keyword getRightCurlyBracketSemicolonKeyword_9() { return cRightCurlyBracketSemicolonKeyword_9; }
	}
	public class SubSystemsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.SubSystems");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSubSystemsAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSubsystemsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cSubSystemsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSubSystemsSubSystemParserRuleCall_3_0 = (RuleCall)cSubSystemsAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Assignment cSubAgentsAssignment_4_0 = (Assignment)cAlternatives_4.eContents().get(0);
		private final RuleCall cSubAgentsAgentParserRuleCall_4_0_0 = (RuleCall)cSubAgentsAssignment_4_0.eContents().get(0);
		private final Assignment cSubEnvsAssignment_4_1 = (Assignment)cAlternatives_4.eContents().get(1);
		private final RuleCall cSubEnvsEnvironmentParserRuleCall_4_1_0 = (RuleCall)cSubEnvsAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//SubSystems:
		//	{SubSystems}
		//	'subsystems:' '{'
		//	subSystems+=SubSystem* (subAgents+=Agent | subEnvs+=Environment)* //Should we check to ensure that an agent can't be made up of environments??
		//	'};';
		@Override public ParserRule getRule() { return rule; }
		
		//{SubSystems} 'subsystems:' '{' subSystems+=SubSystem* (subAgents+=Agent | subEnvs+=Environment)* //Should we check to ensure that an agent can't be made up of environments??
		//'};'
		public Group getGroup() { return cGroup; }
		
		//{SubSystems}
		public Action getSubSystemsAction_0() { return cSubSystemsAction_0; }
		
		//'subsystems:'
		public Keyword getSubsystemsKeyword_1() { return cSubsystemsKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//subSystems+=SubSystem*
		public Assignment getSubSystemsAssignment_3() { return cSubSystemsAssignment_3; }
		
		//SubSystem
		public RuleCall getSubSystemsSubSystemParserRuleCall_3_0() { return cSubSystemsSubSystemParserRuleCall_3_0; }
		
		//(subAgents+=Agent | subEnvs+=Environment)*
		public Alternatives getAlternatives_4() { return cAlternatives_4; }
		
		//subAgents+=Agent
		public Assignment getSubAgentsAssignment_4_0() { return cSubAgentsAssignment_4_0; }
		
		//Agent
		public RuleCall getSubAgentsAgentParserRuleCall_4_0_0() { return cSubAgentsAgentParserRuleCall_4_0_0; }
		
		//subEnvs+=Environment
		public Assignment getSubEnvsAssignment_4_1() { return cSubEnvsAssignment_4_1; }
		
		//Environment
		public RuleCall getSubEnvsEnvironmentParserRuleCall_4_1_0() { return cSubEnvsEnvironmentParserRuleCall_4_1_0; }
		
		////Should we check to ensure that an agent can't be made up of environments??
		//'};'
		public Keyword getRightCurlyBracketSemicolonKeyword_5() { return cRightCurlyBracketSemicolonKeyword_5; }
	}
	public class TypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.Type");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPrimitiveTypeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cNonPrimitiveTypeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Type:
		//	PrimitiveType | NonPrimitiveType;
		@Override public ParserRule getRule() { return rule; }
		
		//PrimitiveType | NonPrimitiveType
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//PrimitiveType
		public RuleCall getPrimitiveTypeParserRuleCall_0() { return cPrimitiveTypeParserRuleCall_0; }
		
		//NonPrimitiveType
		public RuleCall getNonPrimitiveTypeParserRuleCall_1() { return cNonPrimitiveTypeParserRuleCall_1; }
	}
	public class NonPrimitiveTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.NonPrimitiveType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cObjectParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEnumParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//NonPrimitiveType:
		//	Object | Enum;
		@Override public ParserRule getRule() { return rule; }
		
		//Object | Enum
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Object
		public RuleCall getObjectParserRuleCall_0() { return cObjectParserRuleCall_0; }
		
		//Enum
		public RuleCall getEnumParserRuleCall_1() { return cEnumParserRuleCall_1; }
	}
	public class PrimitiveTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.PrimitiveType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cIntTypeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cBooleanTypeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cFloatTypeParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cNullTypeParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cStringTypeParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		
		//PrimitiveType:
		//	IntType | BooleanType | FloatType | NullType | StringType;
		@Override public ParserRule getRule() { return rule; }
		
		//IntType | BooleanType | FloatType | NullType | StringType
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//IntType
		public RuleCall getIntTypeParserRuleCall_0() { return cIntTypeParserRuleCall_0; }
		
		//BooleanType
		public RuleCall getBooleanTypeParserRuleCall_1() { return cBooleanTypeParserRuleCall_1; }
		
		//FloatType
		public RuleCall getFloatTypeParserRuleCall_2() { return cFloatTypeParserRuleCall_2; }
		
		//NullType
		public RuleCall getNullTypeParserRuleCall_3() { return cNullTypeParserRuleCall_3; }
		
		//StringType
		public RuleCall getStringTypeParserRuleCall_4() { return cStringTypeParserRuleCall_4; }
	}
	public class IntTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.IntType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cIntTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cNameIntKeyword_1_0 = (Keyword)cNameAssignment_1.eContents().get(0);
		
		//IntType:
		//	{IntType} name='int';
		@Override public ParserRule getRule() { return rule; }
		
		//{IntType} name='int'
		public Group getGroup() { return cGroup; }
		
		//{IntType}
		public Action getIntTypeAction_0() { return cIntTypeAction_0; }
		
		//name='int'
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//'int'
		public Keyword getNameIntKeyword_1_0() { return cNameIntKeyword_1_0; }
	}
	public class BooleanTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.BooleanType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cBooleanTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cNameBoolKeyword_1_0 = (Keyword)cNameAssignment_1.eContents().get(0);
		
		//BooleanType:
		//	{BooleanType} name='bool';
		@Override public ParserRule getRule() { return rule; }
		
		//{BooleanType} name='bool'
		public Group getGroup() { return cGroup; }
		
		//{BooleanType}
		public Action getBooleanTypeAction_0() { return cBooleanTypeAction_0; }
		
		//name='bool'
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//'bool'
		public Keyword getNameBoolKeyword_1_0() { return cNameBoolKeyword_1_0; }
	}
	public class FloatTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.FloatType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cFloatTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cNameFloatKeyword_1_0 = (Keyword)cNameAssignment_1.eContents().get(0);
		
		//FloatType:
		//	{FloatType} name='float';
		@Override public ParserRule getRule() { return rule; }
		
		//{FloatType} name='float'
		public Group getGroup() { return cGroup; }
		
		//{FloatType}
		public Action getFloatTypeAction_0() { return cFloatTypeAction_0; }
		
		//name='float'
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//'float'
		public Keyword getNameFloatKeyword_1_0() { return cNameFloatKeyword_1_0; }
	}
	public class StringTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.StringType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cStringTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cNameStringKeyword_1_0 = (Keyword)cNameAssignment_1.eContents().get(0);
		
		//StringType:
		//	{StringType} name='string';
		@Override public ParserRule getRule() { return rule; }
		
		//{StringType} name='string'
		public Group getGroup() { return cGroup; }
		
		//{StringType}
		public Action getStringTypeAction_0() { return cStringTypeAction_0; }
		
		//name='string'
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//'string'
		public Keyword getNameStringKeyword_1_0() { return cNameStringKeyword_1_0; }
	}
	public class NullTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.NullType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cNullTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cNameNullKeyword_1_0 = (Keyword)cNameAssignment_1.eContents().get(0);
		
		//NullType:
		//	{NullType} name='null';
		@Override public ParserRule getRule() { return rule; }
		
		//{NullType} name='null'
		public Group getGroup() { return cGroup; }
		
		//{NullType}
		public Action getNullTypeAction_0() { return cNullTypeAction_0; }
		
		//name='null'
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//'null'
		public Keyword getNameNullKeyword_1_0() { return cNameNullKeyword_1_0; }
	}
	public class BooleanValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.BooleanValue");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//BooleanValue ecore::EBoolean:
		//	'true' | 'false';
		@Override public ParserRule getRule() { return rule; }
		
		//'true' | 'false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'false'
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	public class DataTypeDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.DataTypeDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDataTypeDeclarationAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cVarKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cInitIncludeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cInitIncludeAsteriskKeyword_2_0 = (Keyword)cInitIncludeAssignment_2.eContents().get(0);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Assignment cTypeAssignment_3_0 = (Assignment)cAlternatives_3.eContents().get(0);
		private final RuleCall cTypePrimitiveTypeParserRuleCall_3_0_0 = (RuleCall)cTypeAssignment_3_0.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final Assignment cObjAssignment_3_1_0 = (Assignment)cGroup_3_1.eContents().get(0);
		private final CrossReference cObjNonPrimitiveTypeCrossReference_3_1_0_0 = (CrossReference)cObjAssignment_3_1_0.eContents().get(0);
		private final RuleCall cObjNonPrimitiveTypeIDTerminalRuleCall_3_1_0_0_1 = (RuleCall)cObjNonPrimitiveTypeCrossReference_3_1_0_0.eContents().get(1);
		private final Alternatives cAlternatives_3_1_1 = (Alternatives)cGroup_3_1.eContents().get(1);
		private final Group cGroup_3_1_1_0 = (Group)cAlternatives_3_1_1.eContents().get(0);
		private final Keyword cColonKeyword_3_1_1_0_0 = (Keyword)cGroup_3_1_1_0.eContents().get(0);
		private final Assignment cUseObjAssignment_3_1_1_0_1 = (Assignment)cGroup_3_1_1_0.eContents().get(1);
		private final CrossReference cUseObjNonPrimitiveTypeCrossReference_3_1_1_0_1_0 = (CrossReference)cUseObjAssignment_3_1_1_0_1.eContents().get(0);
		private final RuleCall cUseObjNonPrimitiveTypeIDTerminalRuleCall_3_1_1_0_1_0_1 = (RuleCall)cUseObjNonPrimitiveTypeCrossReference_3_1_1_0_1_0.eContents().get(1);
		private final Group cGroup_3_1_1_1 = (Group)cAlternatives_3_1_1.eContents().get(1);
		private final Keyword cColonKeyword_3_1_1_1_0 = (Keyword)cGroup_3_1_1_1.eContents().get(0);
		private final Assignment cUseTypeAssignment_3_1_1_1_1 = (Assignment)cGroup_3_1_1_1.eContents().get(1);
		private final RuleCall cUseTypePrimitiveTypeParserRuleCall_3_1_1_1_1_0 = (RuleCall)cUseTypeAssignment_3_1_1_1_1.eContents().get(0);
		private final Group cGroup_3_1_1_2 = (Group)cAlternatives_3_1_1.eContents().get(2);
		private final Keyword cLessThanSignKeyword_3_1_1_2_0 = (Keyword)cGroup_3_1_1_2.eContents().get(0);
		private final Alternatives cAlternatives_3_1_1_2_1 = (Alternatives)cGroup_3_1_1_2.eContents().get(1);
		private final Group cGroup_3_1_1_2_1_0 = (Group)cAlternatives_3_1_1_2_1.eContents().get(0);
		private final Keyword cGrpKeyword_3_1_1_2_1_0_0 = (Keyword)cGroup_3_1_1_2_1_0.eContents().get(0);
		private final Assignment cUseGroupAssignment_3_1_1_2_1_0_1 = (Assignment)cGroup_3_1_1_2_1_0.eContents().get(1);
		private final CrossReference cUseGroupGroupCrossReference_3_1_1_2_1_0_1_0 = (CrossReference)cUseGroupAssignment_3_1_1_2_1_0_1.eContents().get(0);
		private final RuleCall cUseGroupGroupIDTerminalRuleCall_3_1_1_2_1_0_1_0_1 = (RuleCall)cUseGroupGroupCrossReference_3_1_1_2_1_0_1_0.eContents().get(1);
		private final Group cGroup_3_1_1_2_1_1 = (Group)cAlternatives_3_1_1_2_1.eContents().get(1);
		private final Keyword cAgtKeyword_3_1_1_2_1_1_0 = (Keyword)cGroup_3_1_1_2_1_1.eContents().get(0);
		private final Assignment cUseAgentAssignment_3_1_1_2_1_1_1 = (Assignment)cGroup_3_1_1_2_1_1.eContents().get(1);
		private final CrossReference cUseAgentAgentCrossReference_3_1_1_2_1_1_1_0 = (CrossReference)cUseAgentAssignment_3_1_1_2_1_1_1.eContents().get(0);
		private final RuleCall cUseAgentAgentIDTerminalRuleCall_3_1_1_2_1_1_1_0_1 = (RuleCall)cUseAgentAgentCrossReference_3_1_1_2_1_1_1_0.eContents().get(1);
		private final Group cGroup_3_1_1_2_1_2 = (Group)cAlternatives_3_1_1_2_1.eContents().get(2);
		private final Keyword cEnvKeyword_3_1_1_2_1_2_0 = (Keyword)cGroup_3_1_1_2_1_2.eContents().get(0);
		private final Assignment cUseEnvAssignment_3_1_1_2_1_2_1 = (Assignment)cGroup_3_1_1_2_1_2.eContents().get(1);
		private final CrossReference cUseEnvEnvironmentCrossReference_3_1_1_2_1_2_1_0 = (CrossReference)cUseEnvAssignment_3_1_1_2_1_2_1.eContents().get(0);
		private final RuleCall cUseEnvEnvironmentIDTerminalRuleCall_3_1_1_2_1_2_1_0_1 = (RuleCall)cUseEnvEnvironmentCrossReference_3_1_1_2_1_2_1_0.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_3_1_1_2_2 = (Keyword)cGroup_3_1_1_2.eContents().get(2);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cNameIDTerminalRuleCall_5_0 = (RuleCall)cNameAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cEqualsSignKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cExprAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cExprExpressionParserRuleCall_6_1_0 = (RuleCall)cExprAssignment_6_1.eContents().get(0);
		
		//DataTypeDeclaration Symbol:
		//	{DataTypeDeclaration} 'var' initInclude="*"? (type=PrimitiveType | obj=[NonPrimitiveType] (':'
		//	useObj=[NonPrimitiveType] |
		//	':' useType=PrimitiveType |
		//	'<' ('grp.' useGroup=[Group] |
		//	'agt.' useAgent=[Agent] |
		//	'env.' useEnv=[Environment]) '>')?) ':' name=ID ('=' expr=Expression)?;
		@Override public ParserRule getRule() { return rule; }
		
		//{DataTypeDeclaration} 'var' initInclude="*"? (type=PrimitiveType | obj=[NonPrimitiveType] (':' useObj=[NonPrimitiveType]
		//| ':' useType=PrimitiveType | '<' ('grp.' useGroup=[Group] | 'agt.' useAgent=[Agent] | 'env.' useEnv=[Environment])
		//'>')?) ':' name=ID ('=' expr=Expression)?
		public Group getGroup() { return cGroup; }
		
		//{DataTypeDeclaration}
		public Action getDataTypeDeclarationAction_0() { return cDataTypeDeclarationAction_0; }
		
		//'var'
		public Keyword getVarKeyword_1() { return cVarKeyword_1; }
		
		//initInclude="*"?
		public Assignment getInitIncludeAssignment_2() { return cInitIncludeAssignment_2; }
		
		//"*"
		public Keyword getInitIncludeAsteriskKeyword_2_0() { return cInitIncludeAsteriskKeyword_2_0; }
		
		//type=PrimitiveType | obj=[NonPrimitiveType] (':' useObj=[NonPrimitiveType] | ':' useType=PrimitiveType | '<' ('grp.'
		//useGroup=[Group] | 'agt.' useAgent=[Agent] | 'env.' useEnv=[Environment]) '>')?
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//type=PrimitiveType
		public Assignment getTypeAssignment_3_0() { return cTypeAssignment_3_0; }
		
		//PrimitiveType
		public RuleCall getTypePrimitiveTypeParserRuleCall_3_0_0() { return cTypePrimitiveTypeParserRuleCall_3_0_0; }
		
		//obj=[NonPrimitiveType] (':' useObj=[NonPrimitiveType] | ':' useType=PrimitiveType | '<' ('grp.' useGroup=[Group] |
		//'agt.' useAgent=[Agent] | 'env.' useEnv=[Environment]) '>')?
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//obj=[NonPrimitiveType]
		public Assignment getObjAssignment_3_1_0() { return cObjAssignment_3_1_0; }
		
		//[NonPrimitiveType]
		public CrossReference getObjNonPrimitiveTypeCrossReference_3_1_0_0() { return cObjNonPrimitiveTypeCrossReference_3_1_0_0; }
		
		//ID
		public RuleCall getObjNonPrimitiveTypeIDTerminalRuleCall_3_1_0_0_1() { return cObjNonPrimitiveTypeIDTerminalRuleCall_3_1_0_0_1; }
		
		//(':' useObj=[NonPrimitiveType] | ':' useType=PrimitiveType | '<' ('grp.' useGroup=[Group] | 'agt.' useAgent=[Agent] |
		//'env.' useEnv=[Environment]) '>')?
		public Alternatives getAlternatives_3_1_1() { return cAlternatives_3_1_1; }
		
		//':' useObj=[NonPrimitiveType]
		public Group getGroup_3_1_1_0() { return cGroup_3_1_1_0; }
		
		//':'
		public Keyword getColonKeyword_3_1_1_0_0() { return cColonKeyword_3_1_1_0_0; }
		
		//useObj=[NonPrimitiveType]
		public Assignment getUseObjAssignment_3_1_1_0_1() { return cUseObjAssignment_3_1_1_0_1; }
		
		//[NonPrimitiveType]
		public CrossReference getUseObjNonPrimitiveTypeCrossReference_3_1_1_0_1_0() { return cUseObjNonPrimitiveTypeCrossReference_3_1_1_0_1_0; }
		
		//ID
		public RuleCall getUseObjNonPrimitiveTypeIDTerminalRuleCall_3_1_1_0_1_0_1() { return cUseObjNonPrimitiveTypeIDTerminalRuleCall_3_1_1_0_1_0_1; }
		
		//':' useType=PrimitiveType
		public Group getGroup_3_1_1_1() { return cGroup_3_1_1_1; }
		
		//':'
		public Keyword getColonKeyword_3_1_1_1_0() { return cColonKeyword_3_1_1_1_0; }
		
		//useType=PrimitiveType
		public Assignment getUseTypeAssignment_3_1_1_1_1() { return cUseTypeAssignment_3_1_1_1_1; }
		
		//PrimitiveType
		public RuleCall getUseTypePrimitiveTypeParserRuleCall_3_1_1_1_1_0() { return cUseTypePrimitiveTypeParserRuleCall_3_1_1_1_1_0; }
		
		//'<' ('grp.' useGroup=[Group] | 'agt.' useAgent=[Agent] | 'env.' useEnv=[Environment]) '>'
		public Group getGroup_3_1_1_2() { return cGroup_3_1_1_2; }
		
		//'<'
		public Keyword getLessThanSignKeyword_3_1_1_2_0() { return cLessThanSignKeyword_3_1_1_2_0; }
		
		//'grp.' useGroup=[Group] | 'agt.' useAgent=[Agent] | 'env.' useEnv=[Environment]
		public Alternatives getAlternatives_3_1_1_2_1() { return cAlternatives_3_1_1_2_1; }
		
		//'grp.' useGroup=[Group]
		public Group getGroup_3_1_1_2_1_0() { return cGroup_3_1_1_2_1_0; }
		
		//'grp.'
		public Keyword getGrpKeyword_3_1_1_2_1_0_0() { return cGrpKeyword_3_1_1_2_1_0_0; }
		
		//useGroup=[Group]
		public Assignment getUseGroupAssignment_3_1_1_2_1_0_1() { return cUseGroupAssignment_3_1_1_2_1_0_1; }
		
		//[Group]
		public CrossReference getUseGroupGroupCrossReference_3_1_1_2_1_0_1_0() { return cUseGroupGroupCrossReference_3_1_1_2_1_0_1_0; }
		
		//ID
		public RuleCall getUseGroupGroupIDTerminalRuleCall_3_1_1_2_1_0_1_0_1() { return cUseGroupGroupIDTerminalRuleCall_3_1_1_2_1_0_1_0_1; }
		
		//'agt.' useAgent=[Agent]
		public Group getGroup_3_1_1_2_1_1() { return cGroup_3_1_1_2_1_1; }
		
		//'agt.'
		public Keyword getAgtKeyword_3_1_1_2_1_1_0() { return cAgtKeyword_3_1_1_2_1_1_0; }
		
		//useAgent=[Agent]
		public Assignment getUseAgentAssignment_3_1_1_2_1_1_1() { return cUseAgentAssignment_3_1_1_2_1_1_1; }
		
		//[Agent]
		public CrossReference getUseAgentAgentCrossReference_3_1_1_2_1_1_1_0() { return cUseAgentAgentCrossReference_3_1_1_2_1_1_1_0; }
		
		//ID
		public RuleCall getUseAgentAgentIDTerminalRuleCall_3_1_1_2_1_1_1_0_1() { return cUseAgentAgentIDTerminalRuleCall_3_1_1_2_1_1_1_0_1; }
		
		//'env.' useEnv=[Environment]
		public Group getGroup_3_1_1_2_1_2() { return cGroup_3_1_1_2_1_2; }
		
		//'env.'
		public Keyword getEnvKeyword_3_1_1_2_1_2_0() { return cEnvKeyword_3_1_1_2_1_2_0; }
		
		//useEnv=[Environment]
		public Assignment getUseEnvAssignment_3_1_1_2_1_2_1() { return cUseEnvAssignment_3_1_1_2_1_2_1; }
		
		//[Environment]
		public CrossReference getUseEnvEnvironmentCrossReference_3_1_1_2_1_2_1_0() { return cUseEnvEnvironmentCrossReference_3_1_1_2_1_2_1_0; }
		
		//ID
		public RuleCall getUseEnvEnvironmentIDTerminalRuleCall_3_1_1_2_1_2_1_0_1() { return cUseEnvEnvironmentIDTerminalRuleCall_3_1_1_2_1_2_1_0_1; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_3_1_1_2_2() { return cGreaterThanSignKeyword_3_1_1_2_2; }
		
		//':'
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }
		
		//name=ID
		public Assignment getNameAssignment_5() { return cNameAssignment_5; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_5_0() { return cNameIDTerminalRuleCall_5_0; }
		
		//('=' expr=Expression)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'='
		public Keyword getEqualsSignKeyword_6_0() { return cEqualsSignKeyword_6_0; }
		
		//expr=Expression
		public Assignment getExprAssignment_6_1() { return cExprAssignment_6_1; }
		
		//Expression
		public RuleCall getExprExpressionParserRuleCall_6_1_0() { return cExprExpressionParserRuleCall_6_1_0; }
	}
	public class FormulaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.Formula");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSymAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cSymSymbolCrossReference_0_0 = (CrossReference)cSymAssignment_0.eContents().get(0);
		private final RuleCall cSymSymbolIDTerminalRuleCall_0_0_1 = (RuleCall)cSymSymbolCrossReference_0_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cObjFieldAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final CrossReference cObjFieldSymbolCrossReference_1_1_0 = (CrossReference)cObjFieldAssignment_1_1.eContents().get(0);
		private final RuleCall cObjFieldSymbolIDTerminalRuleCall_1_1_0_1 = (RuleCall)cObjFieldSymbolCrossReference_1_1_0.eContents().get(1);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cExprAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cExprExpressionParserRuleCall_3_0 = (RuleCall)cExprAssignment_3.eContents().get(0);
		
		///**
		// * Expressions
		// */ Formula:
		//	sym=[Symbol] ('.' objField=[Symbol])? '=' expr=Expression;
		@Override public ParserRule getRule() { return rule; }
		
		//sym=[Symbol] ('.' objField=[Symbol])? '=' expr=Expression
		public Group getGroup() { return cGroup; }
		
		//sym=[Symbol]
		public Assignment getSymAssignment_0() { return cSymAssignment_0; }
		
		//[Symbol]
		public CrossReference getSymSymbolCrossReference_0_0() { return cSymSymbolCrossReference_0_0; }
		
		//ID
		public RuleCall getSymSymbolIDTerminalRuleCall_0_0_1() { return cSymSymbolIDTerminalRuleCall_0_0_1; }
		
		//('.' objField=[Symbol])?
		public Group getGroup_1() { return cGroup_1; }
		
		//'.'
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }
		
		//objField=[Symbol]
		public Assignment getObjFieldAssignment_1_1() { return cObjFieldAssignment_1_1; }
		
		//[Symbol]
		public CrossReference getObjFieldSymbolCrossReference_1_1_0() { return cObjFieldSymbolCrossReference_1_1_0; }
		
		//ID
		public RuleCall getObjFieldSymbolIDTerminalRuleCall_1_1_0_1() { return cObjFieldSymbolIDTerminalRuleCall_1_1_0_1; }
		
		//'='
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }
		
		//expr=Expression
		public Assignment getExprAssignment_3() { return cExprAssignment_3; }
		
		//Expression
		public RuleCall getExprExpressionParserRuleCall_3_0() { return cExprExpressionParserRuleCall_3_0; }
	}
	public class SelfAssignedFormulaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.SelfAssignedFormula");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSelfKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cRefAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cRefSymbolCrossReference_1_0 = (CrossReference)cRefAssignment_1.eContents().get(0);
		private final RuleCall cRefSymbolIDTerminalRuleCall_1_0_1 = (RuleCall)cRefSymbolCrossReference_1_0.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cFullStopKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cObjFieldAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cObjFieldSymbolCrossReference_2_1_0 = (CrossReference)cObjFieldAssignment_2_1.eContents().get(0);
		private final RuleCall cObjFieldSymbolIDTerminalRuleCall_2_1_0_1 = (RuleCall)cObjFieldSymbolCrossReference_2_1_0.eContents().get(1);
		private final Keyword cEqualsSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cExprAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cExprExpressionParserRuleCall_4_0 = (RuleCall)cExprAssignment_4.eContents().get(0);
		
		//SelfAssignedFormula:
		//	'self.' ref=[Symbol] ('.' objField=[Symbol])? '=' expr=Expression;
		@Override public ParserRule getRule() { return rule; }
		
		//'self.' ref=[Symbol] ('.' objField=[Symbol])? '=' expr=Expression
		public Group getGroup() { return cGroup; }
		
		//'self.'
		public Keyword getSelfKeyword_0() { return cSelfKeyword_0; }
		
		//ref=[Symbol]
		public Assignment getRefAssignment_1() { return cRefAssignment_1; }
		
		//[Symbol]
		public CrossReference getRefSymbolCrossReference_1_0() { return cRefSymbolCrossReference_1_0; }
		
		//ID
		public RuleCall getRefSymbolIDTerminalRuleCall_1_0_1() { return cRefSymbolIDTerminalRuleCall_1_0_1; }
		
		//('.' objField=[Symbol])?
		public Group getGroup_2() { return cGroup_2; }
		
		//'.'
		public Keyword getFullStopKeyword_2_0() { return cFullStopKeyword_2_0; }
		
		//objField=[Symbol]
		public Assignment getObjFieldAssignment_2_1() { return cObjFieldAssignment_2_1; }
		
		//[Symbol]
		public CrossReference getObjFieldSymbolCrossReference_2_1_0() { return cObjFieldSymbolCrossReference_2_1_0; }
		
		//ID
		public RuleCall getObjFieldSymbolIDTerminalRuleCall_2_1_0_1() { return cObjFieldSymbolIDTerminalRuleCall_2_1_0_1; }
		
		//'='
		public Keyword getEqualsSignKeyword_3() { return cEqualsSignKeyword_3; }
		
		//expr=Expression
		public Assignment getExprAssignment_4() { return cExprAssignment_4; }
		
		//Expression
		public RuleCall getExprExpressionParserRuleCall_4_0() { return cExprExpressionParserRuleCall_4_0; }
	}
	public class ExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.Expression");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cBooleanExpressionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIfStatementParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cForLoopParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cForEachLoopParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//Expression:
		//	BooleanExpression | IfStatement | ForLoop | ForEachLoop;
		@Override public ParserRule getRule() { return rule; }
		
		//BooleanExpression | IfStatement | ForLoop | ForEachLoop
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//BooleanExpression
		public RuleCall getBooleanExpressionParserRuleCall_0() { return cBooleanExpressionParserRuleCall_0; }
		
		//IfStatement
		public RuleCall getIfStatementParserRuleCall_1() { return cIfStatementParserRuleCall_1; }
		
		//ForLoop
		public RuleCall getForLoopParserRuleCall_2() { return cForLoopParserRuleCall_2; }
		
		//ForEachLoop
		public RuleCall getForEachLoopParserRuleCall_3() { return cForEachLoopParserRuleCall_3; }
	}
	public class ForLoopElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.ForLoop");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cForKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cInitAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final Alternatives cInitAlternatives_2_0_0 = (Alternatives)cInitAssignment_2_0.eContents().get(0);
		private final RuleCall cInitExpressionParserRuleCall_2_0_0_0 = (RuleCall)cInitAlternatives_2_0_0.eContents().get(0);
		private final RuleCall cInitFormulaParserRuleCall_2_0_0_1 = (RuleCall)cInitAlternatives_2_0_0.eContents().get(1);
		private final RuleCall cInitFieldParserRuleCall_2_0_0_2 = (RuleCall)cInitAlternatives_2_0_0.eContents().get(2);
		private final RuleCall cInitSelfAssignedFormulaParserRuleCall_2_0_0_3 = (RuleCall)cInitAlternatives_2_0_0.eContents().get(3);
		private final Keyword cSemicolonKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cConditionAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cConditionExpressionParserRuleCall_2_2_0 = (RuleCall)cConditionAssignment_2_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		private final Assignment cShifterAssignment_2_4 = (Assignment)cGroup_2.eContents().get(4);
		private final Alternatives cShifterAlternatives_2_4_0 = (Alternatives)cShifterAssignment_2_4.eContents().get(0);
		private final RuleCall cShifterExpressionParserRuleCall_2_4_0_0 = (RuleCall)cShifterAlternatives_2_4_0.eContents().get(0);
		private final RuleCall cShifterFormulaParserRuleCall_2_4_0_1 = (RuleCall)cShifterAlternatives_2_4_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cDoKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Alternatives cAlternatives_5_0 = (Alternatives)cGroup_5.eContents().get(0);
		private final Assignment cBodyAssignment_5_0_0 = (Assignment)cAlternatives_5_0.eContents().get(0);
		private final RuleCall cBodyExpressionParserRuleCall_5_0_0_0 = (RuleCall)cBodyAssignment_5_0_0.eContents().get(0);
		private final Assignment cBodyAssignment_5_0_1 = (Assignment)cAlternatives_5_0.eContents().get(1);
		private final RuleCall cBodySelfAssignedFormulaParserRuleCall_5_0_1_0 = (RuleCall)cBodyAssignment_5_0_1.eContents().get(0);
		private final Assignment cBodyAssignment_5_0_2 = (Assignment)cAlternatives_5_0.eContents().get(2);
		private final RuleCall cBodyFormulaParserRuleCall_5_0_2_0 = (RuleCall)cBodyAssignment_5_0_2.eContents().get(0);
		private final Assignment cBodyAssignment_5_0_3 = (Assignment)cAlternatives_5_0.eContents().get(3);
		private final RuleCall cBodyFieldParserRuleCall_5_0_3_0 = (RuleCall)cBodyAssignment_5_0_3.eContents().get(0);
		private final Assignment cBodyAssignment_5_0_4 = (Assignment)cAlternatives_5_0.eContents().get(4);
		private final RuleCall cBodyRaw_Java_BlockParserRuleCall_5_0_4_0 = (RuleCall)cBodyAssignment_5_0_4.eContents().get(0);
		private final Keyword cSemicolonKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Keyword cEndforKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//ForLoop:
		//	'for' '(' (init=(Expression | Formula | Field | SelfAssignedFormula) ';' condition=Expression ';' shifter=(Expression
		//	| Formula))
		//	')' 'do' ((body+=Expression | body+=SelfAssignedFormula | body+=Formula | body+=Field | body+=Raw_Java_Block) ';')+
		//	'endfor';
		@Override public ParserRule getRule() { return rule; }
		
		//'for' '(' (init=(Expression | Formula | Field | SelfAssignedFormula) ';' condition=Expression ';' shifter=(Expression |
		//Formula)) ')' 'do' ((body+=Expression | body+=SelfAssignedFormula | body+=Formula | body+=Field | body+=Raw_Java_Block)
		//';')+ 'endfor'
		public Group getGroup() { return cGroup; }
		
		//'for'
		public Keyword getForKeyword_0() { return cForKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//init=(Expression | Formula | Field | SelfAssignedFormula) ';' condition=Expression ';' shifter=(Expression | Formula)
		public Group getGroup_2() { return cGroup_2; }
		
		//init=(Expression | Formula | Field | SelfAssignedFormula)
		public Assignment getInitAssignment_2_0() { return cInitAssignment_2_0; }
		
		//(Expression | Formula | Field | SelfAssignedFormula)
		public Alternatives getInitAlternatives_2_0_0() { return cInitAlternatives_2_0_0; }
		
		//Expression
		public RuleCall getInitExpressionParserRuleCall_2_0_0_0() { return cInitExpressionParserRuleCall_2_0_0_0; }
		
		//Formula
		public RuleCall getInitFormulaParserRuleCall_2_0_0_1() { return cInitFormulaParserRuleCall_2_0_0_1; }
		
		//Field
		public RuleCall getInitFieldParserRuleCall_2_0_0_2() { return cInitFieldParserRuleCall_2_0_0_2; }
		
		//SelfAssignedFormula
		public RuleCall getInitSelfAssignedFormulaParserRuleCall_2_0_0_3() { return cInitSelfAssignedFormulaParserRuleCall_2_0_0_3; }
		
		//';'
		public Keyword getSemicolonKeyword_2_1() { return cSemicolonKeyword_2_1; }
		
		//condition=Expression
		public Assignment getConditionAssignment_2_2() { return cConditionAssignment_2_2; }
		
		//Expression
		public RuleCall getConditionExpressionParserRuleCall_2_2_0() { return cConditionExpressionParserRuleCall_2_2_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2_3() { return cSemicolonKeyword_2_3; }
		
		//shifter=(Expression | Formula)
		public Assignment getShifterAssignment_2_4() { return cShifterAssignment_2_4; }
		
		//(Expression | Formula)
		public Alternatives getShifterAlternatives_2_4_0() { return cShifterAlternatives_2_4_0; }
		
		//Expression
		public RuleCall getShifterExpressionParserRuleCall_2_4_0_0() { return cShifterExpressionParserRuleCall_2_4_0_0; }
		
		//Formula
		public RuleCall getShifterFormulaParserRuleCall_2_4_0_1() { return cShifterFormulaParserRuleCall_2_4_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
		
		//'do'
		public Keyword getDoKeyword_4() { return cDoKeyword_4; }
		
		//((body+=Expression | body+=SelfAssignedFormula | body+=Formula | body+=Field | body+=Raw_Java_Block) ';')+
		public Group getGroup_5() { return cGroup_5; }
		
		//body+=Expression | body+=SelfAssignedFormula | body+=Formula | body+=Field | body+=Raw_Java_Block
		public Alternatives getAlternatives_5_0() { return cAlternatives_5_0; }
		
		//body+=Expression
		public Assignment getBodyAssignment_5_0_0() { return cBodyAssignment_5_0_0; }
		
		//Expression
		public RuleCall getBodyExpressionParserRuleCall_5_0_0_0() { return cBodyExpressionParserRuleCall_5_0_0_0; }
		
		//body+=SelfAssignedFormula
		public Assignment getBodyAssignment_5_0_1() { return cBodyAssignment_5_0_1; }
		
		//SelfAssignedFormula
		public RuleCall getBodySelfAssignedFormulaParserRuleCall_5_0_1_0() { return cBodySelfAssignedFormulaParserRuleCall_5_0_1_0; }
		
		//body+=Formula
		public Assignment getBodyAssignment_5_0_2() { return cBodyAssignment_5_0_2; }
		
		//Formula
		public RuleCall getBodyFormulaParserRuleCall_5_0_2_0() { return cBodyFormulaParserRuleCall_5_0_2_0; }
		
		//body+=Field
		public Assignment getBodyAssignment_5_0_3() { return cBodyAssignment_5_0_3; }
		
		//Field
		public RuleCall getBodyFieldParserRuleCall_5_0_3_0() { return cBodyFieldParserRuleCall_5_0_3_0; }
		
		//body+=Raw_Java_Block
		public Assignment getBodyAssignment_5_0_4() { return cBodyAssignment_5_0_4; }
		
		//Raw_Java_Block
		public RuleCall getBodyRaw_Java_BlockParserRuleCall_5_0_4_0() { return cBodyRaw_Java_BlockParserRuleCall_5_0_4_0; }
		
		//';'
		public Keyword getSemicolonKeyword_5_1() { return cSemicolonKeyword_5_1; }
		
		//'endfor'
		public Keyword getEndforKeyword_6() { return cEndforKeyword_6; }
	}
	public class ForEachLoopElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.ForEachLoop");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cForeachKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cTyAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cTyQualifiedNameParserRuleCall_2_0_0 = (RuleCall)cTyAssignment_2_0.eContents().get(0);
		private final Assignment cItemAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cItemForEachAccessParserRuleCall_2_1_0 = (RuleCall)cItemAssignment_2_1.eContents().get(0);
		private final Keyword cColonKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Assignment cListAssignment_2_3 = (Assignment)cGroup_2.eContents().get(3);
		private final RuleCall cListExpressionParserRuleCall_2_3_0 = (RuleCall)cListAssignment_2_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cDoKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Alternatives cAlternatives_5_0 = (Alternatives)cGroup_5.eContents().get(0);
		private final Assignment cBodyAssignment_5_0_0 = (Assignment)cAlternatives_5_0.eContents().get(0);
		private final RuleCall cBodyExpressionParserRuleCall_5_0_0_0 = (RuleCall)cBodyAssignment_5_0_0.eContents().get(0);
		private final Assignment cBodyAssignment_5_0_1 = (Assignment)cAlternatives_5_0.eContents().get(1);
		private final RuleCall cBodySelfAssignedFormulaParserRuleCall_5_0_1_0 = (RuleCall)cBodyAssignment_5_0_1.eContents().get(0);
		private final Assignment cBodyAssignment_5_0_2 = (Assignment)cAlternatives_5_0.eContents().get(2);
		private final RuleCall cBodyFormulaParserRuleCall_5_0_2_0 = (RuleCall)cBodyAssignment_5_0_2.eContents().get(0);
		private final Assignment cBodyAssignment_5_0_3 = (Assignment)cAlternatives_5_0.eContents().get(3);
		private final RuleCall cBodyFieldParserRuleCall_5_0_3_0 = (RuleCall)cBodyAssignment_5_0_3.eContents().get(0);
		private final Assignment cBodyAssignment_5_0_4 = (Assignment)cAlternatives_5_0.eContents().get(4);
		private final RuleCall cBodyRaw_Java_BlockParserRuleCall_5_0_4_0 = (RuleCall)cBodyAssignment_5_0_4.eContents().get(0);
		private final Keyword cSemicolonKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Keyword cEndforKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//ForEachLoop:
		//	'foreach' '(' (ty=QualifiedName item=ForEachAccess ':' list=Expression) ')' 'do' ((body+=Expression |
		//	body+=SelfAssignedFormula | body+=Formula | body+=Field | body+=Raw_Java_Block) ';')+
		//	'endfor';
		@Override public ParserRule getRule() { return rule; }
		
		//'foreach' '(' (ty=QualifiedName item=ForEachAccess ':' list=Expression) ')' 'do' ((body+=Expression |
		//body+=SelfAssignedFormula | body+=Formula | body+=Field | body+=Raw_Java_Block) ';')+ 'endfor'
		public Group getGroup() { return cGroup; }
		
		//'foreach'
		public Keyword getForeachKeyword_0() { return cForeachKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//ty=QualifiedName item=ForEachAccess ':' list=Expression
		public Group getGroup_2() { return cGroup_2; }
		
		//ty=QualifiedName
		public Assignment getTyAssignment_2_0() { return cTyAssignment_2_0; }
		
		//QualifiedName
		public RuleCall getTyQualifiedNameParserRuleCall_2_0_0() { return cTyQualifiedNameParserRuleCall_2_0_0; }
		
		//item=ForEachAccess
		public Assignment getItemAssignment_2_1() { return cItemAssignment_2_1; }
		
		//ForEachAccess
		public RuleCall getItemForEachAccessParserRuleCall_2_1_0() { return cItemForEachAccessParserRuleCall_2_1_0; }
		
		//':'
		public Keyword getColonKeyword_2_2() { return cColonKeyword_2_2; }
		
		//list=Expression
		public Assignment getListAssignment_2_3() { return cListAssignment_2_3; }
		
		//Expression
		public RuleCall getListExpressionParserRuleCall_2_3_0() { return cListExpressionParserRuleCall_2_3_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
		
		//'do'
		public Keyword getDoKeyword_4() { return cDoKeyword_4; }
		
		//((body+=Expression | body+=SelfAssignedFormula | body+=Formula | body+=Field | body+=Raw_Java_Block) ';')+
		public Group getGroup_5() { return cGroup_5; }
		
		//body+=Expression | body+=SelfAssignedFormula | body+=Formula | body+=Field | body+=Raw_Java_Block
		public Alternatives getAlternatives_5_0() { return cAlternatives_5_0; }
		
		//body+=Expression
		public Assignment getBodyAssignment_5_0_0() { return cBodyAssignment_5_0_0; }
		
		//Expression
		public RuleCall getBodyExpressionParserRuleCall_5_0_0_0() { return cBodyExpressionParserRuleCall_5_0_0_0; }
		
		//body+=SelfAssignedFormula
		public Assignment getBodyAssignment_5_0_1() { return cBodyAssignment_5_0_1; }
		
		//SelfAssignedFormula
		public RuleCall getBodySelfAssignedFormulaParserRuleCall_5_0_1_0() { return cBodySelfAssignedFormulaParserRuleCall_5_0_1_0; }
		
		//body+=Formula
		public Assignment getBodyAssignment_5_0_2() { return cBodyAssignment_5_0_2; }
		
		//Formula
		public RuleCall getBodyFormulaParserRuleCall_5_0_2_0() { return cBodyFormulaParserRuleCall_5_0_2_0; }
		
		//body+=Field
		public Assignment getBodyAssignment_5_0_3() { return cBodyAssignment_5_0_3; }
		
		//Field
		public RuleCall getBodyFieldParserRuleCall_5_0_3_0() { return cBodyFieldParserRuleCall_5_0_3_0; }
		
		//body+=Raw_Java_Block
		public Assignment getBodyAssignment_5_0_4() { return cBodyAssignment_5_0_4; }
		
		//Raw_Java_Block
		public RuleCall getBodyRaw_Java_BlockParserRuleCall_5_0_4_0() { return cBodyRaw_Java_BlockParserRuleCall_5_0_4_0; }
		
		//';'
		public Keyword getSemicolonKeyword_5_1() { return cSemicolonKeyword_5_1; }
		
		//'endfor'
		public Keyword getEndforKeyword_6() { return cEndforKeyword_6; }
	}
	public class ForEachAccessElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.ForEachAccess");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		////TODO: Need scoping for this
		//ForEachAccess Symbol:
		//	name=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0() { return cNameIDTerminalRuleCall_0; }
	}
	public class IfStatementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.IfStatement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIfKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cConditionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cConditionExpressionParserRuleCall_2_0 = (RuleCall)cConditionAssignment_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cThenKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Alternatives cAlternatives_5_0 = (Alternatives)cGroup_5.eContents().get(0);
		private final Assignment cThenAssignment_5_0_0 = (Assignment)cAlternatives_5_0.eContents().get(0);
		private final RuleCall cThenExpressionParserRuleCall_5_0_0_0 = (RuleCall)cThenAssignment_5_0_0.eContents().get(0);
		private final Assignment cThenAssignment_5_0_1 = (Assignment)cAlternatives_5_0.eContents().get(1);
		private final RuleCall cThenSelfAssignedFormulaParserRuleCall_5_0_1_0 = (RuleCall)cThenAssignment_5_0_1.eContents().get(0);
		private final Assignment cThenAssignment_5_0_2 = (Assignment)cAlternatives_5_0.eContents().get(2);
		private final RuleCall cThenFormulaParserRuleCall_5_0_2_0 = (RuleCall)cThenAssignment_5_0_2.eContents().get(0);
		private final Assignment cThenAssignment_5_0_3 = (Assignment)cAlternatives_5_0.eContents().get(3);
		private final RuleCall cThenFieldParserRuleCall_5_0_3_0 = (RuleCall)cThenAssignment_5_0_3.eContents().get(0);
		private final Keyword cSemicolonKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cElseifKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cElseifexprAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cElseifexprElseIfExprParserRuleCall_6_1_0 = (RuleCall)cElseifexprAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cElseKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Group cGroup_7_1 = (Group)cGroup_7.eContents().get(1);
		private final Alternatives cAlternatives_7_1_0 = (Alternatives)cGroup_7_1.eContents().get(0);
		private final Assignment cElseexpAssignment_7_1_0_0 = (Assignment)cAlternatives_7_1_0.eContents().get(0);
		private final RuleCall cElseexpExpressionParserRuleCall_7_1_0_0_0 = (RuleCall)cElseexpAssignment_7_1_0_0.eContents().get(0);
		private final Assignment cElseexpAssignment_7_1_0_1 = (Assignment)cAlternatives_7_1_0.eContents().get(1);
		private final RuleCall cElseexpFormulaParserRuleCall_7_1_0_1_0 = (RuleCall)cElseexpAssignment_7_1_0_1.eContents().get(0);
		private final Assignment cElseexpAssignment_7_1_0_2 = (Assignment)cAlternatives_7_1_0.eContents().get(2);
		private final RuleCall cElseexpSelfAssignedFormulaParserRuleCall_7_1_0_2_0 = (RuleCall)cElseexpAssignment_7_1_0_2.eContents().get(0);
		private final Assignment cElseexpAssignment_7_1_0_3 = (Assignment)cAlternatives_7_1_0.eContents().get(3);
		private final RuleCall cElseexpFieldParserRuleCall_7_1_0_3_0 = (RuleCall)cElseexpAssignment_7_1_0_3.eContents().get(0);
		private final Keyword cSemicolonKeyword_7_1_1 = (Keyword)cGroup_7_1.eContents().get(1);
		private final Keyword cEndifKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		////TODO: compounded elseifs
		//IfStatement:
		//	'if' '(' condition=Expression ')' 'then' ((then+=Expression | then+=SelfAssignedFormula | then+=Formula | then+=Field)
		//	';')+ (=> 'elseif' elseifexpr+=ElseIfExpr)* (=> 'else' ((elseexp+=Expression | elseexp+=Formula |
		//	elseexp+=SelfAssignedFormula | elseexp+=Field) ';')+)?
		//	'endif';
		@Override public ParserRule getRule() { return rule; }
		
		//'if' '(' condition=Expression ')' 'then' ((then+=Expression | then+=SelfAssignedFormula | then+=Formula | then+=Field)
		//';')+ (=> 'elseif' elseifexpr+=ElseIfExpr)* (=> 'else' ((elseexp+=Expression | elseexp+=Formula |
		//elseexp+=SelfAssignedFormula | elseexp+=Field) ';')+)? 'endif'
		public Group getGroup() { return cGroup; }
		
		//'if'
		public Keyword getIfKeyword_0() { return cIfKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//condition=Expression
		public Assignment getConditionAssignment_2() { return cConditionAssignment_2; }
		
		//Expression
		public RuleCall getConditionExpressionParserRuleCall_2_0() { return cConditionExpressionParserRuleCall_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
		
		//'then'
		public Keyword getThenKeyword_4() { return cThenKeyword_4; }
		
		//((then+=Expression | then+=SelfAssignedFormula | then+=Formula | then+=Field) ';')+
		public Group getGroup_5() { return cGroup_5; }
		
		//then+=Expression | then+=SelfAssignedFormula | then+=Formula | then+=Field
		public Alternatives getAlternatives_5_0() { return cAlternatives_5_0; }
		
		//then+=Expression
		public Assignment getThenAssignment_5_0_0() { return cThenAssignment_5_0_0; }
		
		//Expression
		public RuleCall getThenExpressionParserRuleCall_5_0_0_0() { return cThenExpressionParserRuleCall_5_0_0_0; }
		
		//then+=SelfAssignedFormula
		public Assignment getThenAssignment_5_0_1() { return cThenAssignment_5_0_1; }
		
		//SelfAssignedFormula
		public RuleCall getThenSelfAssignedFormulaParserRuleCall_5_0_1_0() { return cThenSelfAssignedFormulaParserRuleCall_5_0_1_0; }
		
		//then+=Formula
		public Assignment getThenAssignment_5_0_2() { return cThenAssignment_5_0_2; }
		
		//Formula
		public RuleCall getThenFormulaParserRuleCall_5_0_2_0() { return cThenFormulaParserRuleCall_5_0_2_0; }
		
		//then+=Field
		public Assignment getThenAssignment_5_0_3() { return cThenAssignment_5_0_3; }
		
		//Field
		public RuleCall getThenFieldParserRuleCall_5_0_3_0() { return cThenFieldParserRuleCall_5_0_3_0; }
		
		//';'
		public Keyword getSemicolonKeyword_5_1() { return cSemicolonKeyword_5_1; }
		
		//(=> 'elseif' elseifexpr+=ElseIfExpr)*
		public Group getGroup_6() { return cGroup_6; }
		
		//=> 'elseif'
		public Keyword getElseifKeyword_6_0() { return cElseifKeyword_6_0; }
		
		//elseifexpr+=ElseIfExpr
		public Assignment getElseifexprAssignment_6_1() { return cElseifexprAssignment_6_1; }
		
		//ElseIfExpr
		public RuleCall getElseifexprElseIfExprParserRuleCall_6_1_0() { return cElseifexprElseIfExprParserRuleCall_6_1_0; }
		
		//(=> 'else' ((elseexp+=Expression | elseexp+=Formula | elseexp+=SelfAssignedFormula | elseexp+=Field) ';')+)?
		public Group getGroup_7() { return cGroup_7; }
		
		//=> 'else'
		public Keyword getElseKeyword_7_0() { return cElseKeyword_7_0; }
		
		//((elseexp+=Expression | elseexp+=Formula | elseexp+=SelfAssignedFormula | elseexp+=Field) ';')+
		public Group getGroup_7_1() { return cGroup_7_1; }
		
		//elseexp+=Expression | elseexp+=Formula | elseexp+=SelfAssignedFormula | elseexp+=Field
		public Alternatives getAlternatives_7_1_0() { return cAlternatives_7_1_0; }
		
		//elseexp+=Expression
		public Assignment getElseexpAssignment_7_1_0_0() { return cElseexpAssignment_7_1_0_0; }
		
		//Expression
		public RuleCall getElseexpExpressionParserRuleCall_7_1_0_0_0() { return cElseexpExpressionParserRuleCall_7_1_0_0_0; }
		
		//elseexp+=Formula
		public Assignment getElseexpAssignment_7_1_0_1() { return cElseexpAssignment_7_1_0_1; }
		
		//Formula
		public RuleCall getElseexpFormulaParserRuleCall_7_1_0_1_0() { return cElseexpFormulaParserRuleCall_7_1_0_1_0; }
		
		//elseexp+=SelfAssignedFormula
		public Assignment getElseexpAssignment_7_1_0_2() { return cElseexpAssignment_7_1_0_2; }
		
		//SelfAssignedFormula
		public RuleCall getElseexpSelfAssignedFormulaParserRuleCall_7_1_0_2_0() { return cElseexpSelfAssignedFormulaParserRuleCall_7_1_0_2_0; }
		
		//elseexp+=Field
		public Assignment getElseexpAssignment_7_1_0_3() { return cElseexpAssignment_7_1_0_3; }
		
		//Field
		public RuleCall getElseexpFieldParserRuleCall_7_1_0_3_0() { return cElseexpFieldParserRuleCall_7_1_0_3_0; }
		
		//';'
		public Keyword getSemicolonKeyword_7_1_1() { return cSemicolonKeyword_7_1_1; }
		
		//'endif'
		public Keyword getEndifKeyword_8() { return cEndifKeyword_8; }
	}
	public class ElseIfExprElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.ElseIfExpr");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cElseIfExprAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cElseifCondAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cElseifCondExpressionParserRuleCall_2_0 = (RuleCall)cElseifCondAssignment_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cThenKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Assignment cElseifthenAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final Alternatives cElseifthenAlternatives_5_0_0 = (Alternatives)cElseifthenAssignment_5_0.eContents().get(0);
		private final RuleCall cElseifthenExpressionParserRuleCall_5_0_0_0 = (RuleCall)cElseifthenAlternatives_5_0_0.eContents().get(0);
		private final RuleCall cElseifthenFormulaParserRuleCall_5_0_0_1 = (RuleCall)cElseifthenAlternatives_5_0_0.eContents().get(1);
		private final RuleCall cElseifthenSelfAssignedFormulaParserRuleCall_5_0_0_2 = (RuleCall)cElseifthenAlternatives_5_0_0.eContents().get(2);
		private final RuleCall cElseifthenFieldParserRuleCall_5_0_0_3 = (RuleCall)cElseifthenAlternatives_5_0_0.eContents().get(3);
		private final Keyword cSemicolonKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		
		//ElseIfExpr:
		//	{ElseIfExpr}
		//	'(' elseifCond=Expression ')' 'then' (elseifthen+=(Expression | Formula | SelfAssignedFormula | Field) ';')*;
		@Override public ParserRule getRule() { return rule; }
		
		//{ElseIfExpr} '(' elseifCond=Expression ')' 'then' (elseifthen+=(Expression | Formula | SelfAssignedFormula | Field)
		//';')*
		public Group getGroup() { return cGroup; }
		
		//{ElseIfExpr}
		public Action getElseIfExprAction_0() { return cElseIfExprAction_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//elseifCond=Expression
		public Assignment getElseifCondAssignment_2() { return cElseifCondAssignment_2; }
		
		//Expression
		public RuleCall getElseifCondExpressionParserRuleCall_2_0() { return cElseifCondExpressionParserRuleCall_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
		
		//'then'
		public Keyword getThenKeyword_4() { return cThenKeyword_4; }
		
		//(elseifthen+=(Expression | Formula | SelfAssignedFormula | Field) ';')*
		public Group getGroup_5() { return cGroup_5; }
		
		//elseifthen+=(Expression | Formula | SelfAssignedFormula | Field)
		public Assignment getElseifthenAssignment_5_0() { return cElseifthenAssignment_5_0; }
		
		//(Expression | Formula | SelfAssignedFormula | Field)
		public Alternatives getElseifthenAlternatives_5_0_0() { return cElseifthenAlternatives_5_0_0; }
		
		//Expression
		public RuleCall getElseifthenExpressionParserRuleCall_5_0_0_0() { return cElseifthenExpressionParserRuleCall_5_0_0_0; }
		
		//Formula
		public RuleCall getElseifthenFormulaParserRuleCall_5_0_0_1() { return cElseifthenFormulaParserRuleCall_5_0_0_1; }
		
		//SelfAssignedFormula
		public RuleCall getElseifthenSelfAssignedFormulaParserRuleCall_5_0_0_2() { return cElseifthenSelfAssignedFormulaParserRuleCall_5_0_0_2; }
		
		//Field
		public RuleCall getElseifthenFieldParserRuleCall_5_0_0_3() { return cElseifthenFieldParserRuleCall_5_0_0_3; }
		
		//';'
		public Keyword getSemicolonKeyword_5_1() { return cSemicolonKeyword_5_1; }
	}
	public class BooleanExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.BooleanExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cEqualsParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cGroup_1.eContents().get(0);
		private final Action cBooleanExpressionLeftAction_1_0_0 = (Action)cGroup_1_0.eContents().get(0);
		private final Assignment cOpAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final Alternatives cOpAlternatives_1_0_1_0 = (Alternatives)cOpAssignment_1_0_1.eContents().get(0);
		private final Keyword cOpVerticalLineVerticalLineKeyword_1_0_1_0_0 = (Keyword)cOpAlternatives_1_0_1_0.eContents().get(0);
		private final Keyword cOpAmpersandAmpersandKeyword_1_0_1_0_1 = (Keyword)cOpAlternatives_1_0_1_0.eContents().get(1);
		private final Assignment cRightAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cRightEqualsParserRuleCall_1_1_0 = (RuleCall)cRightAssignment_1_1.eContents().get(0);
		
		//BooleanExpression Expression:
		//	Equals (({BooleanExpression.left=current} op=("||" | "&&")) right=Equals)*;
		@Override public ParserRule getRule() { return rule; }
		
		//Equals (({BooleanExpression.left=current} op=("||" | "&&")) right=Equals)*
		public Group getGroup() { return cGroup; }
		
		//Equals
		public RuleCall getEqualsParserRuleCall_0() { return cEqualsParserRuleCall_0; }
		
		//(({BooleanExpression.left=current} op=("||" | "&&")) right=Equals)*
		public Group getGroup_1() { return cGroup_1; }
		
		//{BooleanExpression.left=current} op=("||" | "&&")
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//{BooleanExpression.left=current}
		public Action getBooleanExpressionLeftAction_1_0_0() { return cBooleanExpressionLeftAction_1_0_0; }
		
		//op=("||" | "&&")
		public Assignment getOpAssignment_1_0_1() { return cOpAssignment_1_0_1; }
		
		//("||" | "&&")
		public Alternatives getOpAlternatives_1_0_1_0() { return cOpAlternatives_1_0_1_0; }
		
		//"||"
		public Keyword getOpVerticalLineVerticalLineKeyword_1_0_1_0_0() { return cOpVerticalLineVerticalLineKeyword_1_0_1_0_0; }
		
		//"&&"
		public Keyword getOpAmpersandAmpersandKeyword_1_0_1_0_1() { return cOpAmpersandAmpersandKeyword_1_0_1_0_1; }
		
		//right=Equals
		public Assignment getRightAssignment_1_1() { return cRightAssignment_1_1; }
		
		//Equals
		public RuleCall getRightEqualsParserRuleCall_1_1_0() { return cRightEqualsParserRuleCall_1_1_0; }
	}
	public class EqualsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.Equals");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cComparisonParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cGroup_1.eContents().get(0);
		private final Action cEqualsLeftAction_1_0_0 = (Action)cGroup_1_0.eContents().get(0);
		private final Assignment cOpAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final Alternatives cOpAlternatives_1_0_1_0 = (Alternatives)cOpAssignment_1_0_1.eContents().get(0);
		private final Keyword cOpEqualsSignEqualsSignKeyword_1_0_1_0_0 = (Keyword)cOpAlternatives_1_0_1_0.eContents().get(0);
		private final Keyword cOpExclamationMarkEqualsSignKeyword_1_0_1_0_1 = (Keyword)cOpAlternatives_1_0_1_0.eContents().get(1);
		private final Assignment cRightAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cRightComparisonParserRuleCall_1_1_0 = (RuleCall)cRightAssignment_1_1.eContents().get(0);
		
		//Equals Expression:
		//	Comparison (({Equals.left=current} op=("==" | "!=")) right=Comparison)*;
		@Override public ParserRule getRule() { return rule; }
		
		//Comparison (({Equals.left=current} op=("==" | "!=")) right=Comparison)*
		public Group getGroup() { return cGroup; }
		
		//Comparison
		public RuleCall getComparisonParserRuleCall_0() { return cComparisonParserRuleCall_0; }
		
		//(({Equals.left=current} op=("==" | "!=")) right=Comparison)*
		public Group getGroup_1() { return cGroup_1; }
		
		//{Equals.left=current} op=("==" | "!=")
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//{Equals.left=current}
		public Action getEqualsLeftAction_1_0_0() { return cEqualsLeftAction_1_0_0; }
		
		//op=("==" | "!=")
		public Assignment getOpAssignment_1_0_1() { return cOpAssignment_1_0_1; }
		
		//("==" | "!=")
		public Alternatives getOpAlternatives_1_0_1_0() { return cOpAlternatives_1_0_1_0; }
		
		//"=="
		public Keyword getOpEqualsSignEqualsSignKeyword_1_0_1_0_0() { return cOpEqualsSignEqualsSignKeyword_1_0_1_0_0; }
		
		//"!="
		public Keyword getOpExclamationMarkEqualsSignKeyword_1_0_1_0_1() { return cOpExclamationMarkEqualsSignKeyword_1_0_1_0_1; }
		
		//right=Comparison
		public Assignment getRightAssignment_1_1() { return cRightAssignment_1_1; }
		
		//Comparison
		public RuleCall getRightComparisonParserRuleCall_1_1_0() { return cRightComparisonParserRuleCall_1_1_0; }
	}
	public class ComparisonElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.Comparison");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cSubtractionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cGroup_1.eContents().get(0);
		private final Action cComparisonLeftAction_1_0_0 = (Action)cGroup_1_0.eContents().get(0);
		private final Assignment cOpAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final Alternatives cOpAlternatives_1_0_1_0 = (Alternatives)cOpAssignment_1_0_1.eContents().get(0);
		private final Keyword cOpLessThanSignKeyword_1_0_1_0_0 = (Keyword)cOpAlternatives_1_0_1_0.eContents().get(0);
		private final Keyword cOpGreaterThanSignKeyword_1_0_1_0_1 = (Keyword)cOpAlternatives_1_0_1_0.eContents().get(1);
		private final Keyword cOpLessThanSignEqualsSignKeyword_1_0_1_0_2 = (Keyword)cOpAlternatives_1_0_1_0.eContents().get(2);
		private final Keyword cOpGreaterThanSignEqualsSignKeyword_1_0_1_0_3 = (Keyword)cOpAlternatives_1_0_1_0.eContents().get(3);
		private final Assignment cRightAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cRightSubtractionParserRuleCall_1_1_0 = (RuleCall)cRightAssignment_1_1.eContents().get(0);
		
		//Comparison Expression:
		//	Subtraction (({Comparison.left=current} op=('<' | '>' | "<=" | ">=")) right=Subtraction)*;
		@Override public ParserRule getRule() { return rule; }
		
		//Subtraction (({Comparison.left=current} op=('<' | '>' | "<=" | ">=")) right=Subtraction)*
		public Group getGroup() { return cGroup; }
		
		//Subtraction
		public RuleCall getSubtractionParserRuleCall_0() { return cSubtractionParserRuleCall_0; }
		
		//(({Comparison.left=current} op=('<' | '>' | "<=" | ">=")) right=Subtraction)*
		public Group getGroup_1() { return cGroup_1; }
		
		//{Comparison.left=current} op=('<' | '>' | "<=" | ">=")
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//{Comparison.left=current}
		public Action getComparisonLeftAction_1_0_0() { return cComparisonLeftAction_1_0_0; }
		
		//op=('<' | '>' | "<=" | ">=")
		public Assignment getOpAssignment_1_0_1() { return cOpAssignment_1_0_1; }
		
		//('<' | '>' | "<=" | ">=")
		public Alternatives getOpAlternatives_1_0_1_0() { return cOpAlternatives_1_0_1_0; }
		
		//'<'
		public Keyword getOpLessThanSignKeyword_1_0_1_0_0() { return cOpLessThanSignKeyword_1_0_1_0_0; }
		
		//'>'
		public Keyword getOpGreaterThanSignKeyword_1_0_1_0_1() { return cOpGreaterThanSignKeyword_1_0_1_0_1; }
		
		//"<="
		public Keyword getOpLessThanSignEqualsSignKeyword_1_0_1_0_2() { return cOpLessThanSignEqualsSignKeyword_1_0_1_0_2; }
		
		//">="
		public Keyword getOpGreaterThanSignEqualsSignKeyword_1_0_1_0_3() { return cOpGreaterThanSignEqualsSignKeyword_1_0_1_0_3; }
		
		//right=Subtraction
		public Assignment getRightAssignment_1_1() { return cRightAssignment_1_1; }
		
		//Subtraction
		public RuleCall getRightSubtractionParserRuleCall_1_1_0() { return cRightSubtractionParserRuleCall_1_1_0; }
	}
	public class SubtractionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.Subtraction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cAdditionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cSubtractionLeftAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOpAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final Keyword cOpHyphenMinusKeyword_1_1_0 = (Keyword)cOpAssignment_1_1.eContents().get(0);
		private final Assignment cRightAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cRightAdditionParserRuleCall_1_2_0 = (RuleCall)cRightAssignment_1_2.eContents().get(0);
		
		//Subtraction Expression:
		//	Addition ({Subtraction.left=current} op='-' right=Addition)*;
		@Override public ParserRule getRule() { return rule; }
		
		//Addition ({Subtraction.left=current} op='-' right=Addition)*
		public Group getGroup() { return cGroup; }
		
		//Addition
		public RuleCall getAdditionParserRuleCall_0() { return cAdditionParserRuleCall_0; }
		
		//({Subtraction.left=current} op='-' right=Addition)*
		public Group getGroup_1() { return cGroup_1; }
		
		//{Subtraction.left=current}
		public Action getSubtractionLeftAction_1_0() { return cSubtractionLeftAction_1_0; }
		
		//op='-'
		public Assignment getOpAssignment_1_1() { return cOpAssignment_1_1; }
		
		//'-'
		public Keyword getOpHyphenMinusKeyword_1_1_0() { return cOpHyphenMinusKeyword_1_1_0; }
		
		//right=Addition
		public Assignment getRightAssignment_1_2() { return cRightAssignment_1_2; }
		
		//Addition
		public RuleCall getRightAdditionParserRuleCall_1_2_0() { return cRightAdditionParserRuleCall_1_2_0; }
	}
	public class AdditionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.Addition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cMultiplicationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cAdditionLeftAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOpAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final Keyword cOpPlusSignKeyword_1_1_0 = (Keyword)cOpAssignment_1_1.eContents().get(0);
		private final Assignment cRightAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cRightMultiplicationParserRuleCall_1_2_0 = (RuleCall)cRightAssignment_1_2.eContents().get(0);
		
		//Addition Expression:
		//	Multiplication ({Addition.left=current} op='+' right=Multiplication)*;
		@Override public ParserRule getRule() { return rule; }
		
		//Multiplication ({Addition.left=current} op='+' right=Multiplication)*
		public Group getGroup() { return cGroup; }
		
		//Multiplication
		public RuleCall getMultiplicationParserRuleCall_0() { return cMultiplicationParserRuleCall_0; }
		
		//({Addition.left=current} op='+' right=Multiplication)*
		public Group getGroup_1() { return cGroup_1; }
		
		//{Addition.left=current}
		public Action getAdditionLeftAction_1_0() { return cAdditionLeftAction_1_0; }
		
		//op='+'
		public Assignment getOpAssignment_1_1() { return cOpAssignment_1_1; }
		
		//'+'
		public Keyword getOpPlusSignKeyword_1_1_0() { return cOpPlusSignKeyword_1_1_0; }
		
		//right=Multiplication
		public Assignment getRightAssignment_1_2() { return cRightAssignment_1_2; }
		
		//Multiplication
		public RuleCall getRightMultiplicationParserRuleCall_1_2_0() { return cRightMultiplicationParserRuleCall_1_2_0; }
	}
	public class MultiplicationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.Multiplication");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cPrefixedParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_1_0 = (Alternatives)cGroup_1.eContents().get(0);
		private final Group cGroup_1_0_0 = (Group)cAlternatives_1_0.eContents().get(0);
		private final Action cMultiplicationLeftAction_1_0_0_0 = (Action)cGroup_1_0_0.eContents().get(0);
		private final Assignment cOpAssignment_1_0_0_1 = (Assignment)cGroup_1_0_0.eContents().get(1);
		private final Keyword cOpAsteriskKeyword_1_0_0_1_0 = (Keyword)cOpAssignment_1_0_0_1.eContents().get(0);
		private final Group cGroup_1_0_1 = (Group)cAlternatives_1_0.eContents().get(1);
		private final Action cDivLeftAction_1_0_1_0 = (Action)cGroup_1_0_1.eContents().get(0);
		private final Assignment cOpAssignment_1_0_1_1 = (Assignment)cGroup_1_0_1.eContents().get(1);
		private final Keyword cOpSolidusKeyword_1_0_1_1_0 = (Keyword)cOpAssignment_1_0_1_1.eContents().get(0);
		private final Assignment cRightAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cRightPrefixedParserRuleCall_1_1_0 = (RuleCall)cRightAssignment_1_1.eContents().get(0);
		
		//Multiplication Expression:
		//	Prefixed (({Multiplication.left=current} op='*' | {Div.left=current} op='/') right=Prefixed)*;
		@Override public ParserRule getRule() { return rule; }
		
		//Prefixed (({Multiplication.left=current} op='*' | {Div.left=current} op='/') right=Prefixed)*
		public Group getGroup() { return cGroup; }
		
		//Prefixed
		public RuleCall getPrefixedParserRuleCall_0() { return cPrefixedParserRuleCall_0; }
		
		//(({Multiplication.left=current} op='*' | {Div.left=current} op='/') right=Prefixed)*
		public Group getGroup_1() { return cGroup_1; }
		
		//{Multiplication.left=current} op='*' | {Div.left=current} op='/'
		public Alternatives getAlternatives_1_0() { return cAlternatives_1_0; }
		
		//{Multiplication.left=current} op='*'
		public Group getGroup_1_0_0() { return cGroup_1_0_0; }
		
		//{Multiplication.left=current}
		public Action getMultiplicationLeftAction_1_0_0_0() { return cMultiplicationLeftAction_1_0_0_0; }
		
		//op='*'
		public Assignment getOpAssignment_1_0_0_1() { return cOpAssignment_1_0_0_1; }
		
		//'*'
		public Keyword getOpAsteriskKeyword_1_0_0_1_0() { return cOpAsteriskKeyword_1_0_0_1_0; }
		
		//{Div.left=current} op='/'
		public Group getGroup_1_0_1() { return cGroup_1_0_1; }
		
		//{Div.left=current}
		public Action getDivLeftAction_1_0_1_0() { return cDivLeftAction_1_0_1_0; }
		
		//op='/'
		public Assignment getOpAssignment_1_0_1_1() { return cOpAssignment_1_0_1_1; }
		
		//'/'
		public Keyword getOpSolidusKeyword_1_0_1_1_0() { return cOpSolidusKeyword_1_0_1_1_0; }
		
		//right=Prefixed
		public Assignment getRightAssignment_1_1() { return cRightAssignment_1_1; }
		
		//Prefixed
		public RuleCall getRightPrefixedParserRuleCall_1_1_0() { return cRightPrefixedParserRuleCall_1_1_0; }
	}
	public class PrefixedElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.Prefixed");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Action cBooleanNegationAction_0_0 = (Action)cGroup_0.eContents().get(0);
		private final Keyword cExclamationMarkKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cExpressionAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cExpressionPrefixedParserRuleCall_0_2_0 = (RuleCall)cExpressionAssignment_0_2.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Action cArithmeticSignedAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Keyword cHyphenMinusKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cExpressionAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cExpressionPrefixedParserRuleCall_1_2_0 = (RuleCall)cExpressionAssignment_1_2.eContents().get(0);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final RuleCall cExpressionParserRuleCall_2_1 = (RuleCall)cGroup_2.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final RuleCall cAtomicParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//Prefixed Expression:
		//	{BooleanNegation} => '!' expression=Prefixed | {ArithmeticSigned} => '-' expression=Prefixed |
		//	/* right associativity */
		//	'(' Expression ')' | Atomic;
		@Override public ParserRule getRule() { return rule; }
		
		//{BooleanNegation} => '!' expression=Prefixed | {ArithmeticSigned} => '-' expression=Prefixed | /* right associativity */
		//'(' Expression ')' | Atomic
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//{BooleanNegation} => '!' expression=Prefixed
		public Group getGroup_0() { return cGroup_0; }
		
		//{BooleanNegation}
		public Action getBooleanNegationAction_0_0() { return cBooleanNegationAction_0_0; }
		
		//=> '!'
		public Keyword getExclamationMarkKeyword_0_1() { return cExclamationMarkKeyword_0_1; }
		
		//expression=Prefixed
		public Assignment getExpressionAssignment_0_2() { return cExpressionAssignment_0_2; }
		
		//Prefixed
		public RuleCall getExpressionPrefixedParserRuleCall_0_2_0() { return cExpressionPrefixedParserRuleCall_0_2_0; }
		
		//{ArithmeticSigned} => '-' expression=Prefixed
		public Group getGroup_1() { return cGroup_1; }
		
		//{ArithmeticSigned}
		public Action getArithmeticSignedAction_1_0() { return cArithmeticSignedAction_1_0; }
		
		//=> '-'
		public Keyword getHyphenMinusKeyword_1_1() { return cHyphenMinusKeyword_1_1; }
		
		//expression=Prefixed
		public Assignment getExpressionAssignment_1_2() { return cExpressionAssignment_1_2; }
		
		//Prefixed
		public RuleCall getExpressionPrefixedParserRuleCall_1_2_0() { return cExpressionPrefixedParserRuleCall_1_2_0; }
		
		///* right associativity */ '(' Expression ')'
		public Group getGroup_2() { return cGroup_2; }
		
		///* right associativity */ '('
		public Keyword getLeftParenthesisKeyword_2_0() { return cLeftParenthesisKeyword_2_0; }
		
		//Expression
		public RuleCall getExpressionParserRuleCall_2_1() { return cExpressionParserRuleCall_2_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2_2() { return cRightParenthesisKeyword_2_2; }
		
		//Atomic
		public RuleCall getAtomicParserRuleCall_3() { return cAtomicParserRuleCall_3; }
	}
	public class AtomicElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.Atomic");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Action cNumberLiteralAction_0_0 = (Action)cGroup_0.eContents().get(0);
		private final Assignment cValueAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cValueNUMBERTerminalRuleCall_0_1_0 = (RuleCall)cValueAssignment_0_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Action cStringLiteralAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cValueAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cValueSTRINGTerminalRuleCall_1_1_0 = (RuleCall)cValueAssignment_1_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Action cNullTypeLiteralAction_2_0 = (Action)cGroup_2.eContents().get(0);
		private final Assignment cNulltypeAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cNulltypeNullTypeParserRuleCall_2_1_0 = (RuleCall)cNulltypeAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Action cBooleanTypeAction_3_0 = (Action)cGroup_3.eContents().get(0);
		private final Assignment cBoolAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cBoolBooleanValueParserRuleCall_3_1_0 = (RuleCall)cBoolAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cAlternatives.eContents().get(4);
		private final Action cTypeRefAction_4_0 = (Action)cGroup_4.eContents().get(0);
		private final Assignment cTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cTypeSymbolCrossReference_4_1_0 = (CrossReference)cTypeAssignment_4_1.eContents().get(0);
		private final RuleCall cTypeSymbolIDTerminalRuleCall_4_1_0_1 = (RuleCall)cTypeSymbolCrossReference_4_1_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cAlternatives.eContents().get(5);
		private final Action cSystemCallObjAction_5_0 = (Action)cGroup_5.eContents().get(0);
		private final Assignment cSysCallAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cSysCallSystemCallParserRuleCall_5_1_0 = (RuleCall)cSysCallAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cAlternatives.eContents().get(6);
		private final Action cFeatureCallExpAction_6_0 = (Action)cGroup_6.eContents().get(0);
		private final Assignment cFuncAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cFuncFeatureCallParserRuleCall_6_1_0 = (RuleCall)cFuncAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cAlternatives.eContents().get(7);
		private final Action cSelfCallExprAction_7_0 = (Action)cGroup_7.eContents().get(0);
		private final Assignment cSelfCallAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cSelfCallSelfCallParserRuleCall_7_1_0 = (RuleCall)cSelfCallAssignment_7_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cAlternatives.eContents().get(8);
		private final Action cMacroCallAction_8_0 = (Action)cGroup_8.eContents().get(0);
		private final Assignment cMacroCallAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cMacroCallCASL_Macro_CallParserRuleCall_8_1_0 = (RuleCall)cMacroCallAssignment_8_1.eContents().get(0);
		private final Group cGroup_9 = (Group)cAlternatives.eContents().get(9);
		private final Action cFunctionCallExprAction_9_0 = (Action)cGroup_9.eContents().get(0);
		private final Assignment cFuncCallAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cFuncCallFunctionCallParserRuleCall_9_1_0 = (RuleCall)cFuncCallAssignment_9_1.eContents().get(0);
		private final Group cGroup_10 = (Group)cAlternatives.eContents().get(10);
		private final Action cEnumCallExprAction_10_0 = (Action)cGroup_10.eContents().get(0);
		private final Assignment cEnumCallAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cEnumCallEnumCallParserRuleCall_10_1_0 = (RuleCall)cEnumCallAssignment_10_1.eContents().get(0);
		private final Group cGroup_11 = (Group)cAlternatives.eContents().get(11);
		private final Action cGroup_CallAction_11_0 = (Action)cGroup_11.eContents().get(0);
		private final Assignment cGroupCallAssignment_11_1 = (Assignment)cGroup_11.eContents().get(1);
		private final RuleCall cGroupCallGroup_CallParserRuleCall_11_1_0 = (RuleCall)cGroupCallAssignment_11_1.eContents().get(0);
		private final Group cGroup_12 = (Group)cAlternatives.eContents().get(12);
		private final Action cAgent_CallAction_12_0 = (Action)cGroup_12.eContents().get(0);
		private final Assignment cAgentCallAssignment_12_1 = (Assignment)cGroup_12.eContents().get(1);
		private final RuleCall cAgentCallAgent_CallParserRuleCall_12_1_0 = (RuleCall)cAgentCallAssignment_12_1.eContents().get(0);
		private final Group cGroup_13 = (Group)cAlternatives.eContents().get(13);
		private final Action cEnvironment_CallAction_13_0 = (Action)cGroup_13.eContents().get(0);
		private final Assignment cEnvironmentCallAssignment_13_1 = (Assignment)cGroup_13.eContents().get(1);
		private final RuleCall cEnvironmentCallEnvironment_CallParserRuleCall_13_1_0 = (RuleCall)cEnvironmentCallAssignment_13_1.eContents().get(0);
		
		////TODO: Most of these aren't atomics
		//Atomic Expression:
		//	{NumberLiteral} value=NUMBER | {StringLiteral} value=STRING | {NullTypeLiteral} nulltype=NullType | {BooleanType}
		//	bool=BooleanValue | {TypeRef} type=[Symbol] | {SystemCallObj} sysCall=SystemCall | {FeatureCallExp} func=FeatureCall |
		//	{SelfCallExpr} selfCall=SelfCall | {MacroCall} macroCall=CASL_Macro_Call | {FunctionCallExpr} funcCall=FunctionCall |
		//	{EnumCallExpr} enumCall=EnumCall | {Group_Call} groupCall=Group_Call | {Agent_Call} agentCall=Agent_Call |
		//	{Environment_Call} environmentCall=Environment_Call;
		@Override public ParserRule getRule() { return rule; }
		
		//{NumberLiteral} value=NUMBER | {StringLiteral} value=STRING | {NullTypeLiteral} nulltype=NullType | {BooleanType}
		//bool=BooleanValue | {TypeRef} type=[Symbol] | {SystemCallObj} sysCall=SystemCall | {FeatureCallExp} func=FeatureCall |
		//{SelfCallExpr} selfCall=SelfCall | {MacroCall} macroCall=CASL_Macro_Call | {FunctionCallExpr} funcCall=FunctionCall |
		//{EnumCallExpr} enumCall=EnumCall | {Group_Call} groupCall=Group_Call | {Agent_Call} agentCall=Agent_Call |
		//{Environment_Call} environmentCall=Environment_Call
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//{NumberLiteral} value=NUMBER
		public Group getGroup_0() { return cGroup_0; }
		
		//{NumberLiteral}
		public Action getNumberLiteralAction_0_0() { return cNumberLiteralAction_0_0; }
		
		//value=NUMBER
		public Assignment getValueAssignment_0_1() { return cValueAssignment_0_1; }
		
		//NUMBER
		public RuleCall getValueNUMBERTerminalRuleCall_0_1_0() { return cValueNUMBERTerminalRuleCall_0_1_0; }
		
		//{StringLiteral} value=STRING
		public Group getGroup_1() { return cGroup_1; }
		
		//{StringLiteral}
		public Action getStringLiteralAction_1_0() { return cStringLiteralAction_1_0; }
		
		//value=STRING
		public Assignment getValueAssignment_1_1() { return cValueAssignment_1_1; }
		
		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_1_1_0() { return cValueSTRINGTerminalRuleCall_1_1_0; }
		
		//{NullTypeLiteral} nulltype=NullType
		public Group getGroup_2() { return cGroup_2; }
		
		//{NullTypeLiteral}
		public Action getNullTypeLiteralAction_2_0() { return cNullTypeLiteralAction_2_0; }
		
		//nulltype=NullType
		public Assignment getNulltypeAssignment_2_1() { return cNulltypeAssignment_2_1; }
		
		//NullType
		public RuleCall getNulltypeNullTypeParserRuleCall_2_1_0() { return cNulltypeNullTypeParserRuleCall_2_1_0; }
		
		//{BooleanType} bool=BooleanValue
		public Group getGroup_3() { return cGroup_3; }
		
		//{BooleanType}
		public Action getBooleanTypeAction_3_0() { return cBooleanTypeAction_3_0; }
		
		//bool=BooleanValue
		public Assignment getBoolAssignment_3_1() { return cBoolAssignment_3_1; }
		
		//BooleanValue
		public RuleCall getBoolBooleanValueParserRuleCall_3_1_0() { return cBoolBooleanValueParserRuleCall_3_1_0; }
		
		//{TypeRef} type=[Symbol]
		public Group getGroup_4() { return cGroup_4; }
		
		//{TypeRef}
		public Action getTypeRefAction_4_0() { return cTypeRefAction_4_0; }
		
		//type=[Symbol]
		public Assignment getTypeAssignment_4_1() { return cTypeAssignment_4_1; }
		
		//[Symbol]
		public CrossReference getTypeSymbolCrossReference_4_1_0() { return cTypeSymbolCrossReference_4_1_0; }
		
		//ID
		public RuleCall getTypeSymbolIDTerminalRuleCall_4_1_0_1() { return cTypeSymbolIDTerminalRuleCall_4_1_0_1; }
		
		//{SystemCallObj} sysCall=SystemCall
		public Group getGroup_5() { return cGroup_5; }
		
		//{SystemCallObj}
		public Action getSystemCallObjAction_5_0() { return cSystemCallObjAction_5_0; }
		
		//sysCall=SystemCall
		public Assignment getSysCallAssignment_5_1() { return cSysCallAssignment_5_1; }
		
		//SystemCall
		public RuleCall getSysCallSystemCallParserRuleCall_5_1_0() { return cSysCallSystemCallParserRuleCall_5_1_0; }
		
		//{FeatureCallExp} func=FeatureCall
		public Group getGroup_6() { return cGroup_6; }
		
		//{FeatureCallExp}
		public Action getFeatureCallExpAction_6_0() { return cFeatureCallExpAction_6_0; }
		
		//func=FeatureCall
		public Assignment getFuncAssignment_6_1() { return cFuncAssignment_6_1; }
		
		//FeatureCall
		public RuleCall getFuncFeatureCallParserRuleCall_6_1_0() { return cFuncFeatureCallParserRuleCall_6_1_0; }
		
		//{SelfCallExpr} selfCall=SelfCall
		public Group getGroup_7() { return cGroup_7; }
		
		//{SelfCallExpr}
		public Action getSelfCallExprAction_7_0() { return cSelfCallExprAction_7_0; }
		
		//selfCall=SelfCall
		public Assignment getSelfCallAssignment_7_1() { return cSelfCallAssignment_7_1; }
		
		//SelfCall
		public RuleCall getSelfCallSelfCallParserRuleCall_7_1_0() { return cSelfCallSelfCallParserRuleCall_7_1_0; }
		
		//{MacroCall} macroCall=CASL_Macro_Call
		public Group getGroup_8() { return cGroup_8; }
		
		//{MacroCall}
		public Action getMacroCallAction_8_0() { return cMacroCallAction_8_0; }
		
		//macroCall=CASL_Macro_Call
		public Assignment getMacroCallAssignment_8_1() { return cMacroCallAssignment_8_1; }
		
		//CASL_Macro_Call
		public RuleCall getMacroCallCASL_Macro_CallParserRuleCall_8_1_0() { return cMacroCallCASL_Macro_CallParserRuleCall_8_1_0; }
		
		//{FunctionCallExpr} funcCall=FunctionCall
		public Group getGroup_9() { return cGroup_9; }
		
		//{FunctionCallExpr}
		public Action getFunctionCallExprAction_9_0() { return cFunctionCallExprAction_9_0; }
		
		//funcCall=FunctionCall
		public Assignment getFuncCallAssignment_9_1() { return cFuncCallAssignment_9_1; }
		
		//FunctionCall
		public RuleCall getFuncCallFunctionCallParserRuleCall_9_1_0() { return cFuncCallFunctionCallParserRuleCall_9_1_0; }
		
		//{EnumCallExpr} enumCall=EnumCall
		public Group getGroup_10() { return cGroup_10; }
		
		//{EnumCallExpr}
		public Action getEnumCallExprAction_10_0() { return cEnumCallExprAction_10_0; }
		
		//enumCall=EnumCall
		public Assignment getEnumCallAssignment_10_1() { return cEnumCallAssignment_10_1; }
		
		//EnumCall
		public RuleCall getEnumCallEnumCallParserRuleCall_10_1_0() { return cEnumCallEnumCallParserRuleCall_10_1_0; }
		
		//{Group_Call} groupCall=Group_Call
		public Group getGroup_11() { return cGroup_11; }
		
		//{Group_Call}
		public Action getGroup_CallAction_11_0() { return cGroup_CallAction_11_0; }
		
		//groupCall=Group_Call
		public Assignment getGroupCallAssignment_11_1() { return cGroupCallAssignment_11_1; }
		
		//Group_Call
		public RuleCall getGroupCallGroup_CallParserRuleCall_11_1_0() { return cGroupCallGroup_CallParserRuleCall_11_1_0; }
		
		//{Agent_Call} agentCall=Agent_Call
		public Group getGroup_12() { return cGroup_12; }
		
		//{Agent_Call}
		public Action getAgent_CallAction_12_0() { return cAgent_CallAction_12_0; }
		
		//agentCall=Agent_Call
		public Assignment getAgentCallAssignment_12_1() { return cAgentCallAssignment_12_1; }
		
		//Agent_Call
		public RuleCall getAgentCallAgent_CallParserRuleCall_12_1_0() { return cAgentCallAgent_CallParserRuleCall_12_1_0; }
		
		//{Environment_Call} environmentCall=Environment_Call
		public Group getGroup_13() { return cGroup_13; }
		
		//{Environment_Call}
		public Action getEnvironment_CallAction_13_0() { return cEnvironment_CallAction_13_0; }
		
		//environmentCall=Environment_Call
		public Assignment getEnvironmentCallAssignment_13_1() { return cEnvironmentCallAssignment_13_1; }
		
		//Environment_Call
		public RuleCall getEnvironmentCallEnvironment_CallParserRuleCall_13_1_0() { return cEnvironmentCallEnvironment_CallParserRuleCall_13_1_0; }
	}
	public class SelfCallElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.SelfCall");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Action cSelfCallAction_0_0 = (Action)cGroup_0.eContents().get(0);
		private final Keyword cSelfKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cSelfKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cRefAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final CrossReference cRefSymbolCrossReference_1_1_0 = (CrossReference)cRefAssignment_1_1.eContents().get(0);
		private final RuleCall cRefSymbolIDTerminalRuleCall_1_1_0_1 = (RuleCall)cRefSymbolCrossReference_1_1_0.eContents().get(1);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Keyword cSelfKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cFcAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cFcFunctionCallParserRuleCall_2_1_0 = (RuleCall)cFcAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Keyword cSelfKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cFecAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cFecFeatureCallParserRuleCall_3_1_0 = (RuleCall)cFecAssignment_3_1.eContents().get(0);
		
		////We have to add Agent
		////TODO: Validation/Scoping, Should this first term be valid? (who just calls this)
		//SelfCall:
		//	{SelfCall}
		//	'self' | 'self.' ref=[Symbol] | 'self.' fc=FunctionCall | 'self.' fec=FeatureCall //Fix 2
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{SelfCall} 'self' | 'self.' ref=[Symbol] | 'self.' fc=FunctionCall | 'self.' fec=FeatureCall
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//{SelfCall} 'self'
		public Group getGroup_0() { return cGroup_0; }
		
		//{SelfCall}
		public Action getSelfCallAction_0_0() { return cSelfCallAction_0_0; }
		
		//'self'
		public Keyword getSelfKeyword_0_1() { return cSelfKeyword_0_1; }
		
		//'self.' ref=[Symbol]
		public Group getGroup_1() { return cGroup_1; }
		
		//'self.'
		public Keyword getSelfKeyword_1_0() { return cSelfKeyword_1_0; }
		
		//ref=[Symbol]
		public Assignment getRefAssignment_1_1() { return cRefAssignment_1_1; }
		
		//[Symbol]
		public CrossReference getRefSymbolCrossReference_1_1_0() { return cRefSymbolCrossReference_1_1_0; }
		
		//ID
		public RuleCall getRefSymbolIDTerminalRuleCall_1_1_0_1() { return cRefSymbolIDTerminalRuleCall_1_1_0_1; }
		
		//'self.' fc=FunctionCall
		public Group getGroup_2() { return cGroup_2; }
		
		//'self.'
		public Keyword getSelfKeyword_2_0() { return cSelfKeyword_2_0; }
		
		//fc=FunctionCall
		public Assignment getFcAssignment_2_1() { return cFcAssignment_2_1; }
		
		//FunctionCall
		public RuleCall getFcFunctionCallParserRuleCall_2_1_0() { return cFcFunctionCallParserRuleCall_2_1_0; }
		
		//'self.' fec=FeatureCall
		public Group getGroup_3() { return cGroup_3; }
		
		//'self.'
		public Keyword getSelfKeyword_3_0() { return cSelfKeyword_3_0; }
		
		//fec=FeatureCall
		public Assignment getFecAssignment_3_1() { return cFecAssignment_3_1; }
		
		//FeatureCall
		public RuleCall getFecFeatureCallParserRuleCall_3_1_0() { return cFecFeatureCallParserRuleCall_3_1_0; }
	}
	public class FunctionCallElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.FunctionCall");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cFunctionCallAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cObjAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cObjSymbolCrossReference_1_0 = (CrossReference)cObjAssignment_1.eContents().get(0);
		private final RuleCall cObjSymbolIDTerminalRuleCall_1_0_1 = (RuleCall)cObjSymbolCrossReference_1_0.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cAlternatives_2.eContents().get(0);
		private final Keyword cFullStopKeyword_2_0_0 = (Keyword)cGroup_2_0.eContents().get(0);
		private final Assignment cFuncAssignment_2_0_1 = (Assignment)cGroup_2_0.eContents().get(1);
		private final CrossReference cFuncFunctionCrossReference_2_0_1_0 = (CrossReference)cFuncAssignment_2_0_1.eContents().get(0);
		private final RuleCall cFuncFunctionIDTerminalRuleCall_2_0_1_0_1 = (RuleCall)cFuncFunctionCrossReference_2_0_1_0.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_2_0_2 = (Keyword)cGroup_2_0.eContents().get(2);
		private final Assignment cInputsAssignment_2_0_3 = (Assignment)cGroup_2_0.eContents().get(3);
		private final RuleCall cInputsExpressionParserRuleCall_2_0_3_0 = (RuleCall)cInputsAssignment_2_0_3.eContents().get(0);
		private final Group cGroup_2_0_4 = (Group)cGroup_2_0.eContents().get(4);
		private final Keyword cCommaKeyword_2_0_4_0 = (Keyword)cGroup_2_0_4.eContents().get(0);
		private final Assignment cInputsAssignment_2_0_4_1 = (Assignment)cGroup_2_0_4.eContents().get(1);
		private final RuleCall cInputsExpressionParserRuleCall_2_0_4_1_0 = (RuleCall)cInputsAssignment_2_0_4_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_0_5 = (Keyword)cGroup_2_0.eContents().get(5);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Keyword cFullStopKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cFieldsAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final CrossReference cFieldsSymbolCrossReference_2_1_1_0 = (CrossReference)cFieldsAssignment_2_1_1.eContents().get(0);
		private final RuleCall cFieldsSymbolIDTerminalRuleCall_2_1_1_0_1 = (RuleCall)cFieldsSymbolCrossReference_2_1_1_0.eContents().get(1);
		private final Group cGroup_2_1_2 = (Group)cGroup_2_1.eContents().get(2);
		private final Keyword cFullStopKeyword_2_1_2_0 = (Keyword)cGroup_2_1_2.eContents().get(0);
		private final Assignment cFieldsAssignment_2_1_2_1 = (Assignment)cGroup_2_1_2.eContents().get(1);
		private final CrossReference cFieldsSymbolCrossReference_2_1_2_1_0 = (CrossReference)cFieldsAssignment_2_1_2_1.eContents().get(0);
		private final RuleCall cFieldsSymbolIDTerminalRuleCall_2_1_2_1_0_1 = (RuleCall)cFieldsSymbolCrossReference_2_1_2_1_0.eContents().get(1);
		
		////TODO: Validation/Scoping, rename this, 
		//FunctionCall:
		//	{FunctionCall} obj=[Symbol] ('.' func=[Function] '(' inputs+=Expression? (',' inputs+=Expression)* ')' | '.'
		//	fields+=[Symbol] ('.' fields+=[Symbol])*);
		@Override public ParserRule getRule() { return rule; }
		
		//{FunctionCall} obj=[Symbol] ('.' func=[Function] '(' inputs+=Expression? (',' inputs+=Expression)* ')' | '.'
		//fields+=[Symbol] ('.' fields+=[Symbol])*)
		public Group getGroup() { return cGroup; }
		
		//{FunctionCall}
		public Action getFunctionCallAction_0() { return cFunctionCallAction_0; }
		
		//obj=[Symbol]
		public Assignment getObjAssignment_1() { return cObjAssignment_1; }
		
		//[Symbol]
		public CrossReference getObjSymbolCrossReference_1_0() { return cObjSymbolCrossReference_1_0; }
		
		//ID
		public RuleCall getObjSymbolIDTerminalRuleCall_1_0_1() { return cObjSymbolIDTerminalRuleCall_1_0_1; }
		
		//'.' func=[Function] '(' inputs+=Expression? (',' inputs+=Expression)* ')' | '.' fields+=[Symbol] ('.' fields+=[Symbol])*
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//'.' func=[Function] '(' inputs+=Expression? (',' inputs+=Expression)* ')'
		public Group getGroup_2_0() { return cGroup_2_0; }
		
		//'.'
		public Keyword getFullStopKeyword_2_0_0() { return cFullStopKeyword_2_0_0; }
		
		//func=[Function]
		public Assignment getFuncAssignment_2_0_1() { return cFuncAssignment_2_0_1; }
		
		//[Function]
		public CrossReference getFuncFunctionCrossReference_2_0_1_0() { return cFuncFunctionCrossReference_2_0_1_0; }
		
		//ID
		public RuleCall getFuncFunctionIDTerminalRuleCall_2_0_1_0_1() { return cFuncFunctionIDTerminalRuleCall_2_0_1_0_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2_0_2() { return cLeftParenthesisKeyword_2_0_2; }
		
		//inputs+=Expression?
		public Assignment getInputsAssignment_2_0_3() { return cInputsAssignment_2_0_3; }
		
		//Expression
		public RuleCall getInputsExpressionParserRuleCall_2_0_3_0() { return cInputsExpressionParserRuleCall_2_0_3_0; }
		
		//(',' inputs+=Expression)*
		public Group getGroup_2_0_4() { return cGroup_2_0_4; }
		
		//','
		public Keyword getCommaKeyword_2_0_4_0() { return cCommaKeyword_2_0_4_0; }
		
		//inputs+=Expression
		public Assignment getInputsAssignment_2_0_4_1() { return cInputsAssignment_2_0_4_1; }
		
		//Expression
		public RuleCall getInputsExpressionParserRuleCall_2_0_4_1_0() { return cInputsExpressionParserRuleCall_2_0_4_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2_0_5() { return cRightParenthesisKeyword_2_0_5; }
		
		//'.' fields+=[Symbol] ('.' fields+=[Symbol])*
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//'.'
		public Keyword getFullStopKeyword_2_1_0() { return cFullStopKeyword_2_1_0; }
		
		//fields+=[Symbol]
		public Assignment getFieldsAssignment_2_1_1() { return cFieldsAssignment_2_1_1; }
		
		//[Symbol]
		public CrossReference getFieldsSymbolCrossReference_2_1_1_0() { return cFieldsSymbolCrossReference_2_1_1_0; }
		
		//ID
		public RuleCall getFieldsSymbolIDTerminalRuleCall_2_1_1_0_1() { return cFieldsSymbolIDTerminalRuleCall_2_1_1_0_1; }
		
		//('.' fields+=[Symbol])*
		public Group getGroup_2_1_2() { return cGroup_2_1_2; }
		
		//'.'
		public Keyword getFullStopKeyword_2_1_2_0() { return cFullStopKeyword_2_1_2_0; }
		
		//fields+=[Symbol]
		public Assignment getFieldsAssignment_2_1_2_1() { return cFieldsAssignment_2_1_2_1; }
		
		//[Symbol]
		public CrossReference getFieldsSymbolCrossReference_2_1_2_1_0() { return cFieldsSymbolCrossReference_2_1_2_1_0; }
		
		//ID
		public RuleCall getFieldsSymbolIDTerminalRuleCall_2_1_2_1_0_1() { return cFieldsSymbolIDTerminalRuleCall_2_1_2_1_0_1; }
	}
	public class EnumCallElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.EnumCall");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cENUMKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cEnAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cEnEnumCrossReference_1_0 = (CrossReference)cEnAssignment_1.eContents().get(0);
		private final RuleCall cEnEnumIDTerminalRuleCall_1_0_1 = (RuleCall)cEnEnumCrossReference_1_0.eContents().get(1);
		private final Keyword cFullStopKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cEntypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cEntypeSymbolCrossReference_3_0 = (CrossReference)cEntypeAssignment_3.eContents().get(0);
		private final RuleCall cEntypeSymbolIDTerminalRuleCall_3_0_1 = (RuleCall)cEntypeSymbolCrossReference_3_0.eContents().get(1);
		
		//EnumCall:
		//	'ENUM.' en=[Enum] '.' entype=[Symbol];
		@Override public ParserRule getRule() { return rule; }
		
		//'ENUM.' en=[Enum] '.' entype=[Symbol]
		public Group getGroup() { return cGroup; }
		
		//'ENUM.'
		public Keyword getENUMKeyword_0() { return cENUMKeyword_0; }
		
		//en=[Enum]
		public Assignment getEnAssignment_1() { return cEnAssignment_1; }
		
		//[Enum]
		public CrossReference getEnEnumCrossReference_1_0() { return cEnEnumCrossReference_1_0; }
		
		//ID
		public RuleCall getEnEnumIDTerminalRuleCall_1_0_1() { return cEnEnumIDTerminalRuleCall_1_0_1; }
		
		//'.'
		public Keyword getFullStopKeyword_2() { return cFullStopKeyword_2; }
		
		//entype=[Symbol]
		public Assignment getEntypeAssignment_3() { return cEntypeAssignment_3; }
		
		//[Symbol]
		public CrossReference getEntypeSymbolCrossReference_3_0() { return cEntypeSymbolCrossReference_3_0; }
		
		//ID
		public RuleCall getEntypeSymbolIDTerminalRuleCall_3_0_1() { return cEntypeSymbolIDTerminalRuleCall_3_0_1; }
	}
	public class SystemCallElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.SystemCall");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSystemCallAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSYSTEMKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cCallAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCallQualifiedNameCallParserRuleCall_2_0 = (RuleCall)cCallAssignment_2.eContents().get(0);
		
		////TODO: Expand this to access SYSTEM parameters (or not)
		//SystemCall:
		//	{SystemCall} 'SYSTEM.' call=QualifiedNameCall;
		@Override public ParserRule getRule() { return rule; }
		
		//{SystemCall} 'SYSTEM.' call=QualifiedNameCall
		public Group getGroup() { return cGroup; }
		
		//{SystemCall}
		public Action getSystemCallAction_0() { return cSystemCallAction_0; }
		
		//'SYSTEM.'
		public Keyword getSYSTEMKeyword_1() { return cSYSTEMKeyword_1; }
		
		//call=QualifiedNameCall
		public Assignment getCallAssignment_2() { return cCallAssignment_2; }
		
		//QualifiedNameCall
		public RuleCall getCallQualifiedNameCallParserRuleCall_2_0() { return cCallQualifiedNameCallParserRuleCall_2_0; }
	}
	public class Agent_CallElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.Agent_Call");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAgent_CallAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAGENTKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cAgentAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cAgentAgentCrossReference_2_0 = (CrossReference)cAgentAssignment_2.eContents().get(0);
		private final RuleCall cAgentAgentIDTerminalRuleCall_2_0_1 = (RuleCall)cAgentAgentCrossReference_2_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cFullStopKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cQncAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cQncQualifiedNameCallParserRuleCall_3_1_0 = (RuleCall)cQncAssignment_3_1.eContents().get(0);
		
		////TODO: THese should change and become referneces to the whole type
		////This is something that calls each agent of that type
		//Agent_Call:
		//	{Agent_Call} 'AGENT.' agent=[Agent] ('.' qnc=QualifiedNameCall)?;
		@Override public ParserRule getRule() { return rule; }
		
		//{Agent_Call} 'AGENT.' agent=[Agent] ('.' qnc=QualifiedNameCall)?
		public Group getGroup() { return cGroup; }
		
		//{Agent_Call}
		public Action getAgent_CallAction_0() { return cAgent_CallAction_0; }
		
		//'AGENT.'
		public Keyword getAGENTKeyword_1() { return cAGENTKeyword_1; }
		
		//agent=[Agent]
		public Assignment getAgentAssignment_2() { return cAgentAssignment_2; }
		
		//[Agent]
		public CrossReference getAgentAgentCrossReference_2_0() { return cAgentAgentCrossReference_2_0; }
		
		//ID
		public RuleCall getAgentAgentIDTerminalRuleCall_2_0_1() { return cAgentAgentIDTerminalRuleCall_2_0_1; }
		
		//('.' qnc=QualifiedNameCall)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'.'
		public Keyword getFullStopKeyword_3_0() { return cFullStopKeyword_3_0; }
		
		//qnc=QualifiedNameCall
		public Assignment getQncAssignment_3_1() { return cQncAssignment_3_1; }
		
		//QualifiedNameCall
		public RuleCall getQncQualifiedNameCallParserRuleCall_3_1_0() { return cQncQualifiedNameCallParserRuleCall_3_1_0; }
	}
	public class Environment_CallElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.Environment_Call");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEnvironment_CallAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cENVIRONMENTKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cEnvAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cEnvEnvironmentCrossReference_2_0 = (CrossReference)cEnvAssignment_2.eContents().get(0);
		private final RuleCall cEnvEnvironmentIDTerminalRuleCall_2_0_1 = (RuleCall)cEnvEnvironmentCrossReference_2_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cFullStopKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cQncAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cQncQualifiedNameCallParserRuleCall_3_1_0 = (RuleCall)cQncAssignment_3_1.eContents().get(0);
		
		//Environment_Call:
		//	{Environment_Call} 'ENVIRONMENT.' env=[Environment] ('.' qnc=QualifiedNameCall)?;
		@Override public ParserRule getRule() { return rule; }
		
		//{Environment_Call} 'ENVIRONMENT.' env=[Environment] ('.' qnc=QualifiedNameCall)?
		public Group getGroup() { return cGroup; }
		
		//{Environment_Call}
		public Action getEnvironment_CallAction_0() { return cEnvironment_CallAction_0; }
		
		//'ENVIRONMENT.'
		public Keyword getENVIRONMENTKeyword_1() { return cENVIRONMENTKeyword_1; }
		
		//env=[Environment]
		public Assignment getEnvAssignment_2() { return cEnvAssignment_2; }
		
		//[Environment]
		public CrossReference getEnvEnvironmentCrossReference_2_0() { return cEnvEnvironmentCrossReference_2_0; }
		
		//ID
		public RuleCall getEnvEnvironmentIDTerminalRuleCall_2_0_1() { return cEnvEnvironmentIDTerminalRuleCall_2_0_1; }
		
		//('.' qnc=QualifiedNameCall)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'.'
		public Keyword getFullStopKeyword_3_0() { return cFullStopKeyword_3_0; }
		
		//qnc=QualifiedNameCall
		public Assignment getQncAssignment_3_1() { return cQncAssignment_3_1; }
		
		//QualifiedNameCall
		public RuleCall getQncQualifiedNameCallParserRuleCall_3_1_0() { return cQncQualifiedNameCallParserRuleCall_3_1_0; }
	}
	public class Group_CallElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.Group_Call");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGroup_CallAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cGROUPKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cGrpAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cGrpGroupCrossReference_2_0 = (CrossReference)cGrpAssignment_2.eContents().get(0);
		private final RuleCall cGrpGroupIDTerminalRuleCall_2_0_1 = (RuleCall)cGrpGroupCrossReference_2_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cFullStopKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cQncAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cQncQualifiedNameCallParserRuleCall_3_1_0 = (RuleCall)cQncAssignment_3_1.eContents().get(0);
		
		//Group_Call:
		//	{Group_Call} 'GROUP.' grp=[Group] ('.' qnc=QualifiedNameCall)?;
		@Override public ParserRule getRule() { return rule; }
		
		//{Group_Call} 'GROUP.' grp=[Group] ('.' qnc=QualifiedNameCall)?
		public Group getGroup() { return cGroup; }
		
		//{Group_Call}
		public Action getGroup_CallAction_0() { return cGroup_CallAction_0; }
		
		//'GROUP.'
		public Keyword getGROUPKeyword_1() { return cGROUPKeyword_1; }
		
		//grp=[Group]
		public Assignment getGrpAssignment_2() { return cGrpAssignment_2; }
		
		//[Group]
		public CrossReference getGrpGroupCrossReference_2_0() { return cGrpGroupCrossReference_2_0; }
		
		//ID
		public RuleCall getGrpGroupIDTerminalRuleCall_2_0_1() { return cGrpGroupIDTerminalRuleCall_2_0_1; }
		
		//('.' qnc=QualifiedNameCall)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'.'
		public Keyword getFullStopKeyword_3_0() { return cFullStopKeyword_3_0; }
		
		//qnc=QualifiedNameCall
		public Assignment getQncAssignment_3_1() { return cQncAssignment_3_1; }
		
		//QualifiedNameCall
		public RuleCall getQncQualifiedNameCallParserRuleCall_3_1_0() { return cQncQualifiedNameCallParserRuleCall_3_1_0; }
	}
	public class Entity_CallElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.Entity_Call");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAgent_CallParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEnvironment_CallParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cGroup_CallParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Entity_Call:
		//	Agent_Call | Environment_Call | Group_Call;
		@Override public ParserRule getRule() { return rule; }
		
		//Agent_Call | Environment_Call | Group_Call
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Agent_Call
		public RuleCall getAgent_CallParserRuleCall_0() { return cAgent_CallParserRuleCall_0; }
		
		//Environment_Call
		public RuleCall getEnvironment_CallParserRuleCall_1() { return cEnvironment_CallParserRuleCall_1; }
		
		//Group_Call
		public RuleCall getGroup_CallParserRuleCall_2() { return cGroup_CallParserRuleCall_2; }
	}
	public class ObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.Object");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cObjectAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cCustomAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cCustomCustomKeyword_1_0 = (Keyword)cCustomAssignment_1.eContents().get(0);
		private final Keyword cObjKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLessThanSignKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cUseTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cUseTypeObjectCrossReference_4_1_0 = (CrossReference)cUseTypeAssignment_4_1.eContents().get(0);
		private final RuleCall cUseTypeObjectIDTerminalRuleCall_4_1_0_1 = (RuleCall)cUseTypeObjectCrossReference_4_1_0.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		private final Keyword cColonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Alternatives cAlternatives_7 = (Alternatives)cGroup.eContents().get(7);
		private final Group cGroup_7_0 = (Group)cAlternatives_7.eContents().get(0);
		private final Assignment cFieldsAssignment_7_0_0 = (Assignment)cGroup_7_0.eContents().get(0);
		private final RuleCall cFieldsFieldParserRuleCall_7_0_0_0 = (RuleCall)cFieldsAssignment_7_0_0.eContents().get(0);
		private final Keyword cSemicolonKeyword_7_0_1 = (Keyword)cGroup_7_0.eContents().get(1);
		private final Assignment cFieldsAssignment_7_1 = (Assignment)cAlternatives_7.eContents().get(1);
		private final RuleCall cFieldsFunctionParserRuleCall_7_1_0 = (RuleCall)cFieldsAssignment_7_1.eContents().get(0);
		private final Keyword cRightCurlyBracketSemicolonKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Object:
		//	{Object} custom='custom'? 'obj' name=ID ('<' useType=[Object] '>')? ':' '{' (fields+=Field ';' | fields+=Function)*
		//	'};';
		@Override public ParserRule getRule() { return rule; }
		
		//{Object} custom='custom'? 'obj' name=ID ('<' useType=[Object] '>')? ':' '{' (fields+=Field ';' | fields+=Function)* '};'
		public Group getGroup() { return cGroup; }
		
		//{Object}
		public Action getObjectAction_0() { return cObjectAction_0; }
		
		//custom='custom'?
		public Assignment getCustomAssignment_1() { return cCustomAssignment_1; }
		
		//'custom'
		public Keyword getCustomCustomKeyword_1_0() { return cCustomCustomKeyword_1_0; }
		
		//'obj'
		public Keyword getObjKeyword_2() { return cObjKeyword_2; }
		
		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }
		
		//('<' useType=[Object] '>')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'<'
		public Keyword getLessThanSignKeyword_4_0() { return cLessThanSignKeyword_4_0; }
		
		//useType=[Object]
		public Assignment getUseTypeAssignment_4_1() { return cUseTypeAssignment_4_1; }
		
		//[Object]
		public CrossReference getUseTypeObjectCrossReference_4_1_0() { return cUseTypeObjectCrossReference_4_1_0; }
		
		//ID
		public RuleCall getUseTypeObjectIDTerminalRuleCall_4_1_0_1() { return cUseTypeObjectIDTerminalRuleCall_4_1_0_1; }
		
		//'>'
		public Keyword getGreaterThanSignKeyword_4_2() { return cGreaterThanSignKeyword_4_2; }
		
		//':'
		public Keyword getColonKeyword_5() { return cColonKeyword_5; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }
		
		//(fields+=Field ';' | fields+=Function)*
		public Alternatives getAlternatives_7() { return cAlternatives_7; }
		
		//fields+=Field ';'
		public Group getGroup_7_0() { return cGroup_7_0; }
		
		//fields+=Field
		public Assignment getFieldsAssignment_7_0_0() { return cFieldsAssignment_7_0_0; }
		
		//Field
		public RuleCall getFieldsFieldParserRuleCall_7_0_0_0() { return cFieldsFieldParserRuleCall_7_0_0_0; }
		
		//';'
		public Keyword getSemicolonKeyword_7_0_1() { return cSemicolonKeyword_7_0_1; }
		
		//fields+=Function
		public Assignment getFieldsAssignment_7_1() { return cFieldsAssignment_7_1; }
		
		//Function
		public RuleCall getFieldsFunctionParserRuleCall_7_1_0() { return cFieldsFunctionParserRuleCall_7_1_0; }
		
		//'};'
		public Keyword getRightCurlyBracketSemicolonKeyword_8() { return cRightCurlyBracketSemicolonKeyword_8; }
	}
	public class EnumElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.Enum");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEnumAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cCustomAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cCustomCustomKeyword_1_0 = (Keyword)cCustomAssignment_1.eContents().get(0);
		private final Keyword cEnumKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cEnum_fieldsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cEnum_fieldsEnum_FieldParserRuleCall_6_0 = (RuleCall)cEnum_fieldsAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cCommaKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cEnum_fieldsAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cEnum_fieldsEnum_FieldParserRuleCall_7_1_0 = (RuleCall)cEnum_fieldsAssignment_7_1.eContents().get(0);
		private final Keyword cRightCurlyBracketSemicolonKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		////TODO: AOISUDHAIUSHDIUASHD FUCKING ENUMS
		//Enum:
		//	{Enum} custom='custom'? 'enum' name=ID ':' '{'
		//	enum_fields+=Enum_Field (',' enum_fields+=Enum_Field)*
		//	'};';
		@Override public ParserRule getRule() { return rule; }
		
		//{Enum} custom='custom'? 'enum' name=ID ':' '{' enum_fields+=Enum_Field (',' enum_fields+=Enum_Field)* '};'
		public Group getGroup() { return cGroup; }
		
		//{Enum}
		public Action getEnumAction_0() { return cEnumAction_0; }
		
		//custom='custom'?
		public Assignment getCustomAssignment_1() { return cCustomAssignment_1; }
		
		//'custom'
		public Keyword getCustomCustomKeyword_1_0() { return cCustomCustomKeyword_1_0; }
		
		//'enum'
		public Keyword getEnumKeyword_2() { return cEnumKeyword_2; }
		
		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }
		
		//':'
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }
		
		//enum_fields+=Enum_Field
		public Assignment getEnum_fieldsAssignment_6() { return cEnum_fieldsAssignment_6; }
		
		//Enum_Field
		public RuleCall getEnum_fieldsEnum_FieldParserRuleCall_6_0() { return cEnum_fieldsEnum_FieldParserRuleCall_6_0; }
		
		//(',' enum_fields+=Enum_Field)*
		public Group getGroup_7() { return cGroup_7; }
		
		//','
		public Keyword getCommaKeyword_7_0() { return cCommaKeyword_7_0; }
		
		//enum_fields+=Enum_Field
		public Assignment getEnum_fieldsAssignment_7_1() { return cEnum_fieldsAssignment_7_1; }
		
		//Enum_Field
		public RuleCall getEnum_fieldsEnum_FieldParserRuleCall_7_1_0() { return cEnum_fieldsEnum_FieldParserRuleCall_7_1_0; }
		
		//'};'
		public Keyword getRightCurlyBracketSemicolonKeyword_8() { return cRightCurlyBracketSemicolonKeyword_8; }
	}
	public class Enum_FieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.Enum_Field");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//Enum_Field Symbol:
		//	name=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0() { return cNameIDTerminalRuleCall_0; }
	}
	public class CASL_Macro_CallElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.CASL_Macro_Call");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCASLKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cMacroAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cMacroCASL_MacroParserRuleCall_1_0 = (RuleCall)cMacroAssignment_1.eContents().get(0);
		
		////Special calls a.k.a macros
		//CASL_Macro_Call:
		//	'CASL.' macro=CASL_Macro;
		@Override public ParserRule getRule() { return rule; }
		
		//'CASL.' macro=CASL_Macro
		public Group getGroup() { return cGroup; }
		
		//'CASL.'
		public Keyword getCASLKeyword_0() { return cCASLKeyword_0; }
		
		//macro=CASL_Macro
		public Assignment getMacroAssignment_1() { return cMacroAssignment_1; }
		
		//CASL_Macro
		public RuleCall getMacroCASL_MacroParserRuleCall_1_0() { return cMacroCASL_MacroParserRuleCall_1_0; }
	}
	public class CASL_MacroElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.CASL_Macro");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cCASL_Macro_NeighboursParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cCASL_Macro_FilterAndFunctionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cCASL_Macro_CountConditionsParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cCASL_Macro_RandomParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cCASL_Macro_ForEachParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cCASL_Macro_PrintParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cCASL_Macro_MetricSwitchParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cCASL_Macro_PopulateParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cCASL_Macro_TODOParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cCASL_Macro_VisualizeParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cCASL_Macro_DisplayParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		private final RuleCall cCASL_Macro_LogParserRuleCall_11 = (RuleCall)cAlternatives.eContents().get(11);
		private final RuleCall cCASL_Macro_InitLoggerParserRuleCall_12 = (RuleCall)cAlternatives.eContents().get(12);
		
		////CASL_MACRO should become it's own DSL (or own library function)
		////Because it will probably be massive (and it also has to line up with stdlib)
		//CASL_Macro:
		//	CASL_Macro_Neighbours | CASL_Macro_FilterAndFunction | CASL_Macro_CountConditions | CASL_Macro_Random |
		//	CASL_Macro_ForEach | CASL_Macro_Print | CASL_Macro_MetricSwitch | CASL_Macro_Populate | CASL_Macro_TODO |
		//	CASL_Macro_Visualize | CASL_Macro_Display | CASL_Macro_Log | CASL_Macro_InitLogger;
		@Override public ParserRule getRule() { return rule; }
		
		//CASL_Macro_Neighbours | CASL_Macro_FilterAndFunction | CASL_Macro_CountConditions | CASL_Macro_Random |
		//CASL_Macro_ForEach | CASL_Macro_Print | CASL_Macro_MetricSwitch | CASL_Macro_Populate | CASL_Macro_TODO |
		//CASL_Macro_Visualize | CASL_Macro_Display | CASL_Macro_Log | CASL_Macro_InitLogger
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//CASL_Macro_Neighbours
		public RuleCall getCASL_Macro_NeighboursParserRuleCall_0() { return cCASL_Macro_NeighboursParserRuleCall_0; }
		
		//CASL_Macro_FilterAndFunction
		public RuleCall getCASL_Macro_FilterAndFunctionParserRuleCall_1() { return cCASL_Macro_FilterAndFunctionParserRuleCall_1; }
		
		//CASL_Macro_CountConditions
		public RuleCall getCASL_Macro_CountConditionsParserRuleCall_2() { return cCASL_Macro_CountConditionsParserRuleCall_2; }
		
		//CASL_Macro_Random
		public RuleCall getCASL_Macro_RandomParserRuleCall_3() { return cCASL_Macro_RandomParserRuleCall_3; }
		
		//CASL_Macro_ForEach
		public RuleCall getCASL_Macro_ForEachParserRuleCall_4() { return cCASL_Macro_ForEachParserRuleCall_4; }
		
		//CASL_Macro_Print
		public RuleCall getCASL_Macro_PrintParserRuleCall_5() { return cCASL_Macro_PrintParserRuleCall_5; }
		
		//CASL_Macro_MetricSwitch
		public RuleCall getCASL_Macro_MetricSwitchParserRuleCall_6() { return cCASL_Macro_MetricSwitchParserRuleCall_6; }
		
		//CASL_Macro_Populate
		public RuleCall getCASL_Macro_PopulateParserRuleCall_7() { return cCASL_Macro_PopulateParserRuleCall_7; }
		
		//CASL_Macro_TODO
		public RuleCall getCASL_Macro_TODOParserRuleCall_8() { return cCASL_Macro_TODOParserRuleCall_8; }
		
		//CASL_Macro_Visualize
		public RuleCall getCASL_Macro_VisualizeParserRuleCall_9() { return cCASL_Macro_VisualizeParserRuleCall_9; }
		
		//CASL_Macro_Display
		public RuleCall getCASL_Macro_DisplayParserRuleCall_10() { return cCASL_Macro_DisplayParserRuleCall_10; }
		
		//CASL_Macro_Log
		public RuleCall getCASL_Macro_LogParserRuleCall_11() { return cCASL_Macro_LogParserRuleCall_11; }
		
		//CASL_Macro_InitLogger
		public RuleCall getCASL_Macro_InitLoggerParserRuleCall_12() { return cCASL_Macro_InitLoggerParserRuleCall_12; }
	}
	public class CASL_Macro_NeighboursElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.CASL_Macro_Neighbours");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cWorldTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cWorldTypeWorldTypeEnumRuleCall_0_0 = (RuleCall)cWorldTypeAssignment_0.eContents().get(0);
		private final Keyword cGetNeighboursKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cSearchTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cSearchTypeEntityCrossReference_2_0 = (CrossReference)cSearchTypeAssignment_2.eContents().get(0);
		private final RuleCall cSearchTypeEntityIDTerminalRuleCall_2_0_1 = (RuleCall)cSearchTypeEntityCrossReference_2_0.eContents().get(1);
		private final Keyword cRightSquareBracketLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cDistAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cDistNUMBERTerminalRuleCall_4_0 = (RuleCall)cDistAssignment_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//CASL_Macro_Neighbours:
		//	worldType=WorldType '.GetNeighbours[' searchType=[Entity] '](' dist=NUMBER ')';
		@Override public ParserRule getRule() { return rule; }
		
		//worldType=WorldType '.GetNeighbours[' searchType=[Entity] '](' dist=NUMBER ')'
		public Group getGroup() { return cGroup; }
		
		//worldType=WorldType
		public Assignment getWorldTypeAssignment_0() { return cWorldTypeAssignment_0; }
		
		//WorldType
		public RuleCall getWorldTypeWorldTypeEnumRuleCall_0_0() { return cWorldTypeWorldTypeEnumRuleCall_0_0; }
		
		//'.GetNeighbours['
		public Keyword getGetNeighboursKeyword_1() { return cGetNeighboursKeyword_1; }
		
		//searchType=[Entity]
		public Assignment getSearchTypeAssignment_2() { return cSearchTypeAssignment_2; }
		
		//[Entity]
		public CrossReference getSearchTypeEntityCrossReference_2_0() { return cSearchTypeEntityCrossReference_2_0; }
		
		//ID
		public RuleCall getSearchTypeEntityIDTerminalRuleCall_2_0_1() { return cSearchTypeEntityIDTerminalRuleCall_2_0_1; }
		
		//']('
		public Keyword getRightSquareBracketLeftParenthesisKeyword_3() { return cRightSquareBracketLeftParenthesisKeyword_3; }
		
		//dist=NUMBER
		public Assignment getDistAssignment_4() { return cDistAssignment_4; }
		
		//NUMBER
		public RuleCall getDistNUMBERTerminalRuleCall_4_0() { return cDistNUMBERTerminalRuleCall_4_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}
	public class CASL_Macro_FilterAndFunctionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.CASL_Macro_FilterAndFunction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFILTERKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cSymAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cSymSymbolCrossReference_1_0 = (CrossReference)cSymAssignment_1.eContents().get(0);
		private final RuleCall cSymSymbolIDTerminalRuleCall_1_0_1 = (RuleCall)cSymSymbolCrossReference_1_0.eContents().get(1);
		private final Keyword cRightSquareBracketLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cCondAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cCondExpressionParserRuleCall_3_0 = (RuleCall)cCondAssignment_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cMiscAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cMiscIDTerminalRuleCall_5_0 = (RuleCall)cMiscAssignment_5.eContents().get(0);
		
		//CASL_Macro_FilterAndFunction:
		//	"FILTER[" sym=[Symbol] "](" cond=Expression ")" misc=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//"FILTER[" sym=[Symbol] "](" cond=Expression ")" misc=ID
		public Group getGroup() { return cGroup; }
		
		//"FILTER["
		public Keyword getFILTERKeyword_0() { return cFILTERKeyword_0; }
		
		//sym=[Symbol]
		public Assignment getSymAssignment_1() { return cSymAssignment_1; }
		
		//[Symbol]
		public CrossReference getSymSymbolCrossReference_1_0() { return cSymSymbolCrossReference_1_0; }
		
		//ID
		public RuleCall getSymSymbolIDTerminalRuleCall_1_0_1() { return cSymSymbolIDTerminalRuleCall_1_0_1; }
		
		//"]("
		public Keyword getRightSquareBracketLeftParenthesisKeyword_2() { return cRightSquareBracketLeftParenthesisKeyword_2; }
		
		//cond=Expression
		public Assignment getCondAssignment_3() { return cCondAssignment_3; }
		
		//Expression
		public RuleCall getCondExpressionParserRuleCall_3_0() { return cCondExpressionParserRuleCall_3_0; }
		
		//")"
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
		
		//misc=ID
		public Assignment getMiscAssignment_5() { return cMiscAssignment_5; }
		
		//ID
		public RuleCall getMiscIDTerminalRuleCall_5_0() { return cMiscIDTerminalRuleCall_5_0; }
	}
	public class CASL_Macro_CountConditionsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.CASL_Macro_CountConditions");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCOUNTKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cSymAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cSymSymbolCrossReference_1_0 = (CrossReference)cSymAssignment_1.eContents().get(0);
		private final RuleCall cSymSymbolIDTerminalRuleCall_1_0_1 = (RuleCall)cSymSymbolCrossReference_1_0.eContents().get(1);
		private final Keyword cRightSquareBracketLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cCondAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cCondExpressionParserRuleCall_3_0 = (RuleCall)cCondAssignment_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//CASL_Macro_CountConditions:
		//	"COUNT[" sym=[Symbol] "](" cond=Expression ")";
		@Override public ParserRule getRule() { return rule; }
		
		//"COUNT[" sym=[Symbol] "](" cond=Expression ")"
		public Group getGroup() { return cGroup; }
		
		//"COUNT["
		public Keyword getCOUNTKeyword_0() { return cCOUNTKeyword_0; }
		
		//sym=[Symbol]
		public Assignment getSymAssignment_1() { return cSymAssignment_1; }
		
		//[Symbol]
		public CrossReference getSymSymbolCrossReference_1_0() { return cSymSymbolCrossReference_1_0; }
		
		//ID
		public RuleCall getSymSymbolIDTerminalRuleCall_1_0_1() { return cSymSymbolIDTerminalRuleCall_1_0_1; }
		
		//"]("
		public Keyword getRightSquareBracketLeftParenthesisKeyword_2() { return cRightSquareBracketLeftParenthesisKeyword_2; }
		
		//cond=Expression
		public Assignment getCondAssignment_3() { return cCondAssignment_3; }
		
		//Expression
		public RuleCall getCondExpressionParserRuleCall_3_0() { return cCondExpressionParserRuleCall_3_0; }
		
		//")"
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
	}
	public class CASL_Macro_RandomElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.CASL_Macro_Random");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRANDOMKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTypeRandomTypeEnumRuleCall_2_0 = (RuleCall)cTypeAssignment_2.eContents().get(0);
		private final Keyword cRightSquareBracketLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cLowAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cLowExpressionParserRuleCall_4_0 = (RuleCall)cLowAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cHighAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cHighExpressionParserRuleCall_5_1_0 = (RuleCall)cHighAssignment_5_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//CASL_Macro_Random:
		//	"RANDOM" '[' type=RandomType '](' low=Expression (',' high=Expression)? ')';
		@Override public ParserRule getRule() { return rule; }
		
		//"RANDOM" '[' type=RandomType '](' low=Expression (',' high=Expression)? ')'
		public Group getGroup() { return cGroup; }
		
		//"RANDOM"
		public Keyword getRANDOMKeyword_0() { return cRANDOMKeyword_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }
		
		//type=RandomType
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }
		
		//RandomType
		public RuleCall getTypeRandomTypeEnumRuleCall_2_0() { return cTypeRandomTypeEnumRuleCall_2_0; }
		
		//']('
		public Keyword getRightSquareBracketLeftParenthesisKeyword_3() { return cRightSquareBracketLeftParenthesisKeyword_3; }
		
		//low=Expression
		public Assignment getLowAssignment_4() { return cLowAssignment_4; }
		
		//Expression
		public RuleCall getLowExpressionParserRuleCall_4_0() { return cLowExpressionParserRuleCall_4_0; }
		
		//(',' high=Expression)?
		public Group getGroup_5() { return cGroup_5; }
		
		//','
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }
		
		//high=Expression
		public Assignment getHighAssignment_5_1() { return cHighAssignment_5_1; }
		
		//Expression
		public RuleCall getHighExpressionParserRuleCall_5_1_0() { return cHighExpressionParserRuleCall_5_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }
	}
	public class CASL_Macro_ForEachElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.CASL_Macro_ForEach");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFOREACHKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cSymAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cSymSymbolCrossReference_1_0 = (CrossReference)cSymAssignment_1.eContents().get(0);
		private final RuleCall cSymSymbolIDTerminalRuleCall_1_0_1 = (RuleCall)cSymSymbolCrossReference_1_0.eContents().get(1);
		private final Keyword cRightSquareBracketLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cExprAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cExprExpressionParserRuleCall_3_0 = (RuleCall)cExprAssignment_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//CASL_Macro_ForEach:
		//	"FOREACH[" sym=[Symbol] "](" expr=Expression ")";
		@Override public ParserRule getRule() { return rule; }
		
		//"FOREACH[" sym=[Symbol] "](" expr=Expression ")"
		public Group getGroup() { return cGroup; }
		
		//"FOREACH["
		public Keyword getFOREACHKeyword_0() { return cFOREACHKeyword_0; }
		
		//sym=[Symbol]
		public Assignment getSymAssignment_1() { return cSymAssignment_1; }
		
		//[Symbol]
		public CrossReference getSymSymbolCrossReference_1_0() { return cSymSymbolCrossReference_1_0; }
		
		//ID
		public RuleCall getSymSymbolIDTerminalRuleCall_1_0_1() { return cSymSymbolIDTerminalRuleCall_1_0_1; }
		
		//"]("
		public Keyword getRightSquareBracketLeftParenthesisKeyword_2() { return cRightSquareBracketLeftParenthesisKeyword_2; }
		
		//expr=Expression
		public Assignment getExprAssignment_3() { return cExprAssignment_3; }
		
		//Expression
		public RuleCall getExprExpressionParserRuleCall_3_0() { return cExprExpressionParserRuleCall_3_0; }
		
		//")"
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
	}
	public class CASL_Macro_PrintElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.CASL_Macro_Print");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPRINTKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cStrAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cStrSTRINGTerminalRuleCall_1_0 = (RuleCall)cStrAssignment_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//CASL_Macro_Print:
		//	"PRINT(" str=STRING ")";
		@Override public ParserRule getRule() { return rule; }
		
		//"PRINT(" str=STRING ")"
		public Group getGroup() { return cGroup; }
		
		//"PRINT("
		public Keyword getPRINTKeyword_0() { return cPRINTKeyword_0; }
		
		//str=STRING
		public Assignment getStrAssignment_1() { return cStrAssignment_1; }
		
		//STRING
		public RuleCall getStrSTRINGTerminalRuleCall_1_0() { return cStrSTRINGTerminalRuleCall_1_0; }
		
		//")"
		public Keyword getRightParenthesisKeyword_2() { return cRightParenthesisKeyword_2; }
	}
	public class CASL_Macro_InitLoggerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.CASL_Macro_InitLogger");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLOGGERKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cMuteAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cMuteBooleanValueParserRuleCall_1_0 = (RuleCall)cMuteAssignment_1.eContents().get(0);
		private final Keyword cCommaKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cToConsoleAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cToConsoleBooleanValueParserRuleCall_3_0 = (RuleCall)cToConsoleAssignment_3.eContents().get(0);
		private final Keyword cCommaKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cToFileAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cToFileBooleanValueParserRuleCall_5_0 = (RuleCall)cToFileAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cFilePathAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cFilePathExpressionParserRuleCall_6_1_0 = (RuleCall)cFilePathAssignment_6_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//CASL_Macro_InitLogger:
		//	"LOGGER(" mute=BooleanValue ',' toConsole=BooleanValue ',' toFile=BooleanValue (',' filePath=Expression)? ')';
		@Override public ParserRule getRule() { return rule; }
		
		//"LOGGER(" mute=BooleanValue ',' toConsole=BooleanValue ',' toFile=BooleanValue (',' filePath=Expression)? ')'
		public Group getGroup() { return cGroup; }
		
		//"LOGGER("
		public Keyword getLOGGERKeyword_0() { return cLOGGERKeyword_0; }
		
		//mute=BooleanValue
		public Assignment getMuteAssignment_1() { return cMuteAssignment_1; }
		
		//BooleanValue
		public RuleCall getMuteBooleanValueParserRuleCall_1_0() { return cMuteBooleanValueParserRuleCall_1_0; }
		
		//','
		public Keyword getCommaKeyword_2() { return cCommaKeyword_2; }
		
		//toConsole=BooleanValue
		public Assignment getToConsoleAssignment_3() { return cToConsoleAssignment_3; }
		
		//BooleanValue
		public RuleCall getToConsoleBooleanValueParserRuleCall_3_0() { return cToConsoleBooleanValueParserRuleCall_3_0; }
		
		//','
		public Keyword getCommaKeyword_4() { return cCommaKeyword_4; }
		
		//toFile=BooleanValue
		public Assignment getToFileAssignment_5() { return cToFileAssignment_5; }
		
		//BooleanValue
		public RuleCall getToFileBooleanValueParserRuleCall_5_0() { return cToFileBooleanValueParserRuleCall_5_0; }
		
		//(',' filePath=Expression)?
		public Group getGroup_6() { return cGroup_6; }
		
		//','
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }
		
		//filePath=Expression
		public Assignment getFilePathAssignment_6_1() { return cFilePathAssignment_6_1; }
		
		//Expression
		public RuleCall getFilePathExpressionParserRuleCall_6_1_0() { return cFilePathExpressionParserRuleCall_6_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_7() { return cRightParenthesisKeyword_7; }
	}
	public class CASL_Macro_LogElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.CASL_Macro_Log");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLOGKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cStrAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cStrSTRINGTerminalRuleCall_1_0 = (RuleCall)cStrAssignment_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//CASL_Macro_Log:
		//	"LOG(" str=STRING ")";
		@Override public ParserRule getRule() { return rule; }
		
		//"LOG(" str=STRING ")"
		public Group getGroup() { return cGroup; }
		
		//"LOG("
		public Keyword getLOGKeyword_0() { return cLOGKeyword_0; }
		
		//str=STRING
		public Assignment getStrAssignment_1() { return cStrAssignment_1; }
		
		//STRING
		public RuleCall getStrSTRINGTerminalRuleCall_1_0() { return cStrSTRINGTerminalRuleCall_1_0; }
		
		//")"
		public Keyword getRightParenthesisKeyword_2() { return cRightParenthesisKeyword_2; }
	}
	public class CASL_Macro_MetricSwitchElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.CASL_Macro_MetricSwitch");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMETRICKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cSwAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cSwBooleanValueParserRuleCall_1_0 = (RuleCall)cSwAssignment_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftParenthesisKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cManualUpdatesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cManualUpdatesExpressionParserRuleCall_3_1_0 = (RuleCall)cManualUpdatesAssignment_3_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		
		////How to deal with model data sending to database and or file
		//CASL_Macro_MetricSwitch:
		//	"METRIC[" sw=BooleanValue "]" ('(' manualUpdates+=Expression ')')?;
		@Override public ParserRule getRule() { return rule; }
		
		//"METRIC[" sw=BooleanValue "]" ('(' manualUpdates+=Expression ')')?
		public Group getGroup() { return cGroup; }
		
		//"METRIC["
		public Keyword getMETRICKeyword_0() { return cMETRICKeyword_0; }
		
		//sw=BooleanValue
		public Assignment getSwAssignment_1() { return cSwAssignment_1; }
		
		//BooleanValue
		public RuleCall getSwBooleanValueParserRuleCall_1_0() { return cSwBooleanValueParserRuleCall_1_0; }
		
		//"]"
		public Keyword getRightSquareBracketKeyword_2() { return cRightSquareBracketKeyword_2; }
		
		//('(' manualUpdates+=Expression ')')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3_0() { return cLeftParenthesisKeyword_3_0; }
		
		//manualUpdates+=Expression
		public Assignment getManualUpdatesAssignment_3_1() { return cManualUpdatesAssignment_3_1; }
		
		//Expression
		public RuleCall getManualUpdatesExpressionParserRuleCall_3_1_0() { return cManualUpdatesExpressionParserRuleCall_3_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3_2() { return cRightParenthesisKeyword_3_2; }
	}
	public class CASL_Macro_TODOElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.CASL_Macro_TODO");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTODOKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cStrAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cStrSTRINGTerminalRuleCall_1_0 = (RuleCall)cStrAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//CASL_Macro_TODO:
		//	"TODO:" str=STRING ';';
		@Override public ParserRule getRule() { return rule; }
		
		//"TODO:" str=STRING ';'
		public Group getGroup() { return cGroup; }
		
		//"TODO:"
		public Keyword getTODOKeyword_0() { return cTODOKeyword_0; }
		
		//str=STRING
		public Assignment getStrAssignment_1() { return cStrAssignment_1; }
		
		//STRING
		public RuleCall getStrSTRINGTerminalRuleCall_1_0() { return cStrSTRINGTerminalRuleCall_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}
	public class CASL_Macro_PopulateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.CASL_Macro_Populate");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPOPULATEKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cLayoutLocationAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cLayoutLocationExpressionParserRuleCall_2_0 = (RuleCall)cLayoutLocationAssignment_2.eContents().get(0);
		private final Keyword cRightSquareBracketLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cLayoutInitParamsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cLayoutInitParamsExpressionParserRuleCall_4_0 = (RuleCall)cLayoutInitParamsAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cLayoutInitParamsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cLayoutInitParamsExpressionParserRuleCall_5_1_0 = (RuleCall)cLayoutInitParamsAssignment_5_1.eContents().get(0);
		private final Keyword cRightParenthesisLeftSquareBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cCountAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cCountExpressionParserRuleCall_7_0 = (RuleCall)cCountAssignment_7.eContents().get(0);
		private final Keyword cCommaKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cEntAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cEntEntity_CallParserRuleCall_9_0 = (RuleCall)cEntAssignment_9.eContents().get(0);
		private final Keyword cRightSquareBracketLeftParenthesisKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cEntityInitParamsAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cEntityInitParamsExpressionParserRuleCall_11_0 = (RuleCall)cEntityInitParamsAssignment_11.eContents().get(0);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cCommaKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Assignment cEntityInitParamsAssignment_12_1 = (Assignment)cGroup_12.eContents().get(1);
		private final RuleCall cEntityInitParamsExpressionParserRuleCall_12_1_0 = (RuleCall)cEntityInitParamsAssignment_12_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_13 = (Keyword)cGroup.eContents().get(13);
		
		////Expression quite the way to do this, maybe it needs to be a heavily scoped function body with some extras?
		////First 2 terms should be the other way around
		////What the call should look like
		///**
		// * 
		// 	CASL.POPULATE[LAYOUT](Layout init params)[ENTITY](Entity init params);
		// 	* LAYOUT: should be a reference to a LAYOUT type 
		// 	* Layout init params: infinite list of expressions that matches the layouts init function
		// 	* ENTITY: Should be a type of entity that exists in the model
		// 	* Entity init params: infinite list of expressions that matches the entities init parameters
		//*/ CASL_Macro_Populate:
		//	"POPULATE" '[' layoutLocation=Expression '](' layoutInitParams+=Expression? (',' layoutInitParams+=Expression)* ')['
		//	count=Expression ',' ent=Entity_Call '](' entityInitParams+=Expression? (',' entityInitParams+=Expression)* ')';
		@Override public ParserRule getRule() { return rule; }
		
		//"POPULATE" '[' layoutLocation=Expression '](' layoutInitParams+=Expression? (',' layoutInitParams+=Expression)* ')['
		//count=Expression ',' ent=Entity_Call '](' entityInitParams+=Expression? (',' entityInitParams+=Expression)* ')'
		public Group getGroup() { return cGroup; }
		
		//"POPULATE"
		public Keyword getPOPULATEKeyword_0() { return cPOPULATEKeyword_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }
		
		//layoutLocation=Expression
		public Assignment getLayoutLocationAssignment_2() { return cLayoutLocationAssignment_2; }
		
		//Expression
		public RuleCall getLayoutLocationExpressionParserRuleCall_2_0() { return cLayoutLocationExpressionParserRuleCall_2_0; }
		
		//']('
		public Keyword getRightSquareBracketLeftParenthesisKeyword_3() { return cRightSquareBracketLeftParenthesisKeyword_3; }
		
		//layoutInitParams+=Expression?
		public Assignment getLayoutInitParamsAssignment_4() { return cLayoutInitParamsAssignment_4; }
		
		//Expression
		public RuleCall getLayoutInitParamsExpressionParserRuleCall_4_0() { return cLayoutInitParamsExpressionParserRuleCall_4_0; }
		
		//(',' layoutInitParams+=Expression)*
		public Group getGroup_5() { return cGroup_5; }
		
		//','
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }
		
		//layoutInitParams+=Expression
		public Assignment getLayoutInitParamsAssignment_5_1() { return cLayoutInitParamsAssignment_5_1; }
		
		//Expression
		public RuleCall getLayoutInitParamsExpressionParserRuleCall_5_1_0() { return cLayoutInitParamsExpressionParserRuleCall_5_1_0; }
		
		//')['
		public Keyword getRightParenthesisLeftSquareBracketKeyword_6() { return cRightParenthesisLeftSquareBracketKeyword_6; }
		
		//count=Expression
		public Assignment getCountAssignment_7() { return cCountAssignment_7; }
		
		//Expression
		public RuleCall getCountExpressionParserRuleCall_7_0() { return cCountExpressionParserRuleCall_7_0; }
		
		//','
		public Keyword getCommaKeyword_8() { return cCommaKeyword_8; }
		
		//ent=Entity_Call
		public Assignment getEntAssignment_9() { return cEntAssignment_9; }
		
		//Entity_Call
		public RuleCall getEntEntity_CallParserRuleCall_9_0() { return cEntEntity_CallParserRuleCall_9_0; }
		
		//']('
		public Keyword getRightSquareBracketLeftParenthesisKeyword_10() { return cRightSquareBracketLeftParenthesisKeyword_10; }
		
		//entityInitParams+=Expression?
		public Assignment getEntityInitParamsAssignment_11() { return cEntityInitParamsAssignment_11; }
		
		//Expression
		public RuleCall getEntityInitParamsExpressionParserRuleCall_11_0() { return cEntityInitParamsExpressionParserRuleCall_11_0; }
		
		//(',' entityInitParams+=Expression)*
		public Group getGroup_12() { return cGroup_12; }
		
		//','
		public Keyword getCommaKeyword_12_0() { return cCommaKeyword_12_0; }
		
		//entityInitParams+=Expression
		public Assignment getEntityInitParamsAssignment_12_1() { return cEntityInitParamsAssignment_12_1; }
		
		//Expression
		public RuleCall getEntityInitParamsExpressionParserRuleCall_12_1_0() { return cEntityInitParamsExpressionParserRuleCall_12_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_13() { return cRightParenthesisKeyword_13; }
	}
	public class CASL_Macro_VisualizeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.CASL_Macro_Visualize");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cVISUALIZEKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cProjectionPositionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cProjectionPositionExpressionParserRuleCall_2_0 = (RuleCall)cProjectionPositionAssignment_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cProjectionColourUpdaterAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cProjectionColourUpdaterExpressionParserRuleCall_5_0 = (RuleCall)cProjectionColourUpdaterAssignment_5.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cLeftSquareBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cProjectionShapeAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cProjectionShapeSTRINGTerminalRuleCall_8_0 = (RuleCall)cProjectionShapeAssignment_8.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		////TODO: Fill this out
		///**
		// * CASL.VISUALIZE[ProjectionPosition][ProjectionColourUpdater (how to manage this for diff var types)]
		// [ProjectionShapeUpdater (same as above)]
		// * When this is called, the agent will appear in the simulation
		// * 
		// *
		// */ CASL_Macro_Visualize:
		//	"VISUALIZE" '[' projectionPosition=Expression ']' '[' projectionColourUpdater=Expression ']' '['
		//	projectionShape=STRING ']';
		@Override public ParserRule getRule() { return rule; }
		
		//"VISUALIZE" '[' projectionPosition=Expression ']' '[' projectionColourUpdater=Expression ']' '[' projectionShape=STRING
		//']'
		public Group getGroup() { return cGroup; }
		
		//"VISUALIZE"
		public Keyword getVISUALIZEKeyword_0() { return cVISUALIZEKeyword_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }
		
		//projectionPosition=Expression
		public Assignment getProjectionPositionAssignment_2() { return cProjectionPositionAssignment_2; }
		
		//Expression
		public RuleCall getProjectionPositionExpressionParserRuleCall_2_0() { return cProjectionPositionExpressionParserRuleCall_2_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_3() { return cRightSquareBracketKeyword_3; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_4() { return cLeftSquareBracketKeyword_4; }
		
		//projectionColourUpdater=Expression
		public Assignment getProjectionColourUpdaterAssignment_5() { return cProjectionColourUpdaterAssignment_5; }
		
		//Expression
		public RuleCall getProjectionColourUpdaterExpressionParserRuleCall_5_0() { return cProjectionColourUpdaterExpressionParserRuleCall_5_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_6() { return cRightSquareBracketKeyword_6; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_7() { return cLeftSquareBracketKeyword_7; }
		
		//projectionShape=STRING
		public Assignment getProjectionShapeAssignment_8() { return cProjectionShapeAssignment_8; }
		
		//STRING
		public RuleCall getProjectionShapeSTRINGTerminalRuleCall_8_0() { return cProjectionShapeSTRINGTerminalRuleCall_8_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_9() { return cRightSquareBracketKeyword_9; }
	}
	public class CASL_Macro_DisplayElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.CASL_Macro_Display");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDISPLAYKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cRepresentationTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cRepresentationTypeWorldTypeEnumRuleCall_2_0 = (RuleCall)cRepresentationTypeAssignment_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cToProjectAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cToProjectExpressionParserRuleCall_5_0 = (RuleCall)cToProjectAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cToProjectAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cToProjectExpressionParserRuleCall_6_1_0 = (RuleCall)cToProjectAssignment_6_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		////So this doesn't quite work.
		////We need to visualise the environment (or group) and then configure how the entities contained within are visualized
		////The LayoutParameters object could contain some useful feautres (or at least be used to convey things)
		////LayoutParameters.layoutType gives us A LOT of useful info (this means we'd have to have a special generator for each rep type)
		////Should there be 2 visualize call types: 1 for env, 1 for grp/agt?
		////This takes the ENUM representationType stored in LayoutParameter, this means there'll have to be some degree of validation
		////& scoping (probably)
		////It takes the representationType and then a list of layouts to project (they all have to be the same type as the repType?
		////Solution:
		//CASL_Macro_Display:
		//	"DISPLAY" '[' representationType=WorldType ']' '(' toProject+=Expression (',' toProject+=Expression)? ')';
		@Override public ParserRule getRule() { return rule; }
		
		//"DISPLAY" '[' representationType=WorldType ']' '(' toProject+=Expression (',' toProject+=Expression)? ')'
		public Group getGroup() { return cGroup; }
		
		//"DISPLAY"
		public Keyword getDISPLAYKeyword_0() { return cDISPLAYKeyword_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }
		
		//representationType=WorldType
		public Assignment getRepresentationTypeAssignment_2() { return cRepresentationTypeAssignment_2; }
		
		//WorldType
		public RuleCall getRepresentationTypeWorldTypeEnumRuleCall_2_0() { return cRepresentationTypeWorldTypeEnumRuleCall_2_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_3() { return cRightSquareBracketKeyword_3; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_4() { return cLeftParenthesisKeyword_4; }
		
		//toProject+=Expression
		public Assignment getToProjectAssignment_5() { return cToProjectAssignment_5; }
		
		//Expression
		public RuleCall getToProjectExpressionParserRuleCall_5_0() { return cToProjectExpressionParserRuleCall_5_0; }
		
		//(',' toProject+=Expression)?
		public Group getGroup_6() { return cGroup_6; }
		
		//','
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }
		
		//toProject+=Expression
		public Assignment getToProjectAssignment_6_1() { return cToProjectAssignment_6_1; }
		
		//Expression
		public RuleCall getToProjectExpressionParserRuleCall_6_1_0() { return cToProjectExpressionParserRuleCall_6_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_7() { return cRightParenthesisKeyword_7; }
	}
	public class Raw_Java_BlockElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.Raw_Java_Block");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRaw_Java_BlockAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cRawJavaKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cRawStatementsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cRawStatementsRaw_JavaParserRuleCall_5_0 = (RuleCall)cRawStatementsAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		///*****Java 8-isms *****/ /*
		// * We could also have a class that parses raw Java functions with
		// * wildcards etc
		// */ Raw_Java_Block:
		//	{Raw_Java_Block}
		//	"raw-java" name=ID ':' '{'
		//	rawStatements+=Raw_Java*
		//	//		rj = Raw_Java
		//	"}";
		@Override public ParserRule getRule() { return rule; }
		
		//{Raw_Java_Block} "raw-java" name=ID ':' '{' rawStatements+=Raw_Java* //		rj = Raw_Java
		//"}"
		public Group getGroup() { return cGroup; }
		
		//{Raw_Java_Block}
		public Action getRaw_Java_BlockAction_0() { return cRaw_Java_BlockAction_0; }
		
		//"raw-java"
		public Keyword getRawJavaKeyword_1() { return cRawJavaKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//rawStatements+=Raw_Java*
		public Assignment getRawStatementsAssignment_5() { return cRawStatementsAssignment_5; }
		
		//Raw_Java
		public RuleCall getRawStatementsRaw_JavaParserRuleCall_5_0() { return cRawStatementsRaw_JavaParserRuleCall_5_0; }
		
		////		rj = Raw_Java
		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class Raw_JavaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.Raw_Java");
		private final RuleCall cSTRINGTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		////Raw_Java: => text += (ID|ANY_OTHER)+;
		//Raw_Java:
		//	STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall() { return cSTRINGTerminalRuleCall; }
	}
	public class FeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.Feature");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cTypeTypeCrossReference_0_0 = (CrossReference)cTypeAssignment_0.eContents().get(0);
		private final RuleCall cTypeTypeQualifiedNameParserRuleCall_0_0_1 = (RuleCall)cTypeTypeCrossReference_0_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cNameAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_1_0 = (RuleCall)cNameAssignment_1_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cEqualsSignKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cValAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cValAbstractElementParserRuleCall_2_1_0 = (RuleCall)cValAssignment_2_1.eContents().get(0);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Keyword cSemicolonKeyword_3_0 = (Keyword)cAlternatives_3.eContents().get(0);
		private final Keyword cCommaKeyword_3_1 = (Keyword)cAlternatives_3.eContents().get(1);
		
		///**
		// * What exactly does this do?
		// */ Feature:
		//	type=[Type|QualifiedName] (':' name=ID)? ('=' val=AbstractElement)? (';' | ',');
		@Override public ParserRule getRule() { return rule; }
		
		//type=[Type|QualifiedName] (':' name=ID)? ('=' val=AbstractElement)? (';' | ',')
		public Group getGroup() { return cGroup; }
		
		//type=[Type|QualifiedName]
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }
		
		//[Type|QualifiedName]
		public CrossReference getTypeTypeCrossReference_0_0() { return cTypeTypeCrossReference_0_0; }
		
		//QualifiedName
		public RuleCall getTypeTypeQualifiedNameParserRuleCall_0_0_1() { return cTypeTypeQualifiedNameParserRuleCall_0_0_1; }
		
		//(':' name=ID)?
		public Group getGroup_1() { return cGroup_1; }
		
		//':'
		public Keyword getColonKeyword_1_0() { return cColonKeyword_1_0; }
		
		//name=ID
		public Assignment getNameAssignment_1_1() { return cNameAssignment_1_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_1_0() { return cNameIDTerminalRuleCall_1_1_0; }
		
		//('=' val=AbstractElement)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'='
		public Keyword getEqualsSignKeyword_2_0() { return cEqualsSignKeyword_2_0; }
		
		//val=AbstractElement
		public Assignment getValAssignment_2_1() { return cValAssignment_2_1; }
		
		//AbstractElement
		public RuleCall getValAbstractElementParserRuleCall_2_1_0() { return cValAbstractElementParserRuleCall_2_1_0; }
		
		//';' | ','
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//';'
		public Keyword getSemicolonKeyword_3_0() { return cSemicolonKeyword_3_0; }
		
		//','
		public Keyword getCommaKeyword_3_1() { return cCommaKeyword_3_1; }
	}
	public class AbstractElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.AbstractElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPackageDeclarationParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cNonPrimitiveTypeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cImportParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		///**
		// * Imports, reusables, commons, etc...
		// */ AbstractElement:
		//	PackageDeclaration | NonPrimitiveType | Import //| GenericFunction
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//PackageDeclaration | NonPrimitiveType | Import
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//PackageDeclaration
		public RuleCall getPackageDeclarationParserRuleCall_0() { return cPackageDeclarationParserRuleCall_0; }
		
		//NonPrimitiveType
		public RuleCall getNonPrimitiveTypeParserRuleCall_1() { return cNonPrimitiveTypeParserRuleCall_1; }
		
		//Import
		public RuleCall getImportParserRuleCall_2() { return cImportParserRuleCall_2; }
	}
	public class PackageDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.PackageDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPackageKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameQualifiedNameParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cElementsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cElementsAbstractElementParserRuleCall_4_0 = (RuleCall)cElementsAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//PackageDeclaration:
		//	'package' name=QualifiedName ':' '{'
		//	elements+=AbstractElement*
		//	'};';
		@Override public ParserRule getRule() { return rule; }
		
		//'package' name=QualifiedName ':' '{' elements+=AbstractElement* '};'
		public Group getGroup() { return cGroup; }
		
		//'package'
		public Keyword getPackageKeyword_0() { return cPackageKeyword_0; }
		
		//name=QualifiedName
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//QualifiedName
		public RuleCall getNameQualifiedNameParserRuleCall_1_0() { return cNameQualifiedNameParserRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//elements+=AbstractElement*
		public Assignment getElementsAssignment_4() { return cElementsAssignment_4; }
		
		//AbstractElement
		public RuleCall getElementsAbstractElementParserRuleCall_4_0() { return cElementsAbstractElementParserRuleCall_4_0; }
		
		//'};'
		public Keyword getRightCurlyBracketSemicolonKeyword_5() { return cRightCurlyBracketSemicolonKeyword_5; }
	}
	public class QualifiedNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.QualifiedName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//QualifiedName:
		//	ID ('.' ID)*;
		@Override public ParserRule getRule() { return rule; }
		
		//ID ('.' ID)*
		public Group getGroup() { return cGroup; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }
		
		//('.' ID)*
		public Group getGroup_1() { return cGroup_1; }
		
		//'.'
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}
	public class QualifiedNameCallElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.QualifiedNameCall");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cFullStopKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_0_1 = (RuleCall)cGroup_1_0.eContents().get(1);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final RuleCall cQualifiedNameCallParserRuleCall_1_1_1 = (RuleCall)cGroup_1_1.eContents().get(1);
		private final Group cGroup_1_1_2 = (Group)cGroup_1_1.eContents().get(2);
		private final Keyword cCommaKeyword_1_1_2_0 = (Keyword)cGroup_1_1_2.eContents().get(0);
		private final RuleCall cQualifiedNameCallParserRuleCall_1_1_2_1 = (RuleCall)cGroup_1_1_2.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_1_1_3 = (Keyword)cGroup_1_1.eContents().get(3);
		private final Keyword cFullStopLeftParenthesisRightParenthesisKeyword_1_2 = (Keyword)cAlternatives_1.eContents().get(2);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_1_3 = (Keyword)cAlternatives_1.eContents().get(3);
		
		//QualifiedNameCall:
		//	ID ('.' ID | '(' QualifiedNameCall (',' QualifiedNameCall)* ')' | '.()' | '->')*;
		@Override public ParserRule getRule() { return rule; }
		
		//ID ('.' ID | '(' QualifiedNameCall (',' QualifiedNameCall)* ')' | '.()' | '->')*
		public Group getGroup() { return cGroup; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }
		
		//('.' ID | '(' QualifiedNameCall (',' QualifiedNameCall)* ')' | '.()' | '->')*
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//'.' ID
		public Group getGroup_1_0() { return cGroup_1_0; }
		
		//'.'
		public Keyword getFullStopKeyword_1_0_0() { return cFullStopKeyword_1_0_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1_0_1() { return cIDTerminalRuleCall_1_0_1; }
		
		//'(' QualifiedNameCall (',' QualifiedNameCall)* ')'
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1_1_0() { return cLeftParenthesisKeyword_1_1_0; }
		
		//QualifiedNameCall
		public RuleCall getQualifiedNameCallParserRuleCall_1_1_1() { return cQualifiedNameCallParserRuleCall_1_1_1; }
		
		//(',' QualifiedNameCall)*
		public Group getGroup_1_1_2() { return cGroup_1_1_2; }
		
		//','
		public Keyword getCommaKeyword_1_1_2_0() { return cCommaKeyword_1_1_2_0; }
		
		//QualifiedNameCall
		public RuleCall getQualifiedNameCallParserRuleCall_1_1_2_1() { return cQualifiedNameCallParserRuleCall_1_1_2_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_1_1_3() { return cRightParenthesisKeyword_1_1_3; }
		
		//'.()'
		public Keyword getFullStopLeftParenthesisRightParenthesisKeyword_1_2() { return cFullStopLeftParenthesisRightParenthesisKeyword_1_2; }
		
		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_1_3() { return cHyphenMinusGreaterThanSignKeyword_1_3; }
	}
	public class ImportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.Import");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cImportKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cImportedNamespaceAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0 = (RuleCall)cImportedNamespaceAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//Import:
		//	'import' importedNamespace=QualifiedNameWithWildcard ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'import' importedNamespace=QualifiedNameWithWildcard ';'
		public Group getGroup() { return cGroup; }
		
		//'import'
		public Keyword getImportKeyword_0() { return cImportKeyword_0; }
		
		//importedNamespace=QualifiedNameWithWildcard
		public Assignment getImportedNamespaceAssignment_1() { return cImportedNamespaceAssignment_1; }
		
		//QualifiedNameWithWildcard
		public RuleCall getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0() { return cImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}
	public class QualifiedNameWithWildcardElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.QualifiedNameWithWildcard");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cQualifiedNameParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cFullStopAsteriskKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//QualifiedNameWithWildcard:
		//	QualifiedName '.*'?;
		@Override public ParserRule getRule() { return rule; }
		
		//QualifiedName '.*'?
		public Group getGroup() { return cGroup; }
		
		//QualifiedName
		public RuleCall getQualifiedNameParserRuleCall_0() { return cQualifiedNameParserRuleCall_0; }
		
		//'.*'?
		public Keyword getFullStopAsteriskKeyword_1() { return cFullStopAsteriskKeyword_1; }
	}
	
	public class Environment_AttributeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.Environment_Attribute");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cVIRTUALEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cVIRTUALVirtualKeyword_0_0 = (Keyword)cVIRTUALEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cPHYSICALEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cPHYSICALPhysicalKeyword_1_0 = (Keyword)cPHYSICALEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum Environment_Attribute:
		//	VIRTUAL='virtual' | PHYSICAL='physical';
		public EnumRule getRule() { return rule; }
		
		//VIRTUAL='virtual' | PHYSICAL='physical'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//VIRTUAL='virtual'
		public EnumLiteralDeclaration getVIRTUALEnumLiteralDeclaration_0() { return cVIRTUALEnumLiteralDeclaration_0; }
		
		//'virtual'
		public Keyword getVIRTUALVirtualKeyword_0_0() { return cVIRTUALVirtualKeyword_0_0; }
		
		//PHYSICAL='physical'
		public EnumLiteralDeclaration getPHYSICALEnumLiteralDeclaration_1() { return cPHYSICALEnumLiteralDeclaration_1; }
		
		//'physical'
		public Keyword getPHYSICALPhysicalKeyword_1_0() { return cPHYSICALPhysicalKeyword_1_0; }
	}
	public class Environment_TypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.Environment_Type");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cIMPLICITEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cIMPLICITImplicitKeyword_0_0 = (Keyword)cIMPLICITEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cEXPLICITEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cEXPLICITExplicitKeyword_1_0 = (Keyword)cEXPLICITEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum Environment_Type:
		//	IMPLICIT='implicit' | EXPLICIT='explicit';
		public EnumRule getRule() { return rule; }
		
		//IMPLICIT='implicit' | EXPLICIT='explicit'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//IMPLICIT='implicit'
		public EnumLiteralDeclaration getIMPLICITEnumLiteralDeclaration_0() { return cIMPLICITEnumLiteralDeclaration_0; }
		
		//'implicit'
		public Keyword getIMPLICITImplicitKeyword_0_0() { return cIMPLICITImplicitKeyword_0_0; }
		
		//EXPLICIT='explicit'
		public EnumLiteralDeclaration getEXPLICITEnumLiteralDeclaration_1() { return cEXPLICITEnumLiteralDeclaration_1; }
		
		//'explicit'
		public Keyword getEXPLICITExplicitKeyword_1_0() { return cEXPLICITExplicitKeyword_1_0; }
	}
	public class EndConditionTypesElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.EndConditionTypes");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSTEPSEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSTEPSSTEPSKeyword_0_0 = (Keyword)cSTEPSEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cPARAMETEREnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cPARAMETERPARAMETERKeyword_1_0 = (Keyword)cPARAMETEREnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cSTATEEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cSTATESTATEKeyword_2_0 = (Keyword)cSTATEEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum EndConditionTypes:
		//	STEPS | PARAMETER | STATE;
		public EnumRule getRule() { return rule; }
		
		//STEPS | PARAMETER | STATE
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STEPS
		public EnumLiteralDeclaration getSTEPSEnumLiteralDeclaration_0() { return cSTEPSEnumLiteralDeclaration_0; }
		
		//"STEPS"
		public Keyword getSTEPSSTEPSKeyword_0_0() { return cSTEPSSTEPSKeyword_0_0; }
		
		//PARAMETER
		public EnumLiteralDeclaration getPARAMETEREnumLiteralDeclaration_1() { return cPARAMETEREnumLiteralDeclaration_1; }
		
		//"PARAMETER"
		public Keyword getPARAMETERPARAMETERKeyword_1_0() { return cPARAMETERPARAMETERKeyword_1_0; }
		
		//STATE
		public EnumLiteralDeclaration getSTATEEnumLiteralDeclaration_2() { return cSTATEEnumLiteralDeclaration_2; }
		
		//"STATE"
		public Keyword getSTATESTATEKeyword_2_0() { return cSTATESTATEKeyword_2_0; }
	}
	public class CAS_Rule_TypesElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.CAS_Rule_Types");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSTRICTEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSTRICTStrictKeyword_0_0 = (Keyword)cSTRICTEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cLENIENTEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cLENIENTLenientKeyword_1_0 = (Keyword)cLENIENTEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum CAS_Rule_Types:
		//	STRICT='strict' | LENIENT='lenient';
		public EnumRule getRule() { return rule; }
		
		//STRICT='strict' | LENIENT='lenient'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRICT='strict'
		public EnumLiteralDeclaration getSTRICTEnumLiteralDeclaration_0() { return cSTRICTEnumLiteralDeclaration_0; }
		
		//'strict'
		public Keyword getSTRICTStrictKeyword_0_0() { return cSTRICTStrictKeyword_0_0; }
		
		//LENIENT='lenient'
		public EnumLiteralDeclaration getLENIENTEnumLiteralDeclaration_1() { return cLENIENTEnumLiteralDeclaration_1; }
		
		//'lenient'
		public Keyword getLENIENTLenientKeyword_1_0() { return cLENIENTLenientKeyword_1_0; }
	}
	public class CAS_Rule_ExceptionElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.CAS_Rule_Exception");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cMODULARITYEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cMODULARITYModularityKeyword_0_0 = (Keyword)cMODULARITYEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cDIVERSITYEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cDIVERSITYDiversityKeyword_1_0 = (Keyword)cDIVERSITYEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cNONEEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cNONENoneKeyword_2_0 = (Keyword)cNONEEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cADAPTATIONEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cADAPTATIONAdaptationKeyword_3_0 = (Keyword)cADAPTATIONEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum CAS_Rule_Exception:
		//	MODULARITY='modularity' | DIVERSITY='diversity' | NONE='none' | ADAPTATION="adaptation";
		public EnumRule getRule() { return rule; }
		
		//MODULARITY='modularity' | DIVERSITY='diversity' | NONE='none' | ADAPTATION="adaptation"
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//MODULARITY='modularity'
		public EnumLiteralDeclaration getMODULARITYEnumLiteralDeclaration_0() { return cMODULARITYEnumLiteralDeclaration_0; }
		
		//'modularity'
		public Keyword getMODULARITYModularityKeyword_0_0() { return cMODULARITYModularityKeyword_0_0; }
		
		//DIVERSITY='diversity'
		public EnumLiteralDeclaration getDIVERSITYEnumLiteralDeclaration_1() { return cDIVERSITYEnumLiteralDeclaration_1; }
		
		//'diversity'
		public Keyword getDIVERSITYDiversityKeyword_1_0() { return cDIVERSITYDiversityKeyword_1_0; }
		
		//NONE='none'
		public EnumLiteralDeclaration getNONEEnumLiteralDeclaration_2() { return cNONEEnumLiteralDeclaration_2; }
		
		//'none'
		public Keyword getNONENoneKeyword_2_0() { return cNONENoneKeyword_2_0; }
		
		//ADAPTATION="adaptation"
		public EnumLiteralDeclaration getADAPTATIONEnumLiteralDeclaration_3() { return cADAPTATIONEnumLiteralDeclaration_3; }
		
		//"adaptation"
		public Keyword getADAPTATIONAdaptationKeyword_3_0() { return cADAPTATIONAdaptationKeyword_3_0; }
	}
	public class CAS_Inspection_LevelElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.CAS_Inspection_Level");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSTRONGEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSTRONGStrongKeyword_0_0 = (Keyword)cSTRONGEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cWEAKEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cWEAKWeakKeyword_1_0 = (Keyword)cWEAKEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cNONEEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cNONENoneKeyword_2_0 = (Keyword)cNONEEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum CAS_Inspection_Level:
		//	STRONG='strong' | WEAK='weak' | NONE='none';
		public EnumRule getRule() { return rule; }
		
		//STRONG='strong' | WEAK='weak' | NONE='none'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRONG='strong'
		public EnumLiteralDeclaration getSTRONGEnumLiteralDeclaration_0() { return cSTRONGEnumLiteralDeclaration_0; }
		
		//'strong'
		public Keyword getSTRONGStrongKeyword_0_0() { return cSTRONGStrongKeyword_0_0; }
		
		//WEAK='weak'
		public EnumLiteralDeclaration getWEAKEnumLiteralDeclaration_1() { return cWEAKEnumLiteralDeclaration_1; }
		
		//'weak'
		public Keyword getWEAKWeakKeyword_1_0() { return cWEAKWeakKeyword_1_0; }
		
		//NONE='none'
		public EnumLiteralDeclaration getNONEEnumLiteralDeclaration_2() { return cNONEEnumLiteralDeclaration_2; }
		
		//'none'
		public Keyword getNONENoneKeyword_2_0() { return cNONENoneKeyword_2_0; }
	}
	public class CAS_Semantic_Group_SwitchElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.CAS_Semantic_Group_Switch");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cENABLEEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cENABLEEnableKeyword_0_0 = (Keyword)cENABLEEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cDISABLEEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cDISABLEDisableKeyword_1_0 = (Keyword)cDISABLEEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum CAS_Semantic_Group_Switch:
		//	ENABLE='enable' | DISABLE="disable";
		public EnumRule getRule() { return rule; }
		
		//ENABLE='enable' | DISABLE="disable"
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ENABLE='enable'
		public EnumLiteralDeclaration getENABLEEnumLiteralDeclaration_0() { return cENABLEEnumLiteralDeclaration_0; }
		
		//'enable'
		public Keyword getENABLEEnableKeyword_0_0() { return cENABLEEnableKeyword_0_0; }
		
		//DISABLE="disable"
		public EnumLiteralDeclaration getDISABLEEnumLiteralDeclaration_1() { return cDISABLEEnumLiteralDeclaration_1; }
		
		//"disable"
		public Keyword getDISABLEDisableKeyword_1_0() { return cDISABLEDisableKeyword_1_0; }
	}
	public class Transmission_PhaseElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.Transmission_Phase");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSETUPEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSETUPSETUPKeyword_0_0 = (Keyword)cSETUPEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cACTIONEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cACTIONACTIONKeyword_1_0 = (Keyword)cACTIONEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cCLEANUPEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cCLEANUPCLEANUPKeyword_2_0 = (Keyword)cCLEANUPEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum Transmission_Phase:
		//	SETUP | ACTION | CLEANUP;
		public EnumRule getRule() { return rule; }
		
		//SETUP | ACTION | CLEANUP
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SETUP
		public EnumLiteralDeclaration getSETUPEnumLiteralDeclaration_0() { return cSETUPEnumLiteralDeclaration_0; }
		
		//"SETUP"
		public Keyword getSETUPSETUPKeyword_0_0() { return cSETUPSETUPKeyword_0_0; }
		
		//ACTION
		public EnumLiteralDeclaration getACTIONEnumLiteralDeclaration_1() { return cACTIONEnumLiteralDeclaration_1; }
		
		//"ACTION"
		public Keyword getACTIONACTIONKeyword_1_0() { return cACTIONACTIONKeyword_1_0; }
		
		//CLEANUP
		public EnumLiteralDeclaration getCLEANUPEnumLiteralDeclaration_2() { return cCLEANUPEnumLiteralDeclaration_2; }
		
		//"CLEANUP"
		public Keyword getCLEANUPCLEANUPKeyword_2_0() { return cCLEANUPCLEANUPKeyword_2_0; }
	}
	public class Transmission_ContentsElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.Transmission_Contents");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSTATEEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSTATESTATEKeyword_0_0 = (Keyword)cSTATEEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cAGENTEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cAGENTAGENTKeyword_1_0 = (Keyword)cAGENTEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum Transmission_Contents:
		//	STATE | AGENT;
		public EnumRule getRule() { return rule; }
		
		//STATE | AGENT
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STATE
		public EnumLiteralDeclaration getSTATEEnumLiteralDeclaration_0() { return cSTATEEnumLiteralDeclaration_0; }
		
		//"STATE"
		public Keyword getSTATESTATEKeyword_0_0() { return cSTATESTATEKeyword_0_0; }
		
		//AGENT
		public EnumLiteralDeclaration getAGENTEnumLiteralDeclaration_1() { return cAGENTEnumLiteralDeclaration_1; }
		
		//"AGENT"
		public Keyword getAGENTAGENTKeyword_1_0() { return cAGENTAGENTKeyword_1_0; }
	}
	public class Transmission_RepeatElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.Transmission_Repeat");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cREPEATEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cREPEATREPEATKeyword_0_0 = (Keyword)cREPEATEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cSINGLEEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cSINGLESINGLEKeyword_1_0 = (Keyword)cSINGLEEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cCALLEDEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cCALLEDCALLEDKeyword_2_0 = (Keyword)cCALLEDEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum Transmission_Repeat:
		//	REPEAT | SINGLE | CALLED;
		public EnumRule getRule() { return rule; }
		
		//REPEAT | SINGLE | CALLED
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//REPEAT
		public EnumLiteralDeclaration getREPEATEnumLiteralDeclaration_0() { return cREPEATEnumLiteralDeclaration_0; }
		
		//"REPEAT"
		public Keyword getREPEATREPEATKeyword_0_0() { return cREPEATREPEATKeyword_0_0; }
		
		//SINGLE
		public EnumLiteralDeclaration getSINGLEEnumLiteralDeclaration_1() { return cSINGLEEnumLiteralDeclaration_1; }
		
		//"SINGLE"
		public Keyword getSINGLESINGLEKeyword_1_0() { return cSINGLESINGLEKeyword_1_0; }
		
		//CALLED
		public EnumLiteralDeclaration getCALLEDEnumLiteralDeclaration_2() { return cCALLEDEnumLiteralDeclaration_2; }
		
		//"CALLED"
		public Keyword getCALLEDCALLEDKeyword_2_0() { return cCALLEDCALLEDKeyword_2_0; }
	}
	public class BehaviorTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.BehaviorType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSELFEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSELFSELFKeyword_0_0 = (Keyword)cSELFEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cAFFECTEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cAFFECTAFFECTKeyword_1_0 = (Keyword)cAFFECTEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum BehaviorType:
		//	SELF | AFFECT;
		public EnumRule getRule() { return rule; }
		
		//SELF | AFFECT
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SELF
		public EnumLiteralDeclaration getSELFEnumLiteralDeclaration_0() { return cSELFEnumLiteralDeclaration_0; }
		
		//"SELF"
		public Keyword getSELFSELFKeyword_0_0() { return cSELFSELFKeyword_0_0; }
		
		//AFFECT
		public EnumLiteralDeclaration getAFFECTEnumLiteralDeclaration_1() { return cAFFECTEnumLiteralDeclaration_1; }
		
		//"AFFECT"
		public Keyword getAFFECTAFFECTKeyword_1_0() { return cAFFECTAFFECTKeyword_1_0; }
	}
	public class BehaviorReactionTimeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.BehaviorReactionTime");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cINSTANTEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cINSTANTINSTANTKeyword_0_0 = (Keyword)cINSTANTEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cDELAYEDEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cDELAYEDDELAYEDKeyword_1_0 = (Keyword)cDELAYEDEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cSTEPEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cSTEPSTEPKeyword_2_0 = (Keyword)cSTEPEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cREPEATEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cREPEATREPEATKeyword_3_0 = (Keyword)cREPEATEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum BehaviorReactionTime:
		//	INSTANT | DELAYED | STEP | REPEAT;
		public EnumRule getRule() { return rule; }
		
		//INSTANT | DELAYED | STEP | REPEAT
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//INSTANT
		public EnumLiteralDeclaration getINSTANTEnumLiteralDeclaration_0() { return cINSTANTEnumLiteralDeclaration_0; }
		
		//"INSTANT"
		public Keyword getINSTANTINSTANTKeyword_0_0() { return cINSTANTINSTANTKeyword_0_0; }
		
		//DELAYED
		public EnumLiteralDeclaration getDELAYEDEnumLiteralDeclaration_1() { return cDELAYEDEnumLiteralDeclaration_1; }
		
		//"DELAYED"
		public Keyword getDELAYEDDELAYEDKeyword_1_0() { return cDELAYEDDELAYEDKeyword_1_0; }
		
		//STEP
		public EnumLiteralDeclaration getSTEPEnumLiteralDeclaration_2() { return cSTEPEnumLiteralDeclaration_2; }
		
		//"STEP"
		public Keyword getSTEPSTEPKeyword_2_0() { return cSTEPSTEPKeyword_2_0; }
		
		//REPEAT
		public EnumLiteralDeclaration getREPEATEnumLiteralDeclaration_3() { return cREPEATEnumLiteralDeclaration_3; }
		
		//"REPEAT"
		public Keyword getREPEATREPEATKeyword_3_0() { return cREPEATREPEATKeyword_3_0; }
	}
	public class LayoutTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.LayoutType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cGRIDEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cGRIDGRIDKeyword_0_0 = (Keyword)cGRIDEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cTORUSEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cTORUSTORUSKeyword_1_0 = (Keyword)cTORUSEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cBOUNDEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cBOUNDBOUNDKeyword_2_0 = (Keyword)cBOUNDEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cGRAPHEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cGRAPHGRAPHKeyword_3_0 = (Keyword)cGRAPHEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cNETWORKEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cNETWORKNETWORKKeyword_4_0 = (Keyword)cNETWORKEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cGISEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cGISGISKeyword_5_0 = (Keyword)cGISEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cMESH3DEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cMESH3DMESH3DKeyword_6_0 = (Keyword)cMESH3DEnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cCONTINUOUSEnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cCONTINUOUSCONTINUOUSKeyword_7_0 = (Keyword)cCONTINUOUSEnumLiteralDeclaration_7.eContents().get(0);
		
		//enum LayoutType:
		//	GRID | TORUS | BOUND | GRAPH | NETWORK | GIS | MESH3D | CONTINUOUS;
		public EnumRule getRule() { return rule; }
		
		//GRID | TORUS | BOUND | GRAPH | NETWORK | GIS | MESH3D | CONTINUOUS
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//GRID
		public EnumLiteralDeclaration getGRIDEnumLiteralDeclaration_0() { return cGRIDEnumLiteralDeclaration_0; }
		
		//"GRID"
		public Keyword getGRIDGRIDKeyword_0_0() { return cGRIDGRIDKeyword_0_0; }
		
		//TORUS
		public EnumLiteralDeclaration getTORUSEnumLiteralDeclaration_1() { return cTORUSEnumLiteralDeclaration_1; }
		
		//"TORUS"
		public Keyword getTORUSTORUSKeyword_1_0() { return cTORUSTORUSKeyword_1_0; }
		
		//BOUND
		public EnumLiteralDeclaration getBOUNDEnumLiteralDeclaration_2() { return cBOUNDEnumLiteralDeclaration_2; }
		
		//"BOUND"
		public Keyword getBOUNDBOUNDKeyword_2_0() { return cBOUNDBOUNDKeyword_2_0; }
		
		//GRAPH
		public EnumLiteralDeclaration getGRAPHEnumLiteralDeclaration_3() { return cGRAPHEnumLiteralDeclaration_3; }
		
		//"GRAPH"
		public Keyword getGRAPHGRAPHKeyword_3_0() { return cGRAPHGRAPHKeyword_3_0; }
		
		//NETWORK
		public EnumLiteralDeclaration getNETWORKEnumLiteralDeclaration_4() { return cNETWORKEnumLiteralDeclaration_4; }
		
		//"NETWORK"
		public Keyword getNETWORKNETWORKKeyword_4_0() { return cNETWORKNETWORKKeyword_4_0; }
		
		//GIS
		public EnumLiteralDeclaration getGISEnumLiteralDeclaration_5() { return cGISEnumLiteralDeclaration_5; }
		
		//"GIS"
		public Keyword getGISGISKeyword_5_0() { return cGISGISKeyword_5_0; }
		
		//MESH3D
		public EnumLiteralDeclaration getMESH3DEnumLiteralDeclaration_6() { return cMESH3DEnumLiteralDeclaration_6; }
		
		//"MESH3D"
		public Keyword getMESH3DMESH3DKeyword_6_0() { return cMESH3DMESH3DKeyword_6_0; }
		
		//CONTINUOUS
		public EnumLiteralDeclaration getCONTINUOUSEnumLiteralDeclaration_7() { return cCONTINUOUSEnumLiteralDeclaration_7; }
		
		//"CONTINUOUS"
		public Keyword getCONTINUOUSCONTINUOUSKeyword_7_0() { return cCONTINUOUSCONTINUOUSKeyword_7_0; }
	}
	public class InteractionTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.InteractionType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cQUERYEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cQUERYQUERYKeyword_0_0 = (Keyword)cQUERYEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cINDIRECTEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cINDIRECTINDIRECTKeyword_1_0 = (Keyword)cINDIRECTEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cCOMMUNICATIONEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cCOMMUNICATIONCOMMUNICATIONKeyword_2_0 = (Keyword)cCOMMUNICATIONEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum InteractionType:
		//	QUERY | INDIRECT | COMMUNICATION;
		public EnumRule getRule() { return rule; }
		
		//QUERY | INDIRECT | COMMUNICATION
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//QUERY
		public EnumLiteralDeclaration getQUERYEnumLiteralDeclaration_0() { return cQUERYEnumLiteralDeclaration_0; }
		
		//"QUERY"
		public Keyword getQUERYQUERYKeyword_0_0() { return cQUERYQUERYKeyword_0_0; }
		
		//INDIRECT
		public EnumLiteralDeclaration getINDIRECTEnumLiteralDeclaration_1() { return cINDIRECTEnumLiteralDeclaration_1; }
		
		//"INDIRECT"
		public Keyword getINDIRECTINDIRECTKeyword_1_0() { return cINDIRECTINDIRECTKeyword_1_0; }
		
		//COMMUNICATION
		public EnumLiteralDeclaration getCOMMUNICATIONEnumLiteralDeclaration_2() { return cCOMMUNICATIONEnumLiteralDeclaration_2; }
		
		//"COMMUNICATION"
		public Keyword getCOMMUNICATIONCOMMUNICATIONKeyword_2_0() { return cCOMMUNICATIONCOMMUNICATIONKeyword_2_0; }
	}
	public class InteractionTriggerTypesElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.InteractionTriggerTypes");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSTEPEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSTEPSTEPKeyword_0_0 = (Keyword)cSTEPEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cSTATEEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cSTATESTATEKeyword_1_0 = (Keyword)cSTATEEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cPARAMETEREnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cPARAMETERPARAMETERKeyword_2_0 = (Keyword)cPARAMETEREnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cINPUTEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cINPUTINPUTKeyword_3_0 = (Keyword)cINPUTEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum InteractionTriggerTypes:
		//	STEP | STATE | PARAMETER | INPUT;
		public EnumRule getRule() { return rule; }
		
		//STEP | STATE | PARAMETER | INPUT
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STEP
		public EnumLiteralDeclaration getSTEPEnumLiteralDeclaration_0() { return cSTEPEnumLiteralDeclaration_0; }
		
		//"STEP"
		public Keyword getSTEPSTEPKeyword_0_0() { return cSTEPSTEPKeyword_0_0; }
		
		//STATE
		public EnumLiteralDeclaration getSTATEEnumLiteralDeclaration_1() { return cSTATEEnumLiteralDeclaration_1; }
		
		//"STATE"
		public Keyword getSTATESTATEKeyword_1_0() { return cSTATESTATEKeyword_1_0; }
		
		//PARAMETER
		public EnumLiteralDeclaration getPARAMETEREnumLiteralDeclaration_2() { return cPARAMETEREnumLiteralDeclaration_2; }
		
		//"PARAMETER"
		public Keyword getPARAMETERPARAMETERKeyword_2_0() { return cPARAMETERPARAMETERKeyword_2_0; }
		
		//INPUT
		public EnumLiteralDeclaration getINPUTEnumLiteralDeclaration_3() { return cINPUTEnumLiteralDeclaration_3; }
		
		//"INPUT"
		public Keyword getINPUTINPUTKeyword_3_0() { return cINPUTINPUTKeyword_3_0; }
	}
	public class AdaptationTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.AdaptationType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cIMPLICITEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cIMPLICITIMPLICITKeyword_0_0 = (Keyword)cIMPLICITEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cEVOLUTIONARYEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cEVOLUTIONARYEVOLUTIONARYKeyword_1_0 = (Keyword)cEVOLUTIONARYEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cCOGNITIVEEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cCOGNITIVECOGNITIVEKeyword_2_0 = (Keyword)cCOGNITIVEEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum AdaptationType:
		//	IMPLICIT | EVOLUTIONARY | COGNITIVE;
		public EnumRule getRule() { return rule; }
		
		//IMPLICIT | EVOLUTIONARY | COGNITIVE
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//IMPLICIT
		public EnumLiteralDeclaration getIMPLICITEnumLiteralDeclaration_0() { return cIMPLICITEnumLiteralDeclaration_0; }
		
		//"IMPLICIT"
		public Keyword getIMPLICITIMPLICITKeyword_0_0() { return cIMPLICITIMPLICITKeyword_0_0; }
		
		//EVOLUTIONARY
		public EnumLiteralDeclaration getEVOLUTIONARYEnumLiteralDeclaration_1() { return cEVOLUTIONARYEnumLiteralDeclaration_1; }
		
		//"EVOLUTIONARY"
		public Keyword getEVOLUTIONARYEVOLUTIONARYKeyword_1_0() { return cEVOLUTIONARYEVOLUTIONARYKeyword_1_0; }
		
		//COGNITIVE
		public EnumLiteralDeclaration getCOGNITIVEEnumLiteralDeclaration_2() { return cCOGNITIVEEnumLiteralDeclaration_2; }
		
		//"COGNITIVE"
		public Keyword getCOGNITIVECOGNITIVEKeyword_2_0() { return cCOGNITIVECOGNITIVEKeyword_2_0; }
	}
	public class AdaptationDelayElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.AdaptationDelay");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cNONEEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cNONENONEKeyword_0_0 = (Keyword)cNONEEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cPOSTEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cPOSTPOSTKeyword_1_0 = (Keyword)cPOSTEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum AdaptationDelay:
		//	NONE | POST;
		public EnumRule getRule() { return rule; }
		
		//NONE | POST
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//NONE
		public EnumLiteralDeclaration getNONEEnumLiteralDeclaration_0() { return cNONEEnumLiteralDeclaration_0; }
		
		//"NONE"
		public Keyword getNONENONEKeyword_0_0() { return cNONENONEKeyword_0_0; }
		
		//POST
		public EnumLiteralDeclaration getPOSTEnumLiteralDeclaration_1() { return cPOSTEnumLiteralDeclaration_1; }
		
		//"POST"
		public Keyword getPOSTPOSTKeyword_1_0() { return cPOSTPOSTKeyword_1_0; }
	}
	public class SubSystemTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.SubSystemType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSELFEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSELFSELFKeyword_0_0 = (Keyword)cSELFEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cSYSTEMEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cSYSTEMSYSTEMKeyword_1_0 = (Keyword)cSYSTEMEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum SubSystemType:
		//	SELF | SYSTEM;
		public EnumRule getRule() { return rule; }
		
		//SELF | SYSTEM
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SELF
		public EnumLiteralDeclaration getSELFEnumLiteralDeclaration_0() { return cSELFEnumLiteralDeclaration_0; }
		
		//"SELF"
		public Keyword getSELFSELFKeyword_0_0() { return cSELFSELFKeyword_0_0; }
		
		//SYSTEM
		public EnumLiteralDeclaration getSYSTEMEnumLiteralDeclaration_1() { return cSYSTEMEnumLiteralDeclaration_1; }
		
		//"SYSTEM"
		public Keyword getSYSTEMSYSTEMKeyword_1_0() { return cSYSTEMSYSTEMKeyword_1_0; }
	}
	public class WorldTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.WorldType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cGRIDEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cGRIDGRIDKeyword_0_0 = (Keyword)cGRIDEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cTORUSEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cTORUSTORUSKeyword_1_0 = (Keyword)cTORUSEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cBOUNDEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cBOUNDBOUNDKeyword_2_0 = (Keyword)cBOUNDEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cGRAPHEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cGRAPHGRAPHKeyword_3_0 = (Keyword)cGRAPHEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cNETWORKEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cNETWORKNETWORKKeyword_4_0 = (Keyword)cNETWORKEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cGISEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cGISGISKeyword_5_0 = (Keyword)cGISEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cMESH3DEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cMESH3DMESH3DKeyword_6_0 = (Keyword)cMESH3DEnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cCONTINUOUSEnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cCONTINUOUSCONTINUOUSKeyword_7_0 = (Keyword)cCONTINUOUSEnumLiteralDeclaration_7.eContents().get(0);
		
		//enum WorldType:
		//	GRID | TORUS | BOUND | GRAPH | NETWORK | GIS | MESH3D | CONTINUOUS;
		public EnumRule getRule() { return rule; }
		
		//GRID | TORUS | BOUND | GRAPH | NETWORK | GIS | MESH3D | CONTINUOUS
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//GRID
		public EnumLiteralDeclaration getGRIDEnumLiteralDeclaration_0() { return cGRIDEnumLiteralDeclaration_0; }
		
		//"GRID"
		public Keyword getGRIDGRIDKeyword_0_0() { return cGRIDGRIDKeyword_0_0; }
		
		//TORUS
		public EnumLiteralDeclaration getTORUSEnumLiteralDeclaration_1() { return cTORUSEnumLiteralDeclaration_1; }
		
		//"TORUS"
		public Keyword getTORUSTORUSKeyword_1_0() { return cTORUSTORUSKeyword_1_0; }
		
		//BOUND
		public EnumLiteralDeclaration getBOUNDEnumLiteralDeclaration_2() { return cBOUNDEnumLiteralDeclaration_2; }
		
		//"BOUND"
		public Keyword getBOUNDBOUNDKeyword_2_0() { return cBOUNDBOUNDKeyword_2_0; }
		
		//GRAPH
		public EnumLiteralDeclaration getGRAPHEnumLiteralDeclaration_3() { return cGRAPHEnumLiteralDeclaration_3; }
		
		//"GRAPH"
		public Keyword getGRAPHGRAPHKeyword_3_0() { return cGRAPHGRAPHKeyword_3_0; }
		
		//NETWORK
		public EnumLiteralDeclaration getNETWORKEnumLiteralDeclaration_4() { return cNETWORKEnumLiteralDeclaration_4; }
		
		//"NETWORK"
		public Keyword getNETWORKNETWORKKeyword_4_0() { return cNETWORKNETWORKKeyword_4_0; }
		
		//GIS
		public EnumLiteralDeclaration getGISEnumLiteralDeclaration_5() { return cGISEnumLiteralDeclaration_5; }
		
		//"GIS"
		public Keyword getGISGISKeyword_5_0() { return cGISGISKeyword_5_0; }
		
		//MESH3D
		public EnumLiteralDeclaration getMESH3DEnumLiteralDeclaration_6() { return cMESH3DEnumLiteralDeclaration_6; }
		
		//"MESH3D"
		public Keyword getMESH3DMESH3DKeyword_6_0() { return cMESH3DMESH3DKeyword_6_0; }
		
		//CONTINUOUS
		public EnumLiteralDeclaration getCONTINUOUSEnumLiteralDeclaration_7() { return cCONTINUOUSEnumLiteralDeclaration_7; }
		
		//"CONTINUOUS"
		public Keyword getCONTINUOUSCONTINUOUSKeyword_7_0() { return cCONTINUOUSCONTINUOUSKeyword_7_0; }
	}
	public class RandomTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.RandomType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cINTEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cINTINTKeyword_0_0 = (Keyword)cINTEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cFLOATEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cFLOATFLOATKeyword_1_0 = (Keyword)cFLOATEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cBOOLEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cBOOLBOOLKeyword_2_0 = (Keyword)cBOOLEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cVECTOR2EnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cVECTOR2VECTOR2Keyword_3_0 = (Keyword)cVECTOR2EnumLiteralDeclaration_3.eContents().get(0);
		
		//enum RandomType:
		//	INT | FLOAT | BOOL | VECTOR2;
		public EnumRule getRule() { return rule; }
		
		//INT | FLOAT | BOOL | VECTOR2
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//INT
		public EnumLiteralDeclaration getINTEnumLiteralDeclaration_0() { return cINTEnumLiteralDeclaration_0; }
		
		//"INT"
		public Keyword getINTINTKeyword_0_0() { return cINTINTKeyword_0_0; }
		
		//FLOAT
		public EnumLiteralDeclaration getFLOATEnumLiteralDeclaration_1() { return cFLOATEnumLiteralDeclaration_1; }
		
		//"FLOAT"
		public Keyword getFLOATFLOATKeyword_1_0() { return cFLOATFLOATKeyword_1_0; }
		
		//BOOL
		public EnumLiteralDeclaration getBOOLEnumLiteralDeclaration_2() { return cBOOLEnumLiteralDeclaration_2; }
		
		//"BOOL"
		public Keyword getBOOLBOOLKeyword_2_0() { return cBOOLBOOLKeyword_2_0; }
		
		//VECTOR2
		public EnumLiteralDeclaration getVECTOR2EnumLiteralDeclaration_3() { return cVECTOR2EnumLiteralDeclaration_3; }
		
		//"VECTOR2"
		public Keyword getVECTOR2VECTOR2Keyword_3_0() { return cVECTOR2VECTOR2Keyword_3_0; }
	}
	
	private final CaslElements pCasl;
	private final SystemElements pSystem;
	private final Agent_TypesElements pAgent_Types;
	private final Agent_Type_NameElements pAgent_Type_Name;
	private final Environment_TypesElements pEnvironment_Types;
	private final Environment_Type_NameElements pEnvironment_Type_Name;
	private final Environment_RulesElements pEnvironment_Rules;
	private final Group_TypesElements pGroup_Types;
	private final Group_Type_NameElements pGroup_Type_Name;
	private final Environment_AttributeElements eEnvironment_Attribute;
	private final Environment_TypeElements eEnvironment_Type;
	private final End_ConditionsElements pEnd_Conditions;
	private final End_ConditionElements pEnd_Condition;
	private final EndConditionTypesElements eEndConditionTypes;
	private final CAS_RulesElements pCAS_Rules;
	private final CAS_Rule_TypesElements eCAS_Rule_Types;
	private final CAS_Rule_ExceptionElements eCAS_Rule_Exception;
	private final CAS_Inspection_LevelElements eCAS_Inspection_Level;
	private final CAS_Semantic_Group_SwitchElements eCAS_Semantic_Group_Switch;
	private final EntityElements pEntity;
	private final Entity_FeatureElements pEntity_Feature;
	private final AgentElements pAgent;
	private final EnvironmentElements pEnvironment;
	private final GroupElements pGroup;
	private final Group_RulesElements pGroup_Rules;
	private final GroupExternalInteractionsElements pGroupExternalInteractions;
	private final GroupExternalInteractionElements pGroupExternalInteraction;
	private final Transmission_PhaseElements eTransmission_Phase;
	private final Transmission_ContentsElements eTransmission_Contents;
	private final Transmission_RepeatElements eTransmission_Repeat;
	private final GroupInternalInteractionsElements pGroupInternalInteractions;
	private final GroupInternalInteractionElements pGroupInternalInteraction;
	private final ParametersElements pParameters;
	private final FieldElements pField;
	private final AgentFieldReferenceElements pAgentFieldReference;
	private final EnvironmentFieldReferenceElements pEnvironmentFieldReference;
	private final GroupFieldReferenceElements pGroupFieldReference;
	private final FunctionElements pFunction;
	private final FunctionsElements pFunctions;
	private final FunctionParameterElements pFunctionParameter;
	private final ConcernElements pConcern;
	private final State_Block_RefsElements pState_Block_Refs;
	private final BehaviorElements pBehavior;
	private final BehaviorsElements pBehaviors;
	private final BehaviorTypeElements eBehaviorType;
	private final BehaviorReactionTimeElements eBehaviorReactionTime;
	private final AgentInteractionElements pAgentInteraction;
	private final AgentInteractionsElements pAgentInteractions;
	private final InteractionElements pInteraction;
	private final InteractionsElements pInteractions;
	private final EnvironmentInteractionElements pEnvironmentInteraction;
	private final EnvironmentInteractionsElements pEnvironmentInteractions;
	private final EGInteractionElements pEGInteraction;
	private final EGInteractionsElements pEGInteractions;
	private final LayoutTypeElements eLayoutType;
	private final InteractionTypeElements eInteractionType;
	private final InteractionTriggerTypesElements eInteractionTriggerTypes;
	private final InteractionTriggerParameterElements pInteractionTriggerParameter;
	private final AdaptiveProcessElements pAdaptiveProcess;
	private final AdaptationTypeElements eAdaptationType;
	private final AdaptationDelayElements eAdaptationDelay;
	private final AdaptiveProcessesElements pAdaptiveProcesses;
	private final FeatureCallElements pFeatureCall;
	private final AdaptiveProcessFeatureCallElements pAdaptiveProcessFeatureCall;
	private final InteractionFeatureCallElements pInteractionFeatureCall;
	private final AgentInteractionFeatureCallElements pAgentInteractionFeatureCall;
	private final GroupExternalInteractionFeatureCallElements pGroupExternalInteractionFeatureCall;
	private final ExternalInteractionFeatureCallElements pExternalInteractionFeatureCall;
	private final GroupInternalInteractionsFeatureCallElements pGroupInternalInteractionsFeatureCall;
	private final EnvironmentInteractionFeatureCallElements pEnvironmentInteractionFeatureCall;
	private final GroupSelfInternalInteractionsFeatureCallElements pGroupSelfInternalInteractionsFeatureCall;
	private final FunctionFeatureCallElements pFunctionFeatureCall;
	private final BehaviorFeatureCallElements pBehaviorFeatureCall;
	private final SubSystemElements pSubSystem;
	private final SubSystemTypeElements eSubSystemType;
	private final SubSystemsElements pSubSystems;
	private final TypeElements pType;
	private final NonPrimitiveTypeElements pNonPrimitiveType;
	private final PrimitiveTypeElements pPrimitiveType;
	private final IntTypeElements pIntType;
	private final BooleanTypeElements pBooleanType;
	private final FloatTypeElements pFloatType;
	private final StringTypeElements pStringType;
	private final NullTypeElements pNullType;
	private final BooleanValueElements pBooleanValue;
	private final DataTypeDeclarationElements pDataTypeDeclaration;
	private final FormulaElements pFormula;
	private final SelfAssignedFormulaElements pSelfAssignedFormula;
	private final ExpressionElements pExpression;
	private final ForLoopElements pForLoop;
	private final ForEachLoopElements pForEachLoop;
	private final ForEachAccessElements pForEachAccess;
	private final IfStatementElements pIfStatement;
	private final ElseIfExprElements pElseIfExpr;
	private final BooleanExpressionElements pBooleanExpression;
	private final EqualsElements pEquals;
	private final ComparisonElements pComparison;
	private final SubtractionElements pSubtraction;
	private final AdditionElements pAddition;
	private final MultiplicationElements pMultiplication;
	private final PrefixedElements pPrefixed;
	private final AtomicElements pAtomic;
	private final SelfCallElements pSelfCall;
	private final FunctionCallElements pFunctionCall;
	private final EnumCallElements pEnumCall;
	private final SystemCallElements pSystemCall;
	private final Agent_CallElements pAgent_Call;
	private final Environment_CallElements pEnvironment_Call;
	private final Group_CallElements pGroup_Call;
	private final Entity_CallElements pEntity_Call;
	private final ObjectElements pObject;
	private final EnumElements pEnum;
	private final Enum_FieldElements pEnum_Field;
	private final CASL_Macro_CallElements pCASL_Macro_Call;
	private final CASL_MacroElements pCASL_Macro;
	private final CASL_Macro_NeighboursElements pCASL_Macro_Neighbours;
	private final CASL_Macro_FilterAndFunctionElements pCASL_Macro_FilterAndFunction;
	private final CASL_Macro_CountConditionsElements pCASL_Macro_CountConditions;
	private final CASL_Macro_RandomElements pCASL_Macro_Random;
	private final CASL_Macro_ForEachElements pCASL_Macro_ForEach;
	private final CASL_Macro_PrintElements pCASL_Macro_Print;
	private final CASL_Macro_InitLoggerElements pCASL_Macro_InitLogger;
	private final CASL_Macro_LogElements pCASL_Macro_Log;
	private final CASL_Macro_MetricSwitchElements pCASL_Macro_MetricSwitch;
	private final CASL_Macro_TODOElements pCASL_Macro_TODO;
	private final CASL_Macro_PopulateElements pCASL_Macro_Populate;
	private final CASL_Macro_VisualizeElements pCASL_Macro_Visualize;
	private final CASL_Macro_DisplayElements pCASL_Macro_Display;
	private final WorldTypeElements eWorldType;
	private final RandomTypeElements eRandomType;
	private final Raw_Java_BlockElements pRaw_Java_Block;
	private final Raw_JavaElements pRaw_Java;
	private final FeatureElements pFeature;
	private final AbstractElementElements pAbstractElement;
	private final PackageDeclarationElements pPackageDeclaration;
	private final QualifiedNameElements pQualifiedName;
	private final QualifiedNameCallElements pQualifiedNameCall;
	private final ImportElements pImport;
	private final QualifiedNameWithWildcardElements pQualifiedNameWithWildcard;
	private final TerminalRule tNUMBER;
	private final TerminalRule tID;
	private final TerminalRule tSTRING;
	private final TerminalRule tML_COMMENT;
	private final TerminalRule tSL_COMMENT;
	private final TerminalRule tWS;
	private final TerminalRule tANY_OTHER;
	
	private final Grammar grammar;

	@Inject
	public CASLGrammarAccess(GrammarProvider grammarProvider) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.pCasl = new CaslElements();
		this.pSystem = new SystemElements();
		this.pAgent_Types = new Agent_TypesElements();
		this.pAgent_Type_Name = new Agent_Type_NameElements();
		this.pEnvironment_Types = new Environment_TypesElements();
		this.pEnvironment_Type_Name = new Environment_Type_NameElements();
		this.pEnvironment_Rules = new Environment_RulesElements();
		this.pGroup_Types = new Group_TypesElements();
		this.pGroup_Type_Name = new Group_Type_NameElements();
		this.eEnvironment_Attribute = new Environment_AttributeElements();
		this.eEnvironment_Type = new Environment_TypeElements();
		this.pEnd_Conditions = new End_ConditionsElements();
		this.pEnd_Condition = new End_ConditionElements();
		this.eEndConditionTypes = new EndConditionTypesElements();
		this.pCAS_Rules = new CAS_RulesElements();
		this.eCAS_Rule_Types = new CAS_Rule_TypesElements();
		this.eCAS_Rule_Exception = new CAS_Rule_ExceptionElements();
		this.eCAS_Inspection_Level = new CAS_Inspection_LevelElements();
		this.eCAS_Semantic_Group_Switch = new CAS_Semantic_Group_SwitchElements();
		this.pEntity = new EntityElements();
		this.pEntity_Feature = new Entity_FeatureElements();
		this.pAgent = new AgentElements();
		this.pEnvironment = new EnvironmentElements();
		this.pGroup = new GroupElements();
		this.pGroup_Rules = new Group_RulesElements();
		this.pGroupExternalInteractions = new GroupExternalInteractionsElements();
		this.pGroupExternalInteraction = new GroupExternalInteractionElements();
		this.eTransmission_Phase = new Transmission_PhaseElements();
		this.eTransmission_Contents = new Transmission_ContentsElements();
		this.eTransmission_Repeat = new Transmission_RepeatElements();
		this.pGroupInternalInteractions = new GroupInternalInteractionsElements();
		this.pGroupInternalInteraction = new GroupInternalInteractionElements();
		this.pParameters = new ParametersElements();
		this.pField = new FieldElements();
		this.pAgentFieldReference = new AgentFieldReferenceElements();
		this.pEnvironmentFieldReference = new EnvironmentFieldReferenceElements();
		this.pGroupFieldReference = new GroupFieldReferenceElements();
		this.pFunction = new FunctionElements();
		this.pFunctions = new FunctionsElements();
		this.pFunctionParameter = new FunctionParameterElements();
		this.pConcern = new ConcernElements();
		this.pState_Block_Refs = new State_Block_RefsElements();
		this.pBehavior = new BehaviorElements();
		this.pBehaviors = new BehaviorsElements();
		this.eBehaviorType = new BehaviorTypeElements();
		this.eBehaviorReactionTime = new BehaviorReactionTimeElements();
		this.pAgentInteraction = new AgentInteractionElements();
		this.pAgentInteractions = new AgentInteractionsElements();
		this.pInteraction = new InteractionElements();
		this.pInteractions = new InteractionsElements();
		this.pEnvironmentInteraction = new EnvironmentInteractionElements();
		this.pEnvironmentInteractions = new EnvironmentInteractionsElements();
		this.pEGInteraction = new EGInteractionElements();
		this.pEGInteractions = new EGInteractionsElements();
		this.eLayoutType = new LayoutTypeElements();
		this.eInteractionType = new InteractionTypeElements();
		this.eInteractionTriggerTypes = new InteractionTriggerTypesElements();
		this.pInteractionTriggerParameter = new InteractionTriggerParameterElements();
		this.pAdaptiveProcess = new AdaptiveProcessElements();
		this.eAdaptationType = new AdaptationTypeElements();
		this.eAdaptationDelay = new AdaptationDelayElements();
		this.pAdaptiveProcesses = new AdaptiveProcessesElements();
		this.pFeatureCall = new FeatureCallElements();
		this.pAdaptiveProcessFeatureCall = new AdaptiveProcessFeatureCallElements();
		this.pInteractionFeatureCall = new InteractionFeatureCallElements();
		this.pAgentInteractionFeatureCall = new AgentInteractionFeatureCallElements();
		this.pGroupExternalInteractionFeatureCall = new GroupExternalInteractionFeatureCallElements();
		this.pExternalInteractionFeatureCall = new ExternalInteractionFeatureCallElements();
		this.pGroupInternalInteractionsFeatureCall = new GroupInternalInteractionsFeatureCallElements();
		this.pEnvironmentInteractionFeatureCall = new EnvironmentInteractionFeatureCallElements();
		this.pGroupSelfInternalInteractionsFeatureCall = new GroupSelfInternalInteractionsFeatureCallElements();
		this.pFunctionFeatureCall = new FunctionFeatureCallElements();
		this.pBehaviorFeatureCall = new BehaviorFeatureCallElements();
		this.pSubSystem = new SubSystemElements();
		this.eSubSystemType = new SubSystemTypeElements();
		this.pSubSystems = new SubSystemsElements();
		this.pType = new TypeElements();
		this.pNonPrimitiveType = new NonPrimitiveTypeElements();
		this.pPrimitiveType = new PrimitiveTypeElements();
		this.pIntType = new IntTypeElements();
		this.pBooleanType = new BooleanTypeElements();
		this.pFloatType = new FloatTypeElements();
		this.pStringType = new StringTypeElements();
		this.pNullType = new NullTypeElements();
		this.pBooleanValue = new BooleanValueElements();
		this.pDataTypeDeclaration = new DataTypeDeclarationElements();
		this.pFormula = new FormulaElements();
		this.pSelfAssignedFormula = new SelfAssignedFormulaElements();
		this.pExpression = new ExpressionElements();
		this.pForLoop = new ForLoopElements();
		this.pForEachLoop = new ForEachLoopElements();
		this.pForEachAccess = new ForEachAccessElements();
		this.pIfStatement = new IfStatementElements();
		this.pElseIfExpr = new ElseIfExprElements();
		this.pBooleanExpression = new BooleanExpressionElements();
		this.pEquals = new EqualsElements();
		this.pComparison = new ComparisonElements();
		this.pSubtraction = new SubtractionElements();
		this.pAddition = new AdditionElements();
		this.pMultiplication = new MultiplicationElements();
		this.pPrefixed = new PrefixedElements();
		this.pAtomic = new AtomicElements();
		this.pSelfCall = new SelfCallElements();
		this.pFunctionCall = new FunctionCallElements();
		this.pEnumCall = new EnumCallElements();
		this.pSystemCall = new SystemCallElements();
		this.pAgent_Call = new Agent_CallElements();
		this.pEnvironment_Call = new Environment_CallElements();
		this.pGroup_Call = new Group_CallElements();
		this.pEntity_Call = new Entity_CallElements();
		this.pObject = new ObjectElements();
		this.pEnum = new EnumElements();
		this.pEnum_Field = new Enum_FieldElements();
		this.pCASL_Macro_Call = new CASL_Macro_CallElements();
		this.pCASL_Macro = new CASL_MacroElements();
		this.pCASL_Macro_Neighbours = new CASL_Macro_NeighboursElements();
		this.pCASL_Macro_FilterAndFunction = new CASL_Macro_FilterAndFunctionElements();
		this.pCASL_Macro_CountConditions = new CASL_Macro_CountConditionsElements();
		this.pCASL_Macro_Random = new CASL_Macro_RandomElements();
		this.pCASL_Macro_ForEach = new CASL_Macro_ForEachElements();
		this.pCASL_Macro_Print = new CASL_Macro_PrintElements();
		this.pCASL_Macro_InitLogger = new CASL_Macro_InitLoggerElements();
		this.pCASL_Macro_Log = new CASL_Macro_LogElements();
		this.pCASL_Macro_MetricSwitch = new CASL_Macro_MetricSwitchElements();
		this.pCASL_Macro_TODO = new CASL_Macro_TODOElements();
		this.pCASL_Macro_Populate = new CASL_Macro_PopulateElements();
		this.pCASL_Macro_Visualize = new CASL_Macro_VisualizeElements();
		this.pCASL_Macro_Display = new CASL_Macro_DisplayElements();
		this.eWorldType = new WorldTypeElements();
		this.eRandomType = new RandomTypeElements();
		this.pRaw_Java_Block = new Raw_Java_BlockElements();
		this.pRaw_Java = new Raw_JavaElements();
		this.pFeature = new FeatureElements();
		this.pAbstractElement = new AbstractElementElements();
		this.pPackageDeclaration = new PackageDeclarationElements();
		this.pQualifiedName = new QualifiedNameElements();
		this.pQualifiedNameCall = new QualifiedNameCallElements();
		this.pImport = new ImportElements();
		this.pQualifiedNameWithWildcard = new QualifiedNameWithWildcardElements();
		this.tNUMBER = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.NUMBER");
		this.tID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.ID");
		this.tSTRING = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.STRING");
		this.tML_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.ML_COMMENT");
		this.tSL_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.SL_COMMENT");
		this.tWS = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.WS");
		this.tANY_OTHER = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "uofa.lbirdsey.castle.CASL.ANY_OTHER");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("uofa.lbirdsey.castle.CASL".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	

	
	////The upper most level of CASL
	////A CASL description will contain: 1 system description, 1+ agents, 1+ environments
	////A CASL may also be a package descriptor, as models usually have lots of common elements (but how do we do this?)
	//Casl:
	//	packageElements+=AbstractElement*
	//	//These are for proper CAS descriptors
	//	//Describe at MOST one system (wildcard is there for stupid reasons)
	//	system=System? (agents+=Agent | environments+=Environment | groups+=Group)*
	//	//Describe at least one Environment	
	//;
	public CaslElements getCaslAccess() {
		return pCasl;
	}
	
	public ParserRule getCaslRule() {
		return getCaslAccess().getRule();
	}
	
	///*
	// * The SYSTEM declaration
	// */ System:
	//	'SYSTEM:' '{'
	//	'name:' name=STRING ';'
	//	'description:' desc=STRING ';'
	//	'ruleset:' '{'
	//	cas_rules=CAS_Rules
	//	'};'
	//	system_parameters=Parameters
	//	system_functions=Functions
	//	agent_types=Agent_Types
	//	group_types=Group_Types
	//	environment_types=Environment_Types
	//	end_conditions=End_Conditions
	//	'};';
	public SystemElements getSystemAccess() {
		return pSystem;
	}
	
	public ParserRule getSystemRule() {
		return getSystemAccess().getRule();
	}
	
	///**
	// * We need a way to statically check that each agent and env
	// * type listed here has a definition
	// * Is this actually useful? Diversity checks!
	// */ Agent_Types:
	//	'agent_types:' '{'
	//	agent_types+=Agent_Type_Name (',' agent_types+=Agent_Type_Name)* ';'
	//	'};';
	public Agent_TypesElements getAgent_TypesAccess() {
		return pAgent_Types;
	}
	
	public ParserRule getAgent_TypesRule() {
		return getAgent_TypesAccess().getRule();
	}
	
	//Agent_Type_Name:
	//	{Agent_Type_Name} agent_type_name=QualifiedName;
	public Agent_Type_NameElements getAgent_Type_NameAccess() {
		return pAgent_Type_Name;
	}
	
	public ParserRule getAgent_Type_NameRule() {
		return getAgent_Type_NameAccess().getRule();
	}
	
	//Environment_Types:
	//	{Environment_Types}
	//	'environment_types:' '{'
	//	environment_types+=Environment_Type_Name (',' environment_types+=Environment_Type_Name)* ';'
	//	'};';
	public Environment_TypesElements getEnvironment_TypesAccess() {
		return pEnvironment_Types;
	}
	
	public ParserRule getEnvironment_TypesRule() {
		return getEnvironment_TypesAccess().getRule();
	}
	
	//Environment_Type_Name:
	//	{Environment_Type_Name} environment_type_name=QualifiedName;
	public Environment_Type_NameElements getEnvironment_Type_NameAccess() {
		return pEnvironment_Type_Name;
	}
	
	public ParserRule getEnvironment_Type_NameRule() {
		return getEnvironment_Type_NameAccess().getRule();
	}
	
	//Environment_Rules:
	//	'environment_rules:' '{'
	//	'type:' env_def=Environment_Type
	//	'attributes:' env_attributes=Environment_Attribute
	//	'layout_type:' layout_type=LayoutType ';'
	//	'};';
	public Environment_RulesElements getEnvironment_RulesAccess() {
		return pEnvironment_Rules;
	}
	
	public ParserRule getEnvironment_RulesRule() {
		return getEnvironment_RulesAccess().getRule();
	}
	
	////TODO: Handle the enumeration in validation
	//Group_Types:
	//	{Group_Types}
	//	'group_types:' '{'
	//	group_types+=Group_Type_Name? (',' group_types+=Group_Type_Name)* ';'
	//	'};';
	public Group_TypesElements getGroup_TypesAccess() {
		return pGroup_Types;
	}
	
	public ParserRule getGroup_TypesRule() {
		return getGroup_TypesAccess().getRule();
	}
	
	//Group_Type_Name:
	//	{Group_Type_Name} group_type_name=QualifiedName;
	public Group_Type_NameElements getGroup_Type_NameAccess() {
		return pGroup_Type_Name;
	}
	
	public ParserRule getGroup_Type_NameRule() {
		return getGroup_Type_NameAccess().getRule();
	}
	
	//enum Environment_Attribute:
	//	VIRTUAL='virtual' | PHYSICAL='physical';
	public Environment_AttributeElements getEnvironment_AttributeAccess() {
		return eEnvironment_Attribute;
	}
	
	public EnumRule getEnvironment_AttributeRule() {
		return getEnvironment_AttributeAccess().getRule();
	}
	
	//enum Environment_Type:
	//	IMPLICIT='implicit' | EXPLICIT='explicit';
	public Environment_TypeElements getEnvironment_TypeAccess() {
		return eEnvironment_Type;
	}
	
	public EnumRule getEnvironment_TypeRule() {
		return getEnvironment_TypeAccess().getRule();
	}
	
	///**
	// * End Conditions:
	// * Each condition listed is in priority order
	// * Need a way to note (wtf is note?)
	// */ End_Conditions:
	//	'end_conditions:' '{'
	//	end_conditions+=End_Condition+
	//	'};';
	public End_ConditionsElements getEnd_ConditionsAccess() {
		return pEnd_Conditions;
	}
	
	public ParserRule getEnd_ConditionsRule() {
		return getEnd_ConditionsAccess().getRule();
	}
	
	///**
	// * End conditions should be altered at runtime
	// */ End_Condition:
	//	'condition' endType=EndConditionTypes name=ID ';' //':'(val = AbstractElement)';'
	//;
	public End_ConditionElements getEnd_ConditionAccess() {
		return pEnd_Condition;
	}
	
	public ParserRule getEnd_ConditionRule() {
		return getEnd_ConditionAccess().getRule();
	}
	
	//enum EndConditionTypes:
	//	STEPS | PARAMETER | STATE;
	public EndConditionTypesElements getEndConditionTypesAccess() {
		return eEndConditionTypes;
	}
	
	public EnumRule getEndConditionTypesRule() {
		return getEndConditionTypesAccess().getRule();
	}
	
	///**
	// * CAS Rules
	// */ CAS_Rules:
	//	{CAS_Rules}
	//	'type:' cas_rule=CAS_Rule_Types ';'
	//	'inspection_level:' cas_check=CAS_Inspection_Level ';'
	//	'lenient_exceptions:' exceptions+=CAS_Rule_Exception* ';' //((flags += CAS_Rule_Exception)(flags += CAS_Rule_Exception)?)?
	//	'semantic_groups:' semanticgroups=CAS_Semantic_Group_Switch ';';
	public CAS_RulesElements getCAS_RulesAccess() {
		return pCAS_Rules;
	}
	
	public ParserRule getCAS_RulesRule() {
		return getCAS_RulesAccess().getRule();
	}
	
	//enum CAS_Rule_Types:
	//	STRICT='strict' | LENIENT='lenient';
	public CAS_Rule_TypesElements getCAS_Rule_TypesAccess() {
		return eCAS_Rule_Types;
	}
	
	public EnumRule getCAS_Rule_TypesRule() {
		return getCAS_Rule_TypesAccess().getRule();
	}
	
	//enum CAS_Rule_Exception:
	//	MODULARITY='modularity' | DIVERSITY='diversity' | NONE='none' | ADAPTATION="adaptation";
	public CAS_Rule_ExceptionElements getCAS_Rule_ExceptionAccess() {
		return eCAS_Rule_Exception;
	}
	
	public EnumRule getCAS_Rule_ExceptionRule() {
		return getCAS_Rule_ExceptionAccess().getRule();
	}
	
	//enum CAS_Inspection_Level:
	//	STRONG='strong' | WEAK='weak' | NONE='none';
	public CAS_Inspection_LevelElements getCAS_Inspection_LevelAccess() {
		return eCAS_Inspection_Level;
	}
	
	public EnumRule getCAS_Inspection_LevelRule() {
		return getCAS_Inspection_LevelAccess().getRule();
	}
	
	//enum CAS_Semantic_Group_Switch:
	//	ENABLE='enable' | DISABLE="disable";
	public CAS_Semantic_Group_SwitchElements getCAS_Semantic_Group_SwitchAccess() {
		return eCAS_Semantic_Group_Switch;
	}
	
	public EnumRule getCAS_Semantic_Group_SwitchRule() {
		return getCAS_Semantic_Group_SwitchAccess().getRule();
	}
	
	//Entity:
	//	Agent | Group | Environment;
	public EntityElements getEntityAccess() {
		return pEntity;
	}
	
	public ParserRule getEntityRule() {
		return getEntityAccess().getRule();
	}
	
	//Entity_Feature:
	//	Field | Function | Behavior | Interaction | AdaptiveProcess | SubSystem | GroupExternalInteraction |
	//	GroupInternalInteraction;
	public Entity_FeatureElements getEntity_FeatureAccess() {
		return pEntity_Feature;
	}
	
	public ParserRule getEntity_FeatureRule() {
		return getEntity_FeatureAccess().getRule();
	}
	
	///**
	// * The AGENT declaration
	// */ Agent:
	//	'AGENT' name=ID ':' '{'
	//	'description:' desc=STRING ';'
	//	//Agent Parameters
	//	agent_parameters=Parameters
	//	//Agent Functions
	//	agent_functions=Functions
	//	//Agent Behaviors
	//	agent_behaviors=Behaviors
	//	//Agent Interactions
	//	agent_interactions=AgentInteractions
	//	//Agent Adaptive Processes
	//	agent_adaptation=AdaptiveProcesses
	//	//Agent SubSystems
	//	agent_subSystems=SubSystems
	//	'};';
	public AgentElements getAgentAccess() {
		return pAgent;
	}
	
	public ParserRule getAgentRule() {
		return getAgentAccess().getRule();
	}
	
	///**
	// * The ENVIRONMENT declaration
	// */ Environment:
	//	'ENVIRONMENT' name=ID ':' '{'
	//	'description:' desc=STRING ';'
	//	env_attributes=Environment_Rules
	//	//Environment Parameters
	//	env_parameters=Parameters
	//	//Environment Functions
	//	env_functions=Functions
	//	//Environment Behaviors
	//	env_behaviors=Behaviors
	//	//Environment Interactions
	//	env_interactions=EnvironmentInteractions
	//	//Environment Adaptive Processes
	//	env_adaptation=AdaptiveProcesses
	//	//Environment SubSystems
	//	env_subSystems=SubSystems
	//	//This needs to be enabled only if ULCASL is enabled
	//	env_groupinteractions=EGInteractions
	//	'};';
	public EnvironmentElements getEnvironmentAccess() {
		return pEnvironment;
	}
	
	public ParserRule getEnvironmentRule() {
		return getEnvironmentAccess().getRule();
	}
	
	//Group:
	//	'GROUP' name=ID ':' '{'
	//	'description:' desc=STRING ';'
	//	group_rules=Group_Rules
	//	group_parameters=Parameters
	//	group_functions=Functions
	//	group_behaviors=Behaviors
	//	group_external_interactions=GroupExternalInteractions
	//	group_internal_interactions=GroupInternalInteractions
	//	'};';
	public GroupElements getGroupAccess() {
		return pGroup;
	}
	
	public ParserRule getGroupRule() {
		return getGroupAccess().getRule();
	}
	
	//Group_Rules:
	//	{Group_Rules}
	//	'group_rules:' '{'
	//	'layout_type:' layout_type=LayoutType ';'
	//	'};';
	public Group_RulesElements getGroup_RulesAccess() {
		return pGroup_Rules;
	}
	
	public ParserRule getGroup_RulesRule() {
		return getGroup_RulesAccess().getRule();
	}
	
	//GroupExternalInteractions:
	//	{GroupExternalInteractions}
	//	//These are essentially interactions that rely on slightly more complicated functions
	//	//and must be wrapped as a message to the environment
	//	'external_interactions:' '{'
	//	external_interactions+=GroupExternalInteraction*
	//	'};';
	public GroupExternalInteractionsElements getGroupExternalInteractionsAccess() {
		return pGroupExternalInteractions;
	}
	
	public ParserRule getGroupExternalInteractionsRule() {
		return getGroupExternalInteractionsAccess().getRule();
	}
	
	//GroupExternalInteraction:
	//	{GroupExternalInteraction} name=ID '[' transmissionPhase=Transmission_Phase ']['
	//	transmissionContents=Transmission_Contents ']['
	//	transmissionRepeat=Transmission_Repeat ('(' reaction_time_parm=Expression ')')? ']('
	//	(functionParameters+=FunctionParameter (',' functionParameters+=FunctionParameter)*)? '):' '{' ((body+=Field |
	//	body+=Expression | body+=Formula | body+=SelfAssignedFormula) ';')*
	//	'};';
	public GroupExternalInteractionElements getGroupExternalInteractionAccess() {
		return pGroupExternalInteraction;
	}
	
	public ParserRule getGroupExternalInteractionRule() {
		return getGroupExternalInteractionAccess().getRule();
	}
	
	//enum Transmission_Phase:
	//	SETUP | ACTION | CLEANUP;
	public Transmission_PhaseElements getTransmission_PhaseAccess() {
		return eTransmission_Phase;
	}
	
	public EnumRule getTransmission_PhaseRule() {
		return getTransmission_PhaseAccess().getRule();
	}
	
	//enum Transmission_Contents:
	//	STATE | AGENT;
	public Transmission_ContentsElements getTransmission_ContentsAccess() {
		return eTransmission_Contents;
	}
	
	public EnumRule getTransmission_ContentsRule() {
		return getTransmission_ContentsAccess().getRule();
	}
	
	//enum Transmission_Repeat:
	//	REPEAT | SINGLE | CALLED;
	public Transmission_RepeatElements getTransmission_RepeatAccess() {
		return eTransmission_Repeat;
	}
	
	public EnumRule getTransmission_RepeatRule() {
		return getTransmission_RepeatAccess().getRule();
	}
	
	//GroupInternalInteractions:
	//	{GroupInternalInteractions}
	//	//These are also essentially interactions that rely on slightly more complicated functions
	//	//but do not need to be messages as the contained agents make the request directly from the
	//	//group layer
	//	'internal_interactions:' '{'
	//	internal_interactions+=GroupInternalInteraction*
	//	'};';
	public GroupInternalInteractionsElements getGroupInternalInteractionsAccess() {
		return pGroupInternalInteractions;
	}
	
	public ParserRule getGroupInternalInteractionsRule() {
		return getGroupInternalInteractionsAccess().getRule();
	}
	
	//GroupInternalInteraction:
	//	{GroupInternalInteraction} name=ID '[' interaction_type=InteractionType '][' trigger_type=InteractionTriggerTypes '('
	//	triggerParam=InteractionTriggerParameter? ')' '](' (functionParameters+=FunctionParameter (','
	//	functionParameters+=FunctionParameter)*)? '):' '{' ((body+=Field | body+=Expression | body+=Formula |
	//	body+=SelfAssignedFormula) ';')*
	//	'};';
	public GroupInternalInteractionElements getGroupInternalInteractionAccess() {
		return pGroupInternalInteraction;
	}
	
	public ParserRule getGroupInternalInteractionRule() {
		return getGroupInternalInteractionAccess().getRule();
	}
	
	//Parameters:
	//	{Parameters}
	//	// 	name = 'fields' //How can we force a name so that eclipse is happy?
	//	//	name = "parameters" ': {' //Gah How
	//	'parameters:' '{' ((fields+=Field | fields+=Concern) ';')*
	//	'};';
	public ParametersElements getParametersAccess() {
		return pParameters;
	}
	
	public ParserRule getParametersRule() {
		return getParametersAccess().getRule();
	}
	
	///**
	// * Field:
	// * Can be an ass
	// */ Field:
	//	declaration=DataTypeDeclaration | agentFieldRef=AgentFieldReference | envFieldRef=EnvironmentFieldReference |
	//	grpFieldRef=GroupFieldReference;
	public FieldElements getFieldAccess() {
		return pField;
	}
	
	public ParserRule getFieldRule() {
		return getFieldAccess().getRule();
	}
	
	//AgentFieldReference Symbol:
	//	{AgentFieldReference}
	//	'agt' agent=[Agent] ':' name=ID ('=' assignment=Expression)?;
	public AgentFieldReferenceElements getAgentFieldReferenceAccess() {
		return pAgentFieldReference;
	}
	
	public ParserRule getAgentFieldReferenceRule() {
		return getAgentFieldReferenceAccess().getRule();
	}
	
	//EnvironmentFieldReference Symbol:
	//	{EnvironmentFieldReference}
	//	'env' env=[Environment] ':' name=ID ('=' assignment=Expression)?;
	public EnvironmentFieldReferenceElements getEnvironmentFieldReferenceAccess() {
		return pEnvironmentFieldReference;
	}
	
	public ParserRule getEnvironmentFieldReferenceRule() {
		return getEnvironmentFieldReferenceAccess().getRule();
	}
	
	//GroupFieldReference Symbol:
	//	{GroupFieldReference}
	//	'grp' grp=[Group] ':' name=ID ('=' assignment=Expression)?;
	public GroupFieldReferenceElements getGroupFieldReferenceAccess() {
		return pGroupFieldReference;
	}
	
	public ParserRule getGroupFieldReferenceRule() {
		return getGroupFieldReferenceAccess().getRule();
	}
	
	///**
	// * Function:
	// * name:(inputs){};
	// */ Function:
	//	{Function}
	//	'def' name=ID '(' functionParameters+=FunctionParameter? (',' functionParameters+=FunctionParameter)* ')('
	//	returnType=FunctionParameter? '):' '{' ((body+=Field | body+=Expression | body+=Formula | body+=SelfAssignedFormula |
	//	body+=Raw_Java_Block) ';')*
	//	'};';
	public FunctionElements getFunctionAccess() {
		return pFunction;
	}
	
	public ParserRule getFunctionRule() {
		return getFunctionAccess().getRule();
	}
	
	//Functions:
	//	{Functions}
	//	'functions:' '{'
	//	functions+=Function*
	//	'};';
	public FunctionsElements getFunctionsAccess() {
		return pFunctions;
	}
	
	public ParserRule getFunctionsRule() {
		return getFunctionsAccess().getRule();
	}
	
	//FunctionParameter Symbol:
	//	{FunctionParameter} ('var' type=PrimitiveType | 'agt' agent=[Agent] | 'env' env=[Environment] | 'var'
	//	obj=[NonPrimitiveType] (':' useObj=[NonPrimitiveType] |
	//	':' useType=PrimitiveType | '<' ('grp.' useGroup=[Group] | 'agt.' useAgent=[Agent] | 'env.' useEnv=[Environment])
	//	'>')? | 'grp' grp=[Group])
	//	':' name=ID;
	public FunctionParameterElements getFunctionParameterAccess() {
		return pFunctionParameter;
	}
	
	public ParserRule getFunctionParameterRule() {
		return getFunctionParameterAccess().getRule();
	}
	
	///*These StateBlocks inform things
	// * 
	// * */ Concern:
	//	"behavior_state" name=ID ':' '{'
	//	"description:" desc=STRING ';'
	//	stateFields+=State_Block_Refs (',' stateFields+=State_Block_Refs)* ';'
	//	"};";
	public ConcernElements getConcernAccess() {
		return pConcern;
	}
	
	public ParserRule getConcernRule() {
		return getConcernAccess().getRule();
	}
	
	//State_Block_Refs:
	//	ref=[Symbol];
	public State_Block_RefsElements getState_Block_RefsAccess() {
		return pState_Block_Refs;
	}
	
	public ParserRule getState_Block_RefsRule() {
		return getState_Block_RefsAccess().getRule();
	}
	
	///**
	// * Behavior:
	// * name:[BehaviorType](Inputs){};
	// */ Behavior:
	//	name=ID '[' behavior_type=BehaviorType '][' behavior_reaction_time=BehaviorReactionTime ('('
	//	reaction_time_parm=Expression ')')? ']('
	//	functionParameters+=FunctionParameter? (',' functionParameters+=FunctionParameter)* '):' '{' ((body+=Field |
	//	body+=Expression | body+=Formula | body+=SelfAssignedFormula) ';')*
	//	'};';
	public BehaviorElements getBehaviorAccess() {
		return pBehavior;
	}
	
	public ParserRule getBehaviorRule() {
		return getBehaviorAccess().getRule();
	}
	
	//Behaviors:
	//	{Behaviors}
	//	'behaviors:' '{'
	//	behaviors+=Behavior*
	//	'};';
	public BehaviorsElements getBehaviorsAccess() {
		return pBehaviors;
	}
	
	public ParserRule getBehaviorsRule() {
		return getBehaviorsAccess().getRule();
	}
	
	//enum BehaviorType:
	//	SELF | AFFECT;
	public BehaviorTypeElements getBehaviorTypeAccess() {
		return eBehaviorType;
	}
	
	public EnumRule getBehaviorTypeRule() {
		return getBehaviorTypeAccess().getRule();
	}
	
	//enum BehaviorReactionTime:
	//	INSTANT | DELAYED | STEP | REPEAT;
	public BehaviorReactionTimeElements getBehaviorReactionTimeAccess() {
		return eBehaviorReactionTime;
	}
	
	public EnumRule getBehaviorReactionTimeRule() {
		return getBehaviorReactionTimeAccess().getRule();
	}
	
	///**
	// * Interaction:
	// * name:[Affectee][Type][Trigger]{};
	// */ //We need to do something about this being accessible across agent and environment types
	//AgentInteraction Interaction:
	//	{AgentInteraction} name=ID '[' interaction_type=InteractionType '][' trigger_type=InteractionTriggerTypes '('
	//	triggerParam=InteractionTriggerParameter? ')' '](' (functionParameters+=FunctionParameter (','
	//	functionParameters+=FunctionParameter)*)? '):' '{' ((body+=Field | body+=Expression | body+=Formula |
	//	body+=SelfAssignedFormula) ';')*
	//	'};';
	public AgentInteractionElements getAgentInteractionAccess() {
		return pAgentInteraction;
	}
	
	public ParserRule getAgentInteractionRule() {
		return getAgentInteractionAccess().getRule();
	}
	
	//AgentInteractions:
	//	{AgentInteractions}
	//	'interactions:' '{'
	//	interactions+=AgentInteraction*
	//	'};';
	public AgentInteractionsElements getAgentInteractionsAccess() {
		return pAgentInteractions;
	}
	
	public ParserRule getAgentInteractionsRule() {
		return getAgentInteractionsAccess().getRule();
	}
	
	////we may change back to these one day (although it should be okay now)
	//Interaction:
	//	{Interaction} name=ID '[' interaction_type=InteractionType '][' trigger_type=InteractionTriggerTypes '('
	//	triggerParam=InteractionTriggerParameter? ')' '](' (functionParameters+=FunctionParameter (','
	//	functionParameters+=FunctionParameter)*)? '):' '{' ((body+=Field | body+=Expression | body+=Formula |
	//	body+=SelfAssignedFormula) ';')*
	//	'};';
	public InteractionElements getInteractionAccess() {
		return pInteraction;
	}
	
	public ParserRule getInteractionRule() {
		return getInteractionAccess().getRule();
	}
	
	//Interactions:
	//	{Interactions}
	//	'interactions:' '{'
	//	interactions+=Interaction*
	//	'};';
	public InteractionsElements getInteractionsAccess() {
		return pInteractions;
	}
	
	public ParserRule getInteractionsRule() {
		return getInteractionsAccess().getRule();
	}
	
	//EnvironmentInteraction Interaction:
	//	{EnvironmentInteraction} name=ID '[' interaction_type=InteractionType '][' trigger_type=InteractionTriggerTypes '('
	//	triggerParam=InteractionTriggerParameter? ')' '](' (functionParameters+=FunctionParameter (','
	//	functionParameters+=FunctionParameter)*)? '):' '{' ((body+=Field | body+=Expression | body+=Formula |
	//	body+=SelfAssignedFormula) ';')*
	//	'};';
	public EnvironmentInteractionElements getEnvironmentInteractionAccess() {
		return pEnvironmentInteraction;
	}
	
	public ParserRule getEnvironmentInteractionRule() {
		return getEnvironmentInteractionAccess().getRule();
	}
	
	//EnvironmentInteractions:
	//	{EnvironmentInteractions}
	//	'interactions:' '{'
	//	interactions+=EnvironmentInteraction*
	//	'};';
	public EnvironmentInteractionsElements getEnvironmentInteractionsAccess() {
		return pEnvironmentInteractions;
	}
	
	public ParserRule getEnvironmentInteractionsRule() {
		return getEnvironmentInteractionsAccess().getRule();
	}
	
	//EGInteraction Interaction:
	//	{EGInteraction} name=ID '[' layoutType=LayoutType '][' trigger_type=InteractionTriggerTypes '('
	//	triggerParam=InteractionTriggerParameter? ')' '](' (functionParameters+=FunctionParameter (','
	//	functionParameters+=FunctionParameter)*)? '):' '{' ((body+=Field | body+=Expression | body+=Formula |
	//	body+=SelfAssignedFormula) ';')*
	//	'};';
	public EGInteractionElements getEGInteractionAccess() {
		return pEGInteraction;
	}
	
	public ParserRule getEGInteractionRule() {
		return getEGInteractionAccess().getRule();
	}
	
	//EGInteractions:
	//	{EGInteractions}
	//	'group_interactions:' '{'
	//	interactions+=EGInteraction*
	//	'};';
	public EGInteractionsElements getEGInteractionsAccess() {
		return pEGInteractions;
	}
	
	public ParserRule getEGInteractionsRule() {
		return getEGInteractionsAccess().getRule();
	}
	
	//enum LayoutType:
	//	GRID | TORUS | BOUND | GRAPH | NETWORK | GIS | MESH3D | CONTINUOUS;
	public LayoutTypeElements getLayoutTypeAccess() {
		return eLayoutType;
	}
	
	public EnumRule getLayoutTypeRule() {
		return getLayoutTypeAccess().getRule();
	}
	
	//enum InteractionType:
	//	QUERY | INDIRECT | COMMUNICATION;
	public InteractionTypeElements getInteractionTypeAccess() {
		return eInteractionType;
	}
	
	public EnumRule getInteractionTypeRule() {
		return getInteractionTypeAccess().getRule();
	}
	
	//enum InteractionTriggerTypes:
	//	STEP | STATE | PARAMETER | INPUT;
	public InteractionTriggerTypesElements getInteractionTriggerTypesAccess() {
		return eInteractionTriggerTypes;
	}
	
	public EnumRule getInteractionTriggerTypesRule() {
		return getInteractionTriggerTypesAccess().getRule();
	}
	
	//InteractionTriggerParameter:
	//	{InteractionTriggerParameter} expr=Expression;
	public InteractionTriggerParameterElements getInteractionTriggerParameterAccess() {
		return pInteractionTriggerParameter;
	}
	
	public ParserRule getInteractionTriggerParameterRule() {
		return getInteractionTriggerParameterAccess().getRule();
	}
	
	///**
	// * Adaptive Process:
	// * name:[AdaptationType](inputs){};
	// */ AdaptiveProcess:
	//	{AdaptiveProcess} name=ID '[' adaptation_type=AdaptationType '][' adaptationDelay=AdaptationDelay ']('
	//	functionParameters+=FunctionParameter* '):' '{' ((body+=Field | body+=Expression | body+=Formula |
	//	body+=SelfAssignedFormula) ';')*
	//	'};';
	public AdaptiveProcessElements getAdaptiveProcessAccess() {
		return pAdaptiveProcess;
	}
	
	public ParserRule getAdaptiveProcessRule() {
		return getAdaptiveProcessAccess().getRule();
	}
	
	//enum AdaptationType:
	//	IMPLICIT | EVOLUTIONARY | COGNITIVE;
	public AdaptationTypeElements getAdaptationTypeAccess() {
		return eAdaptationType;
	}
	
	public EnumRule getAdaptationTypeRule() {
		return getAdaptationTypeAccess().getRule();
	}
	
	//enum AdaptationDelay:
	//	NONE | POST;
	public AdaptationDelayElements getAdaptationDelayAccess() {
		return eAdaptationDelay;
	}
	
	public EnumRule getAdaptationDelayRule() {
		return getAdaptationDelayAccess().getRule();
	}
	
	//AdaptiveProcesses:
	//	{AdaptiveProcesses}
	//	'adaptation:' '{'
	//	adaptation+=AdaptiveProcess*
	//	'};';
	public AdaptiveProcessesElements getAdaptiveProcessesAccess() {
		return pAdaptiveProcesses;
	}
	
	public ParserRule getAdaptiveProcessesRule() {
		return getAdaptiveProcessesAccess().getRule();
	}
	
	//FeatureCall:
	//	fc=(AdaptiveProcessFeatureCall | AgentInteractionFeatureCall | EnvironmentInteractionFeatureCall |
	//	InteractionFeatureCall | FunctionFeatureCall | BehaviorFeatureCall | GroupExternalInteractionFeatureCall |
	//	GroupSelfInternalInteractionsFeatureCall | GroupInternalInteractionsFeatureCall | ExternalInteractionFeatureCall);
	public FeatureCallElements getFeatureCallAccess() {
		return pFeatureCall;
	}
	
	public ParserRule getFeatureCallRule() {
		return getFeatureCallAccess().getRule();
	}
	
	//AdaptiveProcessFeatureCall:
	//	{AdaptiveProcessFeatureCall} 'ADAPTATION.' process=[AdaptiveProcess] '(' inputs+=Expression? (',' inputs+=Expression)*
	//	')';
	public AdaptiveProcessFeatureCallElements getAdaptiveProcessFeatureCallAccess() {
		return pAdaptiveProcessFeatureCall;
	}
	
	public ParserRule getAdaptiveProcessFeatureCallRule() {
		return getAdaptiveProcessFeatureCallAccess().getRule();
	}
	
	//InteractionFeatureCall:
	//	{InteractionFeatureCall} 'INTERACTION.' process=[Interaction] '(' inputs+=Expression? (',' inputs+=Expression)* ')';
	public InteractionFeatureCallElements getInteractionFeatureCallAccess() {
		return pInteractionFeatureCall;
	}
	
	public ParserRule getInteractionFeatureCallRule() {
		return getInteractionFeatureCallAccess().getRule();
	}
	
	//AgentInteractionFeatureCall:
	//	{AgentInteractionFeatureCall} agt=[Symbol] '.AGT_INTERACTION.' process=[AgentInteraction] '(' inputs+=Expression? (','
	//	inputs+=Expression)* ')';
	public AgentInteractionFeatureCallElements getAgentInteractionFeatureCallAccess() {
		return pAgentInteractionFeatureCall;
	}
	
	public ParserRule getAgentInteractionFeatureCallRule() {
		return getAgentInteractionFeatureCallAccess().getRule();
	}
	
	//GroupExternalInteractionFeatureCall:
	//	{GroupExternalInteractionFeatureCall} grp=[Symbol] '.GRP_EXT_INTERACTION.' process=[GroupExternalInteraction] '('
	//	inputs+=Expression? (',' inputs+=Expression)* ')';
	public GroupExternalInteractionFeatureCallElements getGroupExternalInteractionFeatureCallAccess() {
		return pGroupExternalInteractionFeatureCall;
	}
	
	public ParserRule getGroupExternalInteractionFeatureCallRule() {
		return getGroupExternalInteractionFeatureCallAccess().getRule();
	}
	
	//ExternalInteractionFeatureCall:
	//	{ExternalInteractionFeatureCall} 'EXT_INTERACTION.' process=[GroupExternalInteraction] '(' inputs+=Expression? (','
	//	inputs+=Expression)* ')';
	public ExternalInteractionFeatureCallElements getExternalInteractionFeatureCallAccess() {
		return pExternalInteractionFeatureCall;
	}
	
	public ParserRule getExternalInteractionFeatureCallRule() {
		return getExternalInteractionFeatureCallAccess().getRule();
	}
	
	//GroupInternalInteractionsFeatureCall:
	//	{GroupInternalInteractionsFeatureCall} grp=[Symbol] '.GRP_INT_INTERACTION.' process=[GroupInternalInteraction] '('
	//	inputs+=Expression? (',' inputs+=Expression)* ')';
	public GroupInternalInteractionsFeatureCallElements getGroupInternalInteractionsFeatureCallAccess() {
		return pGroupInternalInteractionsFeatureCall;
	}
	
	public ParserRule getGroupInternalInteractionsFeatureCallRule() {
		return getGroupInternalInteractionsFeatureCallAccess().getRule();
	}
	
	//EnvironmentInteractionFeatureCall:
	//	{EnvironmentInteractionFeatureCall} env=[Symbol] '.ENV_INTERACTION.' process=[EnvironmentInteraction] '('
	//	inputs+=Expression? (',' inputs+=Expression)* ')';
	public EnvironmentInteractionFeatureCallElements getEnvironmentInteractionFeatureCallAccess() {
		return pEnvironmentInteractionFeatureCall;
	}
	
	public ParserRule getEnvironmentInteractionFeatureCallRule() {
		return getEnvironmentInteractionFeatureCallAccess().getRule();
	}
	
	//GroupSelfInternalInteractionsFeatureCall:
	//	{GroupSelfInternalInteractionsFeatureCall} 'INT_INTERACTION.' process=[GroupInternalInteraction] '('
	//	inputs+=Expression? (',' inputs+=Expression)* ')';
	public GroupSelfInternalInteractionsFeatureCallElements getGroupSelfInternalInteractionsFeatureCallAccess() {
		return pGroupSelfInternalInteractionsFeatureCall;
	}
	
	public ParserRule getGroupSelfInternalInteractionsFeatureCallRule() {
		return getGroupSelfInternalInteractionsFeatureCallAccess().getRule();
	}
	
	//FunctionFeatureCall:
	//	{FunctionFeatureCall} 'FUNCTION.' process=[Function] '(' inputs+=Expression? (',' inputs+=Expression)* ')';
	public FunctionFeatureCallElements getFunctionFeatureCallAccess() {
		return pFunctionFeatureCall;
	}
	
	public ParserRule getFunctionFeatureCallRule() {
		return getFunctionFeatureCallAccess().getRule();
	}
	
	//BehaviorFeatureCall:
	//	{BehaviorFeatureCall} 'BEHAVIOR.' process=[Behavior] '(' inputs+=Expression? (',' inputs+=Expression)* ')';
	public BehaviorFeatureCallElements getBehaviorFeatureCallAccess() {
		return pBehaviorFeatureCall;
	}
	
	public ParserRule getBehaviorFeatureCallRule() {
		return getBehaviorFeatureCallAccess().getRule();
	}
	
	///**
	// * SubSystem:
	// * name:[SystemType](inputs){};
	// */ SubSystem:
	//	name=ID '[' subsystem_type=SubSystemType ']' '(' functionParameters+=FunctionParameter* '):' '{' ((body+=Field |
	//	body+=Expression | body+=Formula | body+=SelfAssignedFormula) ';')*
	//	'};';
	public SubSystemElements getSubSystemAccess() {
		return pSubSystem;
	}
	
	public ParserRule getSubSystemRule() {
		return getSubSystemAccess().getRule();
	}
	
	//enum SubSystemType:
	//	SELF | SYSTEM;
	public SubSystemTypeElements getSubSystemTypeAccess() {
		return eSubSystemType;
	}
	
	public EnumRule getSubSystemTypeRule() {
		return getSubSystemTypeAccess().getRule();
	}
	
	//SubSystems:
	//	{SubSystems}
	//	'subsystems:' '{'
	//	subSystems+=SubSystem* (subAgents+=Agent | subEnvs+=Environment)* //Should we check to ensure that an agent can't be made up of environments??
	//	'};';
	public SubSystemsElements getSubSystemsAccess() {
		return pSubSystems;
	}
	
	public ParserRule getSubSystemsRule() {
		return getSubSystemsAccess().getRule();
	}
	
	//Type:
	//	PrimitiveType | NonPrimitiveType;
	public TypeElements getTypeAccess() {
		return pType;
	}
	
	public ParserRule getTypeRule() {
		return getTypeAccess().getRule();
	}
	
	//NonPrimitiveType:
	//	Object | Enum;
	public NonPrimitiveTypeElements getNonPrimitiveTypeAccess() {
		return pNonPrimitiveType;
	}
	
	public ParserRule getNonPrimitiveTypeRule() {
		return getNonPrimitiveTypeAccess().getRule();
	}
	
	//PrimitiveType:
	//	IntType | BooleanType | FloatType | NullType | StringType;
	public PrimitiveTypeElements getPrimitiveTypeAccess() {
		return pPrimitiveType;
	}
	
	public ParserRule getPrimitiveTypeRule() {
		return getPrimitiveTypeAccess().getRule();
	}
	
	//IntType:
	//	{IntType} name='int';
	public IntTypeElements getIntTypeAccess() {
		return pIntType;
	}
	
	public ParserRule getIntTypeRule() {
		return getIntTypeAccess().getRule();
	}
	
	//BooleanType:
	//	{BooleanType} name='bool';
	public BooleanTypeElements getBooleanTypeAccess() {
		return pBooleanType;
	}
	
	public ParserRule getBooleanTypeRule() {
		return getBooleanTypeAccess().getRule();
	}
	
	//FloatType:
	//	{FloatType} name='float';
	public FloatTypeElements getFloatTypeAccess() {
		return pFloatType;
	}
	
	public ParserRule getFloatTypeRule() {
		return getFloatTypeAccess().getRule();
	}
	
	//StringType:
	//	{StringType} name='string';
	public StringTypeElements getStringTypeAccess() {
		return pStringType;
	}
	
	public ParserRule getStringTypeRule() {
		return getStringTypeAccess().getRule();
	}
	
	//NullType:
	//	{NullType} name='null';
	public NullTypeElements getNullTypeAccess() {
		return pNullType;
	}
	
	public ParserRule getNullTypeRule() {
		return getNullTypeAccess().getRule();
	}
	
	//BooleanValue ecore::EBoolean:
	//	'true' | 'false';
	public BooleanValueElements getBooleanValueAccess() {
		return pBooleanValue;
	}
	
	public ParserRule getBooleanValueRule() {
		return getBooleanValueAccess().getRule();
	}
	
	//DataTypeDeclaration Symbol:
	//	{DataTypeDeclaration} 'var' initInclude="*"? (type=PrimitiveType | obj=[NonPrimitiveType] (':'
	//	useObj=[NonPrimitiveType] |
	//	':' useType=PrimitiveType |
	//	'<' ('grp.' useGroup=[Group] |
	//	'agt.' useAgent=[Agent] |
	//	'env.' useEnv=[Environment]) '>')?) ':' name=ID ('=' expr=Expression)?;
	public DataTypeDeclarationElements getDataTypeDeclarationAccess() {
		return pDataTypeDeclaration;
	}
	
	public ParserRule getDataTypeDeclarationRule() {
		return getDataTypeDeclarationAccess().getRule();
	}
	
	///**
	// * Expressions
	// */ Formula:
	//	sym=[Symbol] ('.' objField=[Symbol])? '=' expr=Expression;
	public FormulaElements getFormulaAccess() {
		return pFormula;
	}
	
	public ParserRule getFormulaRule() {
		return getFormulaAccess().getRule();
	}
	
	//SelfAssignedFormula:
	//	'self.' ref=[Symbol] ('.' objField=[Symbol])? '=' expr=Expression;
	public SelfAssignedFormulaElements getSelfAssignedFormulaAccess() {
		return pSelfAssignedFormula;
	}
	
	public ParserRule getSelfAssignedFormulaRule() {
		return getSelfAssignedFormulaAccess().getRule();
	}
	
	//Expression:
	//	BooleanExpression | IfStatement | ForLoop | ForEachLoop;
	public ExpressionElements getExpressionAccess() {
		return pExpression;
	}
	
	public ParserRule getExpressionRule() {
		return getExpressionAccess().getRule();
	}
	
	//ForLoop:
	//	'for' '(' (init=(Expression | Formula | Field | SelfAssignedFormula) ';' condition=Expression ';' shifter=(Expression
	//	| Formula))
	//	')' 'do' ((body+=Expression | body+=SelfAssignedFormula | body+=Formula | body+=Field | body+=Raw_Java_Block) ';')+
	//	'endfor';
	public ForLoopElements getForLoopAccess() {
		return pForLoop;
	}
	
	public ParserRule getForLoopRule() {
		return getForLoopAccess().getRule();
	}
	
	//ForEachLoop:
	//	'foreach' '(' (ty=QualifiedName item=ForEachAccess ':' list=Expression) ')' 'do' ((body+=Expression |
	//	body+=SelfAssignedFormula | body+=Formula | body+=Field | body+=Raw_Java_Block) ';')+
	//	'endfor';
	public ForEachLoopElements getForEachLoopAccess() {
		return pForEachLoop;
	}
	
	public ParserRule getForEachLoopRule() {
		return getForEachLoopAccess().getRule();
	}
	
	////TODO: Need scoping for this
	//ForEachAccess Symbol:
	//	name=ID;
	public ForEachAccessElements getForEachAccessAccess() {
		return pForEachAccess;
	}
	
	public ParserRule getForEachAccessRule() {
		return getForEachAccessAccess().getRule();
	}
	
	////TODO: compounded elseifs
	//IfStatement:
	//	'if' '(' condition=Expression ')' 'then' ((then+=Expression | then+=SelfAssignedFormula | then+=Formula | then+=Field)
	//	';')+ (=> 'elseif' elseifexpr+=ElseIfExpr)* (=> 'else' ((elseexp+=Expression | elseexp+=Formula |
	//	elseexp+=SelfAssignedFormula | elseexp+=Field) ';')+)?
	//	'endif';
	public IfStatementElements getIfStatementAccess() {
		return pIfStatement;
	}
	
	public ParserRule getIfStatementRule() {
		return getIfStatementAccess().getRule();
	}
	
	//ElseIfExpr:
	//	{ElseIfExpr}
	//	'(' elseifCond=Expression ')' 'then' (elseifthen+=(Expression | Formula | SelfAssignedFormula | Field) ';')*;
	public ElseIfExprElements getElseIfExprAccess() {
		return pElseIfExpr;
	}
	
	public ParserRule getElseIfExprRule() {
		return getElseIfExprAccess().getRule();
	}
	
	//BooleanExpression Expression:
	//	Equals (({BooleanExpression.left=current} op=("||" | "&&")) right=Equals)*;
	public BooleanExpressionElements getBooleanExpressionAccess() {
		return pBooleanExpression;
	}
	
	public ParserRule getBooleanExpressionRule() {
		return getBooleanExpressionAccess().getRule();
	}
	
	//Equals Expression:
	//	Comparison (({Equals.left=current} op=("==" | "!=")) right=Comparison)*;
	public EqualsElements getEqualsAccess() {
		return pEquals;
	}
	
	public ParserRule getEqualsRule() {
		return getEqualsAccess().getRule();
	}
	
	//Comparison Expression:
	//	Subtraction (({Comparison.left=current} op=('<' | '>' | "<=" | ">=")) right=Subtraction)*;
	public ComparisonElements getComparisonAccess() {
		return pComparison;
	}
	
	public ParserRule getComparisonRule() {
		return getComparisonAccess().getRule();
	}
	
	//Subtraction Expression:
	//	Addition ({Subtraction.left=current} op='-' right=Addition)*;
	public SubtractionElements getSubtractionAccess() {
		return pSubtraction;
	}
	
	public ParserRule getSubtractionRule() {
		return getSubtractionAccess().getRule();
	}
	
	//Addition Expression:
	//	Multiplication ({Addition.left=current} op='+' right=Multiplication)*;
	public AdditionElements getAdditionAccess() {
		return pAddition;
	}
	
	public ParserRule getAdditionRule() {
		return getAdditionAccess().getRule();
	}
	
	//Multiplication Expression:
	//	Prefixed (({Multiplication.left=current} op='*' | {Div.left=current} op='/') right=Prefixed)*;
	public MultiplicationElements getMultiplicationAccess() {
		return pMultiplication;
	}
	
	public ParserRule getMultiplicationRule() {
		return getMultiplicationAccess().getRule();
	}
	
	//Prefixed Expression:
	//	{BooleanNegation} => '!' expression=Prefixed | {ArithmeticSigned} => '-' expression=Prefixed |
	//	/* right associativity */
	//	'(' Expression ')' | Atomic;
	public PrefixedElements getPrefixedAccess() {
		return pPrefixed;
	}
	
	public ParserRule getPrefixedRule() {
		return getPrefixedAccess().getRule();
	}
	
	////TODO: Most of these aren't atomics
	//Atomic Expression:
	//	{NumberLiteral} value=NUMBER | {StringLiteral} value=STRING | {NullTypeLiteral} nulltype=NullType | {BooleanType}
	//	bool=BooleanValue | {TypeRef} type=[Symbol] | {SystemCallObj} sysCall=SystemCall | {FeatureCallExp} func=FeatureCall |
	//	{SelfCallExpr} selfCall=SelfCall | {MacroCall} macroCall=CASL_Macro_Call | {FunctionCallExpr} funcCall=FunctionCall |
	//	{EnumCallExpr} enumCall=EnumCall | {Group_Call} groupCall=Group_Call | {Agent_Call} agentCall=Agent_Call |
	//	{Environment_Call} environmentCall=Environment_Call;
	public AtomicElements getAtomicAccess() {
		return pAtomic;
	}
	
	public ParserRule getAtomicRule() {
		return getAtomicAccess().getRule();
	}
	
	////We have to add Agent
	////TODO: Validation/Scoping, Should this first term be valid? (who just calls this)
	//SelfCall:
	//	{SelfCall}
	//	'self' | 'self.' ref=[Symbol] | 'self.' fc=FunctionCall | 'self.' fec=FeatureCall //Fix 2
	//;
	public SelfCallElements getSelfCallAccess() {
		return pSelfCall;
	}
	
	public ParserRule getSelfCallRule() {
		return getSelfCallAccess().getRule();
	}
	
	////TODO: Validation/Scoping, rename this, 
	//FunctionCall:
	//	{FunctionCall} obj=[Symbol] ('.' func=[Function] '(' inputs+=Expression? (',' inputs+=Expression)* ')' | '.'
	//	fields+=[Symbol] ('.' fields+=[Symbol])*);
	public FunctionCallElements getFunctionCallAccess() {
		return pFunctionCall;
	}
	
	public ParserRule getFunctionCallRule() {
		return getFunctionCallAccess().getRule();
	}
	
	//EnumCall:
	//	'ENUM.' en=[Enum] '.' entype=[Symbol];
	public EnumCallElements getEnumCallAccess() {
		return pEnumCall;
	}
	
	public ParserRule getEnumCallRule() {
		return getEnumCallAccess().getRule();
	}
	
	////TODO: Expand this to access SYSTEM parameters (or not)
	//SystemCall:
	//	{SystemCall} 'SYSTEM.' call=QualifiedNameCall;
	public SystemCallElements getSystemCallAccess() {
		return pSystemCall;
	}
	
	public ParserRule getSystemCallRule() {
		return getSystemCallAccess().getRule();
	}
	
	////TODO: THese should change and become referneces to the whole type
	////This is something that calls each agent of that type
	//Agent_Call:
	//	{Agent_Call} 'AGENT.' agent=[Agent] ('.' qnc=QualifiedNameCall)?;
	public Agent_CallElements getAgent_CallAccess() {
		return pAgent_Call;
	}
	
	public ParserRule getAgent_CallRule() {
		return getAgent_CallAccess().getRule();
	}
	
	//Environment_Call:
	//	{Environment_Call} 'ENVIRONMENT.' env=[Environment] ('.' qnc=QualifiedNameCall)?;
	public Environment_CallElements getEnvironment_CallAccess() {
		return pEnvironment_Call;
	}
	
	public ParserRule getEnvironment_CallRule() {
		return getEnvironment_CallAccess().getRule();
	}
	
	//Group_Call:
	//	{Group_Call} 'GROUP.' grp=[Group] ('.' qnc=QualifiedNameCall)?;
	public Group_CallElements getGroup_CallAccess() {
		return pGroup_Call;
	}
	
	public ParserRule getGroup_CallRule() {
		return getGroup_CallAccess().getRule();
	}
	
	//Entity_Call:
	//	Agent_Call | Environment_Call | Group_Call;
	public Entity_CallElements getEntity_CallAccess() {
		return pEntity_Call;
	}
	
	public ParserRule getEntity_CallRule() {
		return getEntity_CallAccess().getRule();
	}
	
	//Object:
	//	{Object} custom='custom'? 'obj' name=ID ('<' useType=[Object] '>')? ':' '{' (fields+=Field ';' | fields+=Function)*
	//	'};';
	public ObjectElements getObjectAccess() {
		return pObject;
	}
	
	public ParserRule getObjectRule() {
		return getObjectAccess().getRule();
	}
	
	////TODO: AOISUDHAIUSHDIUASHD FUCKING ENUMS
	//Enum:
	//	{Enum} custom='custom'? 'enum' name=ID ':' '{'
	//	enum_fields+=Enum_Field (',' enum_fields+=Enum_Field)*
	//	'};';
	public EnumElements getEnumAccess() {
		return pEnum;
	}
	
	public ParserRule getEnumRule() {
		return getEnumAccess().getRule();
	}
	
	//Enum_Field Symbol:
	//	name=ID;
	public Enum_FieldElements getEnum_FieldAccess() {
		return pEnum_Field;
	}
	
	public ParserRule getEnum_FieldRule() {
		return getEnum_FieldAccess().getRule();
	}
	
	////Special calls a.k.a macros
	//CASL_Macro_Call:
	//	'CASL.' macro=CASL_Macro;
	public CASL_Macro_CallElements getCASL_Macro_CallAccess() {
		return pCASL_Macro_Call;
	}
	
	public ParserRule getCASL_Macro_CallRule() {
		return getCASL_Macro_CallAccess().getRule();
	}
	
	////CASL_MACRO should become it's own DSL (or own library function)
	////Because it will probably be massive (and it also has to line up with stdlib)
	//CASL_Macro:
	//	CASL_Macro_Neighbours | CASL_Macro_FilterAndFunction | CASL_Macro_CountConditions | CASL_Macro_Random |
	//	CASL_Macro_ForEach | CASL_Macro_Print | CASL_Macro_MetricSwitch | CASL_Macro_Populate | CASL_Macro_TODO |
	//	CASL_Macro_Visualize | CASL_Macro_Display | CASL_Macro_Log | CASL_Macro_InitLogger;
	public CASL_MacroElements getCASL_MacroAccess() {
		return pCASL_Macro;
	}
	
	public ParserRule getCASL_MacroRule() {
		return getCASL_MacroAccess().getRule();
	}
	
	//CASL_Macro_Neighbours:
	//	worldType=WorldType '.GetNeighbours[' searchType=[Entity] '](' dist=NUMBER ')';
	public CASL_Macro_NeighboursElements getCASL_Macro_NeighboursAccess() {
		return pCASL_Macro_Neighbours;
	}
	
	public ParserRule getCASL_Macro_NeighboursRule() {
		return getCASL_Macro_NeighboursAccess().getRule();
	}
	
	//CASL_Macro_FilterAndFunction:
	//	"FILTER[" sym=[Symbol] "](" cond=Expression ")" misc=ID;
	public CASL_Macro_FilterAndFunctionElements getCASL_Macro_FilterAndFunctionAccess() {
		return pCASL_Macro_FilterAndFunction;
	}
	
	public ParserRule getCASL_Macro_FilterAndFunctionRule() {
		return getCASL_Macro_FilterAndFunctionAccess().getRule();
	}
	
	//CASL_Macro_CountConditions:
	//	"COUNT[" sym=[Symbol] "](" cond=Expression ")";
	public CASL_Macro_CountConditionsElements getCASL_Macro_CountConditionsAccess() {
		return pCASL_Macro_CountConditions;
	}
	
	public ParserRule getCASL_Macro_CountConditionsRule() {
		return getCASL_Macro_CountConditionsAccess().getRule();
	}
	
	//CASL_Macro_Random:
	//	"RANDOM" '[' type=RandomType '](' low=Expression (',' high=Expression)? ')';
	public CASL_Macro_RandomElements getCASL_Macro_RandomAccess() {
		return pCASL_Macro_Random;
	}
	
	public ParserRule getCASL_Macro_RandomRule() {
		return getCASL_Macro_RandomAccess().getRule();
	}
	
	//CASL_Macro_ForEach:
	//	"FOREACH[" sym=[Symbol] "](" expr=Expression ")";
	public CASL_Macro_ForEachElements getCASL_Macro_ForEachAccess() {
		return pCASL_Macro_ForEach;
	}
	
	public ParserRule getCASL_Macro_ForEachRule() {
		return getCASL_Macro_ForEachAccess().getRule();
	}
	
	//CASL_Macro_Print:
	//	"PRINT(" str=STRING ")";
	public CASL_Macro_PrintElements getCASL_Macro_PrintAccess() {
		return pCASL_Macro_Print;
	}
	
	public ParserRule getCASL_Macro_PrintRule() {
		return getCASL_Macro_PrintAccess().getRule();
	}
	
	//CASL_Macro_InitLogger:
	//	"LOGGER(" mute=BooleanValue ',' toConsole=BooleanValue ',' toFile=BooleanValue (',' filePath=Expression)? ')';
	public CASL_Macro_InitLoggerElements getCASL_Macro_InitLoggerAccess() {
		return pCASL_Macro_InitLogger;
	}
	
	public ParserRule getCASL_Macro_InitLoggerRule() {
		return getCASL_Macro_InitLoggerAccess().getRule();
	}
	
	//CASL_Macro_Log:
	//	"LOG(" str=STRING ")";
	public CASL_Macro_LogElements getCASL_Macro_LogAccess() {
		return pCASL_Macro_Log;
	}
	
	public ParserRule getCASL_Macro_LogRule() {
		return getCASL_Macro_LogAccess().getRule();
	}
	
	////How to deal with model data sending to database and or file
	//CASL_Macro_MetricSwitch:
	//	"METRIC[" sw=BooleanValue "]" ('(' manualUpdates+=Expression ')')?;
	public CASL_Macro_MetricSwitchElements getCASL_Macro_MetricSwitchAccess() {
		return pCASL_Macro_MetricSwitch;
	}
	
	public ParserRule getCASL_Macro_MetricSwitchRule() {
		return getCASL_Macro_MetricSwitchAccess().getRule();
	}
	
	//CASL_Macro_TODO:
	//	"TODO:" str=STRING ';';
	public CASL_Macro_TODOElements getCASL_Macro_TODOAccess() {
		return pCASL_Macro_TODO;
	}
	
	public ParserRule getCASL_Macro_TODORule() {
		return getCASL_Macro_TODOAccess().getRule();
	}
	
	////Expression quite the way to do this, maybe it needs to be a heavily scoped function body with some extras?
	////First 2 terms should be the other way around
	////What the call should look like
	///**
	// * 
	// 	CASL.POPULATE[LAYOUT](Layout init params)[ENTITY](Entity init params);
	// 	* LAYOUT: should be a reference to a LAYOUT type 
	// 	* Layout init params: infinite list of expressions that matches the layouts init function
	// 	* ENTITY: Should be a type of entity that exists in the model
	// 	* Entity init params: infinite list of expressions that matches the entities init parameters
	//*/ CASL_Macro_Populate:
	//	"POPULATE" '[' layoutLocation=Expression '](' layoutInitParams+=Expression? (',' layoutInitParams+=Expression)* ')['
	//	count=Expression ',' ent=Entity_Call '](' entityInitParams+=Expression? (',' entityInitParams+=Expression)* ')';
	public CASL_Macro_PopulateElements getCASL_Macro_PopulateAccess() {
		return pCASL_Macro_Populate;
	}
	
	public ParserRule getCASL_Macro_PopulateRule() {
		return getCASL_Macro_PopulateAccess().getRule();
	}
	
	////TODO: Fill this out
	///**
	// * CASL.VISUALIZE[ProjectionPosition][ProjectionColourUpdater (how to manage this for diff var types)]
	// [ProjectionShapeUpdater (same as above)]
	// * When this is called, the agent will appear in the simulation
	// * 
	// *
	// */ CASL_Macro_Visualize:
	//	"VISUALIZE" '[' projectionPosition=Expression ']' '[' projectionColourUpdater=Expression ']' '['
	//	projectionShape=STRING ']';
	public CASL_Macro_VisualizeElements getCASL_Macro_VisualizeAccess() {
		return pCASL_Macro_Visualize;
	}
	
	public ParserRule getCASL_Macro_VisualizeRule() {
		return getCASL_Macro_VisualizeAccess().getRule();
	}
	
	////So this doesn't quite work.
	////We need to visualise the environment (or group) and then configure how the entities contained within are visualized
	////The LayoutParameters object could contain some useful feautres (or at least be used to convey things)
	////LayoutParameters.layoutType gives us A LOT of useful info (this means we'd have to have a special generator for each rep type)
	////Should there be 2 visualize call types: 1 for env, 1 for grp/agt?
	////This takes the ENUM representationType stored in LayoutParameter, this means there'll have to be some degree of validation
	////& scoping (probably)
	////It takes the representationType and then a list of layouts to project (they all have to be the same type as the repType?
	////Solution:
	//CASL_Macro_Display:
	//	"DISPLAY" '[' representationType=WorldType ']' '(' toProject+=Expression (',' toProject+=Expression)? ')';
	public CASL_Macro_DisplayElements getCASL_Macro_DisplayAccess() {
		return pCASL_Macro_Display;
	}
	
	public ParserRule getCASL_Macro_DisplayRule() {
		return getCASL_Macro_DisplayAccess().getRule();
	}
	
	//enum WorldType:
	//	GRID | TORUS | BOUND | GRAPH | NETWORK | GIS | MESH3D | CONTINUOUS;
	public WorldTypeElements getWorldTypeAccess() {
		return eWorldType;
	}
	
	public EnumRule getWorldTypeRule() {
		return getWorldTypeAccess().getRule();
	}
	
	//enum RandomType:
	//	INT | FLOAT | BOOL | VECTOR2;
	public RandomTypeElements getRandomTypeAccess() {
		return eRandomType;
	}
	
	public EnumRule getRandomTypeRule() {
		return getRandomTypeAccess().getRule();
	}
	
	///*****Java 8-isms *****/ /*
	// * We could also have a class that parses raw Java functions with
	// * wildcards etc
	// */ Raw_Java_Block:
	//	{Raw_Java_Block}
	//	"raw-java" name=ID ':' '{'
	//	rawStatements+=Raw_Java*
	//	//		rj = Raw_Java
	//	"}";
	public Raw_Java_BlockElements getRaw_Java_BlockAccess() {
		return pRaw_Java_Block;
	}
	
	public ParserRule getRaw_Java_BlockRule() {
		return getRaw_Java_BlockAccess().getRule();
	}
	
	////Raw_Java: => text += (ID|ANY_OTHER)+;
	//Raw_Java:
	//	STRING;
	public Raw_JavaElements getRaw_JavaAccess() {
		return pRaw_Java;
	}
	
	public ParserRule getRaw_JavaRule() {
		return getRaw_JavaAccess().getRule();
	}
	
	///**
	// * What exactly does this do?
	// */ Feature:
	//	type=[Type|QualifiedName] (':' name=ID)? ('=' val=AbstractElement)? (';' | ',');
	public FeatureElements getFeatureAccess() {
		return pFeature;
	}
	
	public ParserRule getFeatureRule() {
		return getFeatureAccess().getRule();
	}
	
	///**
	// * Imports, reusables, commons, etc...
	// */ AbstractElement:
	//	PackageDeclaration | NonPrimitiveType | Import //| GenericFunction
	//;
	public AbstractElementElements getAbstractElementAccess() {
		return pAbstractElement;
	}
	
	public ParserRule getAbstractElementRule() {
		return getAbstractElementAccess().getRule();
	}
	
	//PackageDeclaration:
	//	'package' name=QualifiedName ':' '{'
	//	elements+=AbstractElement*
	//	'};';
	public PackageDeclarationElements getPackageDeclarationAccess() {
		return pPackageDeclaration;
	}
	
	public ParserRule getPackageDeclarationRule() {
		return getPackageDeclarationAccess().getRule();
	}
	
	//QualifiedName:
	//	ID ('.' ID)*;
	public QualifiedNameElements getQualifiedNameAccess() {
		return pQualifiedName;
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}
	
	//QualifiedNameCall:
	//	ID ('.' ID | '(' QualifiedNameCall (',' QualifiedNameCall)* ')' | '.()' | '->')*;
	public QualifiedNameCallElements getQualifiedNameCallAccess() {
		return pQualifiedNameCall;
	}
	
	public ParserRule getQualifiedNameCallRule() {
		return getQualifiedNameCallAccess().getRule();
	}
	
	//Import:
	//	'import' importedNamespace=QualifiedNameWithWildcard ';';
	public ImportElements getImportAccess() {
		return pImport;
	}
	
	public ParserRule getImportRule() {
		return getImportAccess().getRule();
	}
	
	//QualifiedNameWithWildcard:
	//	QualifiedName '.*'?;
	public QualifiedNameWithWildcardElements getQualifiedNameWithWildcardAccess() {
		return pQualifiedNameWithWildcard;
	}
	
	public ParserRule getQualifiedNameWithWildcardRule() {
		return getQualifiedNameWithWildcardAccess().getRule();
	}
	
	//terminal NUMBER returns ecore::EBigDecimal:
	//	'0'..'9'* ('.' '0'..'9'+)?;
	public TerminalRule getNUMBERRule() {
		return tNUMBER;
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return tID;
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return tSTRING;
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return tML_COMMENT;
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return tSL_COMMENT;
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return tWS;
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return tANY_OTHER;
	}
}
