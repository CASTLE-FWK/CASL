/**
 * generated by Xtext 2.12.0
 */
package uofa.lbirdsey.castle.casl.util;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.common.notify.impl.AdapterFactoryImpl;

import org.eclipse.emf.ecore.EObject;

import uofa.lbirdsey.castle.casl.AbstractElement;
import uofa.lbirdsey.castle.casl.AdaptiveProcess;
import uofa.lbirdsey.castle.casl.AdaptiveProcessFeatureCall;
import uofa.lbirdsey.castle.casl.AdaptiveProcesses;
import uofa.lbirdsey.castle.casl.Addition;
import uofa.lbirdsey.castle.casl.Agent;
import uofa.lbirdsey.castle.casl.AgentFieldReference;
import uofa.lbirdsey.castle.casl.AgentInteraction;
import uofa.lbirdsey.castle.casl.AgentInteractionFeatureCall;
import uofa.lbirdsey.castle.casl.AgentInteractions;
import uofa.lbirdsey.castle.casl.Agent_Call;
import uofa.lbirdsey.castle.casl.Agent_Type_Name;
import uofa.lbirdsey.castle.casl.Agent_Types;
import uofa.lbirdsey.castle.casl.ArithmeticSigned;
import uofa.lbirdsey.castle.casl.Behavior;
import uofa.lbirdsey.castle.casl.BehaviorFeatureCall;
import uofa.lbirdsey.castle.casl.Behaviors;
import uofa.lbirdsey.castle.casl.BooleanExpression;
import uofa.lbirdsey.castle.casl.BooleanNegation;
import uofa.lbirdsey.castle.casl.BooleanType;
import uofa.lbirdsey.castle.casl.CASL_Macro;
import uofa.lbirdsey.castle.casl.CASL_Macro_Call;
import uofa.lbirdsey.castle.casl.CASL_Macro_CountConditions;
import uofa.lbirdsey.castle.casl.CASL_Macro_FilterAndFunction;
import uofa.lbirdsey.castle.casl.CASL_Macro_ForEach;
import uofa.lbirdsey.castle.casl.CASL_Macro_MetricSwitch;
import uofa.lbirdsey.castle.casl.CASL_Macro_Neighbours;
import uofa.lbirdsey.castle.casl.CASL_Macro_Populate;
import uofa.lbirdsey.castle.casl.CASL_Macro_Print;
import uofa.lbirdsey.castle.casl.CASL_Macro_Random;
import uofa.lbirdsey.castle.casl.CASL_Macro_TODO;
import uofa.lbirdsey.castle.casl.CAS_Rules;
import uofa.lbirdsey.castle.casl.Casl;
import uofa.lbirdsey.castle.casl.CaslPackage;
import uofa.lbirdsey.castle.casl.Comparison;
import uofa.lbirdsey.castle.casl.Concern;
import uofa.lbirdsey.castle.casl.DataTypeDeclaration;
import uofa.lbirdsey.castle.casl.Div;
import uofa.lbirdsey.castle.casl.EGInteraction;
import uofa.lbirdsey.castle.casl.EGInteractions;
import uofa.lbirdsey.castle.casl.ElseIfExpr;
import uofa.lbirdsey.castle.casl.End_Condition;
import uofa.lbirdsey.castle.casl.End_Conditions;
import uofa.lbirdsey.castle.casl.Entity;
import uofa.lbirdsey.castle.casl.Entity_Feature;
import uofa.lbirdsey.castle.casl.EnumCall;
import uofa.lbirdsey.castle.casl.EnumCallExpr;
import uofa.lbirdsey.castle.casl.Environment;
import uofa.lbirdsey.castle.casl.EnvironmentFieldReference;
import uofa.lbirdsey.castle.casl.EnvironmentInteraction;
import uofa.lbirdsey.castle.casl.EnvironmentInteractionFeatureCall;
import uofa.lbirdsey.castle.casl.EnvironmentInteractions;
import uofa.lbirdsey.castle.casl.Environment_Call;
import uofa.lbirdsey.castle.casl.Environment_Rules;
import uofa.lbirdsey.castle.casl.Environment_Type_Name;
import uofa.lbirdsey.castle.casl.Environment_Types;
import uofa.lbirdsey.castle.casl.Equals;
import uofa.lbirdsey.castle.casl.Expression;
import uofa.lbirdsey.castle.casl.ExternalInteractionFeatureCall;
import uofa.lbirdsey.castle.casl.Feature;
import uofa.lbirdsey.castle.casl.FeatureCall;
import uofa.lbirdsey.castle.casl.FeatureCallExp;
import uofa.lbirdsey.castle.casl.Field;
import uofa.lbirdsey.castle.casl.FloatType;
import uofa.lbirdsey.castle.casl.ForEachLoop;
import uofa.lbirdsey.castle.casl.ForLoop;
import uofa.lbirdsey.castle.casl.Formula;
import uofa.lbirdsey.castle.casl.Function;
import uofa.lbirdsey.castle.casl.FunctionCall;
import uofa.lbirdsey.castle.casl.FunctionCallExpr;
import uofa.lbirdsey.castle.casl.FunctionFeatureCall;
import uofa.lbirdsey.castle.casl.FunctionParameter;
import uofa.lbirdsey.castle.casl.Functions;
import uofa.lbirdsey.castle.casl.Group;
import uofa.lbirdsey.castle.casl.GroupExternalInteraction;
import uofa.lbirdsey.castle.casl.GroupExternalInteractionFeatureCall;
import uofa.lbirdsey.castle.casl.GroupExternalInteractions;
import uofa.lbirdsey.castle.casl.GroupFieldReference;
import uofa.lbirdsey.castle.casl.GroupInternalInteraction;
import uofa.lbirdsey.castle.casl.GroupInternalInteractions;
import uofa.lbirdsey.castle.casl.GroupInternalInteractionsFeatureCall;
import uofa.lbirdsey.castle.casl.GroupSelfInternalInteractionsFeatureCall;
import uofa.lbirdsey.castle.casl.Group_Call;
import uofa.lbirdsey.castle.casl.Group_Rules;
import uofa.lbirdsey.castle.casl.Group_Type_Name;
import uofa.lbirdsey.castle.casl.Group_Types;
import uofa.lbirdsey.castle.casl.IfStatement;
import uofa.lbirdsey.castle.casl.Import;
import uofa.lbirdsey.castle.casl.IntType;
import uofa.lbirdsey.castle.casl.Interaction;
import uofa.lbirdsey.castle.casl.InteractionFeatureCall;
import uofa.lbirdsey.castle.casl.InteractionTriggerParameter;
import uofa.lbirdsey.castle.casl.Interactions;
import uofa.lbirdsey.castle.casl.MacroCall;
import uofa.lbirdsey.castle.casl.Multiplication;
import uofa.lbirdsey.castle.casl.NonPrimitiveType;
import uofa.lbirdsey.castle.casl.NullType;
import uofa.lbirdsey.castle.casl.NullTypeLiteral;
import uofa.lbirdsey.castle.casl.NumberLiteral;
import uofa.lbirdsey.castle.casl.PackageDeclaration;
import uofa.lbirdsey.castle.casl.Parameters;
import uofa.lbirdsey.castle.casl.PrimitiveType;
import uofa.lbirdsey.castle.casl.Raw_Java_Block;
import uofa.lbirdsey.castle.casl.SelfAssignedFormula;
import uofa.lbirdsey.castle.casl.SelfCall;
import uofa.lbirdsey.castle.casl.SelfCallExpr;
import uofa.lbirdsey.castle.casl.State_Block_Refs;
import uofa.lbirdsey.castle.casl.StringLiteral;
import uofa.lbirdsey.castle.casl.StringType;
import uofa.lbirdsey.castle.casl.SubSystem;
import uofa.lbirdsey.castle.casl.SubSystems;
import uofa.lbirdsey.castle.casl.Subtraction;
import uofa.lbirdsey.castle.casl.Symbol;
import uofa.lbirdsey.castle.casl.SystemCall;
import uofa.lbirdsey.castle.casl.SystemCallObj;
import uofa.lbirdsey.castle.casl.Type;
import uofa.lbirdsey.castle.casl.TypeRef;

/**
 * <!-- begin-user-doc -->
 * The <b>Adapter Factory</b> for the model.
 * It provides an adapter <code>createXXX</code> method for each class of the model.
 * <!-- end-user-doc -->
 * @see uofa.lbirdsey.castle.casl.CaslPackage
 * @generated
 */
public class CaslAdapterFactory extends AdapterFactoryImpl
{
  /**
   * The cached model package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static CaslPackage modelPackage;

  /**
   * Creates an instance of the adapter factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CaslAdapterFactory()
  {
    if (modelPackage == null)
    {
      modelPackage = CaslPackage.eINSTANCE;
    }
  }

  /**
   * Returns whether this factory is applicable for the type of the object.
   * <!-- begin-user-doc -->
   * This implementation returns <code>true</code> if the object is either the model's package or is an instance object of the model.
   * <!-- end-user-doc -->
   * @return whether this factory is applicable for the type of the object.
   * @generated
   */
  @Override
  public boolean isFactoryForType(Object object)
  {
    if (object == modelPackage)
    {
      return true;
    }
    if (object instanceof EObject)
    {
      return ((EObject)object).eClass().getEPackage() == modelPackage;
    }
    return false;
  }

  /**
   * The switch that delegates to the <code>createXXX</code> methods.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CaslSwitch<Adapter> modelSwitch =
    new CaslSwitch<Adapter>()
    {
      @Override
      public Adapter caseCasl(Casl object)
      {
        return createCaslAdapter();
      }
      @Override
      public Adapter caseSystem(uofa.lbirdsey.castle.casl.System object)
      {
        return createSystemAdapter();
      }
      @Override
      public Adapter caseAgent_Types(Agent_Types object)
      {
        return createAgent_TypesAdapter();
      }
      @Override
      public Adapter caseAgent_Type_Name(Agent_Type_Name object)
      {
        return createAgent_Type_NameAdapter();
      }
      @Override
      public Adapter caseEnvironment_Types(Environment_Types object)
      {
        return createEnvironment_TypesAdapter();
      }
      @Override
      public Adapter caseEnvironment_Type_Name(Environment_Type_Name object)
      {
        return createEnvironment_Type_NameAdapter();
      }
      @Override
      public Adapter caseEnvironment_Rules(Environment_Rules object)
      {
        return createEnvironment_RulesAdapter();
      }
      @Override
      public Adapter caseGroup_Types(Group_Types object)
      {
        return createGroup_TypesAdapter();
      }
      @Override
      public Adapter caseGroup_Type_Name(Group_Type_Name object)
      {
        return createGroup_Type_NameAdapter();
      }
      @Override
      public Adapter caseEnd_Conditions(End_Conditions object)
      {
        return createEnd_ConditionsAdapter();
      }
      @Override
      public Adapter caseEnd_Condition(End_Condition object)
      {
        return createEnd_ConditionAdapter();
      }
      @Override
      public Adapter caseCAS_Rules(CAS_Rules object)
      {
        return createCAS_RulesAdapter();
      }
      @Override
      public Adapter caseEntity(Entity object)
      {
        return createEntityAdapter();
      }
      @Override
      public Adapter caseEntity_Feature(Entity_Feature object)
      {
        return createEntity_FeatureAdapter();
      }
      @Override
      public Adapter caseAgent(Agent object)
      {
        return createAgentAdapter();
      }
      @Override
      public Adapter caseEnvironment(Environment object)
      {
        return createEnvironmentAdapter();
      }
      @Override
      public Adapter caseGroup(Group object)
      {
        return createGroupAdapter();
      }
      @Override
      public Adapter caseGroup_Rules(Group_Rules object)
      {
        return createGroup_RulesAdapter();
      }
      @Override
      public Adapter caseGroupExternalInteractions(GroupExternalInteractions object)
      {
        return createGroupExternalInteractionsAdapter();
      }
      @Override
      public Adapter caseGroupExternalInteraction(GroupExternalInteraction object)
      {
        return createGroupExternalInteractionAdapter();
      }
      @Override
      public Adapter caseGroupInternalInteractions(GroupInternalInteractions object)
      {
        return createGroupInternalInteractionsAdapter();
      }
      @Override
      public Adapter caseGroupInternalInteraction(GroupInternalInteraction object)
      {
        return createGroupInternalInteractionAdapter();
      }
      @Override
      public Adapter caseParameters(Parameters object)
      {
        return createParametersAdapter();
      }
      @Override
      public Adapter caseField(Field object)
      {
        return createFieldAdapter();
      }
      @Override
      public Adapter caseSymbol(Symbol object)
      {
        return createSymbolAdapter();
      }
      @Override
      public Adapter caseFunction(Function object)
      {
        return createFunctionAdapter();
      }
      @Override
      public Adapter caseFunctions(Functions object)
      {
        return createFunctionsAdapter();
      }
      @Override
      public Adapter caseConcern(Concern object)
      {
        return createConcernAdapter();
      }
      @Override
      public Adapter caseState_Block_Refs(State_Block_Refs object)
      {
        return createState_Block_RefsAdapter();
      }
      @Override
      public Adapter caseBehavior(Behavior object)
      {
        return createBehaviorAdapter();
      }
      @Override
      public Adapter caseBehaviors(Behaviors object)
      {
        return createBehaviorsAdapter();
      }
      @Override
      public Adapter caseInteraction(Interaction object)
      {
        return createInteractionAdapter();
      }
      @Override
      public Adapter caseAgentInteractions(AgentInteractions object)
      {
        return createAgentInteractionsAdapter();
      }
      @Override
      public Adapter caseInteractions(Interactions object)
      {
        return createInteractionsAdapter();
      }
      @Override
      public Adapter caseEnvironmentInteractions(EnvironmentInteractions object)
      {
        return createEnvironmentInteractionsAdapter();
      }
      @Override
      public Adapter caseEGInteractions(EGInteractions object)
      {
        return createEGInteractionsAdapter();
      }
      @Override
      public Adapter caseInteractionTriggerParameter(InteractionTriggerParameter object)
      {
        return createInteractionTriggerParameterAdapter();
      }
      @Override
      public Adapter caseAdaptiveProcess(AdaptiveProcess object)
      {
        return createAdaptiveProcessAdapter();
      }
      @Override
      public Adapter caseAdaptiveProcesses(AdaptiveProcesses object)
      {
        return createAdaptiveProcessesAdapter();
      }
      @Override
      public Adapter caseFeatureCall(FeatureCall object)
      {
        return createFeatureCallAdapter();
      }
      @Override
      public Adapter caseAdaptiveProcessFeatureCall(AdaptiveProcessFeatureCall object)
      {
        return createAdaptiveProcessFeatureCallAdapter();
      }
      @Override
      public Adapter caseInteractionFeatureCall(InteractionFeatureCall object)
      {
        return createInteractionFeatureCallAdapter();
      }
      @Override
      public Adapter caseAgentInteractionFeatureCall(AgentInteractionFeatureCall object)
      {
        return createAgentInteractionFeatureCallAdapter();
      }
      @Override
      public Adapter caseGroupExternalInteractionFeatureCall(GroupExternalInteractionFeatureCall object)
      {
        return createGroupExternalInteractionFeatureCallAdapter();
      }
      @Override
      public Adapter caseExternalInteractionFeatureCall(ExternalInteractionFeatureCall object)
      {
        return createExternalInteractionFeatureCallAdapter();
      }
      @Override
      public Adapter caseGroupInternalInteractionsFeatureCall(GroupInternalInteractionsFeatureCall object)
      {
        return createGroupInternalInteractionsFeatureCallAdapter();
      }
      @Override
      public Adapter caseEnvironmentInteractionFeatureCall(EnvironmentInteractionFeatureCall object)
      {
        return createEnvironmentInteractionFeatureCallAdapter();
      }
      @Override
      public Adapter caseGroupSelfInternalInteractionsFeatureCall(GroupSelfInternalInteractionsFeatureCall object)
      {
        return createGroupSelfInternalInteractionsFeatureCallAdapter();
      }
      @Override
      public Adapter caseFunctionFeatureCall(FunctionFeatureCall object)
      {
        return createFunctionFeatureCallAdapter();
      }
      @Override
      public Adapter caseBehaviorFeatureCall(BehaviorFeatureCall object)
      {
        return createBehaviorFeatureCallAdapter();
      }
      @Override
      public Adapter caseSubSystem(SubSystem object)
      {
        return createSubSystemAdapter();
      }
      @Override
      public Adapter caseSubSystems(SubSystems object)
      {
        return createSubSystemsAdapter();
      }
      @Override
      public Adapter caseType(Type object)
      {
        return createTypeAdapter();
      }
      @Override
      public Adapter caseNonPrimitiveType(NonPrimitiveType object)
      {
        return createNonPrimitiveTypeAdapter();
      }
      @Override
      public Adapter casePrimitiveType(PrimitiveType object)
      {
        return createPrimitiveTypeAdapter();
      }
      @Override
      public Adapter caseIntType(IntType object)
      {
        return createIntTypeAdapter();
      }
      @Override
      public Adapter caseBooleanType(BooleanType object)
      {
        return createBooleanTypeAdapter();
      }
      @Override
      public Adapter caseFloatType(FloatType object)
      {
        return createFloatTypeAdapter();
      }
      @Override
      public Adapter caseStringType(StringType object)
      {
        return createStringTypeAdapter();
      }
      @Override
      public Adapter caseNullType(NullType object)
      {
        return createNullTypeAdapter();
      }
      @Override
      public Adapter caseFormula(Formula object)
      {
        return createFormulaAdapter();
      }
      @Override
      public Adapter caseSelfAssignedFormula(SelfAssignedFormula object)
      {
        return createSelfAssignedFormulaAdapter();
      }
      @Override
      public Adapter caseExpression(Expression object)
      {
        return createExpressionAdapter();
      }
      @Override
      public Adapter caseForLoop(ForLoop object)
      {
        return createForLoopAdapter();
      }
      @Override
      public Adapter caseForEachLoop(ForEachLoop object)
      {
        return createForEachLoopAdapter();
      }
      @Override
      public Adapter caseIfStatement(IfStatement object)
      {
        return createIfStatementAdapter();
      }
      @Override
      public Adapter caseElseIfExpr(ElseIfExpr object)
      {
        return createElseIfExprAdapter();
      }
      @Override
      public Adapter caseSelfCall(SelfCall object)
      {
        return createSelfCallAdapter();
      }
      @Override
      public Adapter caseFunctionCall(FunctionCall object)
      {
        return createFunctionCallAdapter();
      }
      @Override
      public Adapter caseEnumCall(EnumCall object)
      {
        return createEnumCallAdapter();
      }
      @Override
      public Adapter caseSystemCall(SystemCall object)
      {
        return createSystemCallAdapter();
      }
      @Override
      public Adapter caseAgent_Call(Agent_Call object)
      {
        return createAgent_CallAdapter();
      }
      @Override
      public Adapter caseEnvironment_Call(Environment_Call object)
      {
        return createEnvironment_CallAdapter();
      }
      @Override
      public Adapter caseGroup_Call(Group_Call object)
      {
        return createGroup_CallAdapter();
      }
      @Override
      public Adapter caseObject(uofa.lbirdsey.castle.casl.Object object)
      {
        return createObjectAdapter();
      }
      @Override
      public Adapter caseEnum(uofa.lbirdsey.castle.casl.Enum object)
      {
        return createEnumAdapter();
      }
      @Override
      public Adapter caseCASL_Macro_Call(CASL_Macro_Call object)
      {
        return createCASL_Macro_CallAdapter();
      }
      @Override
      public Adapter caseCASL_Macro(CASL_Macro object)
      {
        return createCASL_MacroAdapter();
      }
      @Override
      public Adapter caseCASL_Macro_Neighbours(CASL_Macro_Neighbours object)
      {
        return createCASL_Macro_NeighboursAdapter();
      }
      @Override
      public Adapter caseCASL_Macro_FilterAndFunction(CASL_Macro_FilterAndFunction object)
      {
        return createCASL_Macro_FilterAndFunctionAdapter();
      }
      @Override
      public Adapter caseCASL_Macro_CountConditions(CASL_Macro_CountConditions object)
      {
        return createCASL_Macro_CountConditionsAdapter();
      }
      @Override
      public Adapter caseCASL_Macro_Random(CASL_Macro_Random object)
      {
        return createCASL_Macro_RandomAdapter();
      }
      @Override
      public Adapter caseCASL_Macro_ForEach(CASL_Macro_ForEach object)
      {
        return createCASL_Macro_ForEachAdapter();
      }
      @Override
      public Adapter caseCASL_Macro_Print(CASL_Macro_Print object)
      {
        return createCASL_Macro_PrintAdapter();
      }
      @Override
      public Adapter caseCASL_Macro_MetricSwitch(CASL_Macro_MetricSwitch object)
      {
        return createCASL_Macro_MetricSwitchAdapter();
      }
      @Override
      public Adapter caseCASL_Macro_TODO(CASL_Macro_TODO object)
      {
        return createCASL_Macro_TODOAdapter();
      }
      @Override
      public Adapter caseCASL_Macro_Populate(CASL_Macro_Populate object)
      {
        return createCASL_Macro_PopulateAdapter();
      }
      @Override
      public Adapter caseRaw_Java_Block(Raw_Java_Block object)
      {
        return createRaw_Java_BlockAdapter();
      }
      @Override
      public Adapter caseFeature(Feature object)
      {
        return createFeatureAdapter();
      }
      @Override
      public Adapter caseAbstractElement(AbstractElement object)
      {
        return createAbstractElementAdapter();
      }
      @Override
      public Adapter casePackageDeclaration(PackageDeclaration object)
      {
        return createPackageDeclarationAdapter();
      }
      @Override
      public Adapter caseImport(Import object)
      {
        return createImportAdapter();
      }
      @Override
      public Adapter caseAgentFieldReference(AgentFieldReference object)
      {
        return createAgentFieldReferenceAdapter();
      }
      @Override
      public Adapter caseEnvironmentFieldReference(EnvironmentFieldReference object)
      {
        return createEnvironmentFieldReferenceAdapter();
      }
      @Override
      public Adapter caseGroupFieldReference(GroupFieldReference object)
      {
        return createGroupFieldReferenceAdapter();
      }
      @Override
      public Adapter caseFunctionParameter(FunctionParameter object)
      {
        return createFunctionParameterAdapter();
      }
      @Override
      public Adapter caseAgentInteraction(AgentInteraction object)
      {
        return createAgentInteractionAdapter();
      }
      @Override
      public Adapter caseEnvironmentInteraction(EnvironmentInteraction object)
      {
        return createEnvironmentInteractionAdapter();
      }
      @Override
      public Adapter caseEGInteraction(EGInteraction object)
      {
        return createEGInteractionAdapter();
      }
      @Override
      public Adapter caseDataTypeDeclaration(DataTypeDeclaration object)
      {
        return createDataTypeDeclarationAdapter();
      }
      @Override
      public Adapter caseBooleanExpression(BooleanExpression object)
      {
        return createBooleanExpressionAdapter();
      }
      @Override
      public Adapter caseEquals(Equals object)
      {
        return createEqualsAdapter();
      }
      @Override
      public Adapter caseComparison(Comparison object)
      {
        return createComparisonAdapter();
      }
      @Override
      public Adapter caseSubtraction(Subtraction object)
      {
        return createSubtractionAdapter();
      }
      @Override
      public Adapter caseAddition(Addition object)
      {
        return createAdditionAdapter();
      }
      @Override
      public Adapter caseMultiplication(Multiplication object)
      {
        return createMultiplicationAdapter();
      }
      @Override
      public Adapter caseDiv(Div object)
      {
        return createDivAdapter();
      }
      @Override
      public Adapter caseBooleanNegation(BooleanNegation object)
      {
        return createBooleanNegationAdapter();
      }
      @Override
      public Adapter caseArithmeticSigned(ArithmeticSigned object)
      {
        return createArithmeticSignedAdapter();
      }
      @Override
      public Adapter caseNumberLiteral(NumberLiteral object)
      {
        return createNumberLiteralAdapter();
      }
      @Override
      public Adapter caseStringLiteral(StringLiteral object)
      {
        return createStringLiteralAdapter();
      }
      @Override
      public Adapter caseNullTypeLiteral(NullTypeLiteral object)
      {
        return createNullTypeLiteralAdapter();
      }
      @Override
      public Adapter caseTypeRef(TypeRef object)
      {
        return createTypeRefAdapter();
      }
      @Override
      public Adapter caseSystemCallObj(SystemCallObj object)
      {
        return createSystemCallObjAdapter();
      }
      @Override
      public Adapter caseFeatureCallExp(FeatureCallExp object)
      {
        return createFeatureCallExpAdapter();
      }
      @Override
      public Adapter caseSelfCallExpr(SelfCallExpr object)
      {
        return createSelfCallExprAdapter();
      }
      @Override
      public Adapter caseMacroCall(MacroCall object)
      {
        return createMacroCallAdapter();
      }
      @Override
      public Adapter caseFunctionCallExpr(FunctionCallExpr object)
      {
        return createFunctionCallExprAdapter();
      }
      @Override
      public Adapter caseEnumCallExpr(EnumCallExpr object)
      {
        return createEnumCallExprAdapter();
      }
      @Override
      public Adapter defaultCase(EObject object)
      {
        return createEObjectAdapter();
      }
    };

  /**
   * Creates an adapter for the <code>target</code>.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param target the object to adapt.
   * @return the adapter for the <code>target</code>.
   * @generated
   */
  @Override
  public Adapter createAdapter(Notifier target)
  {
    return modelSwitch.doSwitch((EObject)target);
  }


  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.Casl <em>Casl</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.Casl
   * @generated
   */
  public Adapter createCaslAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.System <em>System</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.System
   * @generated
   */
  public Adapter createSystemAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.Agent_Types <em>Agent Types</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.Agent_Types
   * @generated
   */
  public Adapter createAgent_TypesAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.Agent_Type_Name <em>Agent Type Name</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.Agent_Type_Name
   * @generated
   */
  public Adapter createAgent_Type_NameAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.Environment_Types <em>Environment Types</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.Environment_Types
   * @generated
   */
  public Adapter createEnvironment_TypesAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.Environment_Type_Name <em>Environment Type Name</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.Environment_Type_Name
   * @generated
   */
  public Adapter createEnvironment_Type_NameAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.Environment_Rules <em>Environment Rules</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.Environment_Rules
   * @generated
   */
  public Adapter createEnvironment_RulesAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.Group_Types <em>Group Types</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.Group_Types
   * @generated
   */
  public Adapter createGroup_TypesAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.Group_Type_Name <em>Group Type Name</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.Group_Type_Name
   * @generated
   */
  public Adapter createGroup_Type_NameAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.End_Conditions <em>End Conditions</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.End_Conditions
   * @generated
   */
  public Adapter createEnd_ConditionsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.End_Condition <em>End Condition</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.End_Condition
   * @generated
   */
  public Adapter createEnd_ConditionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.CAS_Rules <em>CAS Rules</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.CAS_Rules
   * @generated
   */
  public Adapter createCAS_RulesAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.Entity <em>Entity</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.Entity
   * @generated
   */
  public Adapter createEntityAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.Entity_Feature <em>Entity Feature</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.Entity_Feature
   * @generated
   */
  public Adapter createEntity_FeatureAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.Agent <em>Agent</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.Agent
   * @generated
   */
  public Adapter createAgentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.Environment <em>Environment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.Environment
   * @generated
   */
  public Adapter createEnvironmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.Group <em>Group</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.Group
   * @generated
   */
  public Adapter createGroupAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.Group_Rules <em>Group Rules</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.Group_Rules
   * @generated
   */
  public Adapter createGroup_RulesAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.GroupExternalInteractions <em>Group External Interactions</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.GroupExternalInteractions
   * @generated
   */
  public Adapter createGroupExternalInteractionsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.GroupExternalInteraction <em>Group External Interaction</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.GroupExternalInteraction
   * @generated
   */
  public Adapter createGroupExternalInteractionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.GroupInternalInteractions <em>Group Internal Interactions</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.GroupInternalInteractions
   * @generated
   */
  public Adapter createGroupInternalInteractionsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.GroupInternalInteraction <em>Group Internal Interaction</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.GroupInternalInteraction
   * @generated
   */
  public Adapter createGroupInternalInteractionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.Parameters <em>Parameters</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.Parameters
   * @generated
   */
  public Adapter createParametersAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.Field <em>Field</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.Field
   * @generated
   */
  public Adapter createFieldAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.Symbol <em>Symbol</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.Symbol
   * @generated
   */
  public Adapter createSymbolAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.Function <em>Function</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.Function
   * @generated
   */
  public Adapter createFunctionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.Functions <em>Functions</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.Functions
   * @generated
   */
  public Adapter createFunctionsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.Concern <em>Concern</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.Concern
   * @generated
   */
  public Adapter createConcernAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.State_Block_Refs <em>State Block Refs</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.State_Block_Refs
   * @generated
   */
  public Adapter createState_Block_RefsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.Behavior <em>Behavior</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.Behavior
   * @generated
   */
  public Adapter createBehaviorAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.Behaviors <em>Behaviors</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.Behaviors
   * @generated
   */
  public Adapter createBehaviorsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.Interaction <em>Interaction</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.Interaction
   * @generated
   */
  public Adapter createInteractionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.AgentInteractions <em>Agent Interactions</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.AgentInteractions
   * @generated
   */
  public Adapter createAgentInteractionsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.Interactions <em>Interactions</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.Interactions
   * @generated
   */
  public Adapter createInteractionsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.EnvironmentInteractions <em>Environment Interactions</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.EnvironmentInteractions
   * @generated
   */
  public Adapter createEnvironmentInteractionsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.EGInteractions <em>EG Interactions</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.EGInteractions
   * @generated
   */
  public Adapter createEGInteractionsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.InteractionTriggerParameter <em>Interaction Trigger Parameter</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.InteractionTriggerParameter
   * @generated
   */
  public Adapter createInteractionTriggerParameterAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.AdaptiveProcess <em>Adaptive Process</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.AdaptiveProcess
   * @generated
   */
  public Adapter createAdaptiveProcessAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.AdaptiveProcesses <em>Adaptive Processes</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.AdaptiveProcesses
   * @generated
   */
  public Adapter createAdaptiveProcessesAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.FeatureCall <em>Feature Call</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.FeatureCall
   * @generated
   */
  public Adapter createFeatureCallAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.AdaptiveProcessFeatureCall <em>Adaptive Process Feature Call</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.AdaptiveProcessFeatureCall
   * @generated
   */
  public Adapter createAdaptiveProcessFeatureCallAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.InteractionFeatureCall <em>Interaction Feature Call</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.InteractionFeatureCall
   * @generated
   */
  public Adapter createInteractionFeatureCallAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.AgentInteractionFeatureCall <em>Agent Interaction Feature Call</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.AgentInteractionFeatureCall
   * @generated
   */
  public Adapter createAgentInteractionFeatureCallAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.GroupExternalInteractionFeatureCall <em>Group External Interaction Feature Call</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.GroupExternalInteractionFeatureCall
   * @generated
   */
  public Adapter createGroupExternalInteractionFeatureCallAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.ExternalInteractionFeatureCall <em>External Interaction Feature Call</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.ExternalInteractionFeatureCall
   * @generated
   */
  public Adapter createExternalInteractionFeatureCallAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.GroupInternalInteractionsFeatureCall <em>Group Internal Interactions Feature Call</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.GroupInternalInteractionsFeatureCall
   * @generated
   */
  public Adapter createGroupInternalInteractionsFeatureCallAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.EnvironmentInteractionFeatureCall <em>Environment Interaction Feature Call</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.EnvironmentInteractionFeatureCall
   * @generated
   */
  public Adapter createEnvironmentInteractionFeatureCallAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.GroupSelfInternalInteractionsFeatureCall <em>Group Self Internal Interactions Feature Call</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.GroupSelfInternalInteractionsFeatureCall
   * @generated
   */
  public Adapter createGroupSelfInternalInteractionsFeatureCallAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.FunctionFeatureCall <em>Function Feature Call</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.FunctionFeatureCall
   * @generated
   */
  public Adapter createFunctionFeatureCallAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.BehaviorFeatureCall <em>Behavior Feature Call</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.BehaviorFeatureCall
   * @generated
   */
  public Adapter createBehaviorFeatureCallAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.SubSystem <em>Sub System</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.SubSystem
   * @generated
   */
  public Adapter createSubSystemAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.SubSystems <em>Sub Systems</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.SubSystems
   * @generated
   */
  public Adapter createSubSystemsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.Type <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.Type
   * @generated
   */
  public Adapter createTypeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.NonPrimitiveType <em>Non Primitive Type</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.NonPrimitiveType
   * @generated
   */
  public Adapter createNonPrimitiveTypeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.PrimitiveType <em>Primitive Type</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.PrimitiveType
   * @generated
   */
  public Adapter createPrimitiveTypeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.IntType <em>Int Type</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.IntType
   * @generated
   */
  public Adapter createIntTypeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.BooleanType <em>Boolean Type</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.BooleanType
   * @generated
   */
  public Adapter createBooleanTypeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.FloatType <em>Float Type</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.FloatType
   * @generated
   */
  public Adapter createFloatTypeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.StringType <em>String Type</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.StringType
   * @generated
   */
  public Adapter createStringTypeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.NullType <em>Null Type</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.NullType
   * @generated
   */
  public Adapter createNullTypeAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.Formula <em>Formula</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.Formula
   * @generated
   */
  public Adapter createFormulaAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.SelfAssignedFormula <em>Self Assigned Formula</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.SelfAssignedFormula
   * @generated
   */
  public Adapter createSelfAssignedFormulaAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.Expression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.Expression
   * @generated
   */
  public Adapter createExpressionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.ForLoop <em>For Loop</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.ForLoop
   * @generated
   */
  public Adapter createForLoopAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.ForEachLoop <em>For Each Loop</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.ForEachLoop
   * @generated
   */
  public Adapter createForEachLoopAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.IfStatement <em>If Statement</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.IfStatement
   * @generated
   */
  public Adapter createIfStatementAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.ElseIfExpr <em>Else If Expr</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.ElseIfExpr
   * @generated
   */
  public Adapter createElseIfExprAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.SelfCall <em>Self Call</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.SelfCall
   * @generated
   */
  public Adapter createSelfCallAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.FunctionCall <em>Function Call</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.FunctionCall
   * @generated
   */
  public Adapter createFunctionCallAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.EnumCall <em>Enum Call</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.EnumCall
   * @generated
   */
  public Adapter createEnumCallAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.SystemCall <em>System Call</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.SystemCall
   * @generated
   */
  public Adapter createSystemCallAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.Agent_Call <em>Agent Call</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.Agent_Call
   * @generated
   */
  public Adapter createAgent_CallAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.Environment_Call <em>Environment Call</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.Environment_Call
   * @generated
   */
  public Adapter createEnvironment_CallAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.Group_Call <em>Group Call</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.Group_Call
   * @generated
   */
  public Adapter createGroup_CallAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.Object <em>Object</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.Object
   * @generated
   */
  public Adapter createObjectAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.Enum <em>Enum</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.Enum
   * @generated
   */
  public Adapter createEnumAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.CASL_Macro_Call <em>CASL Macro Call</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.CASL_Macro_Call
   * @generated
   */
  public Adapter createCASL_Macro_CallAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.CASL_Macro <em>CASL Macro</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.CASL_Macro
   * @generated
   */
  public Adapter createCASL_MacroAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.CASL_Macro_Neighbours <em>CASL Macro Neighbours</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.CASL_Macro_Neighbours
   * @generated
   */
  public Adapter createCASL_Macro_NeighboursAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.CASL_Macro_FilterAndFunction <em>CASL Macro Filter And Function</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.CASL_Macro_FilterAndFunction
   * @generated
   */
  public Adapter createCASL_Macro_FilterAndFunctionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.CASL_Macro_CountConditions <em>CASL Macro Count Conditions</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.CASL_Macro_CountConditions
   * @generated
   */
  public Adapter createCASL_Macro_CountConditionsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.CASL_Macro_Random <em>CASL Macro Random</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.CASL_Macro_Random
   * @generated
   */
  public Adapter createCASL_Macro_RandomAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.CASL_Macro_ForEach <em>CASL Macro For Each</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.CASL_Macro_ForEach
   * @generated
   */
  public Adapter createCASL_Macro_ForEachAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.CASL_Macro_Print <em>CASL Macro Print</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.CASL_Macro_Print
   * @generated
   */
  public Adapter createCASL_Macro_PrintAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.CASL_Macro_MetricSwitch <em>CASL Macro Metric Switch</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.CASL_Macro_MetricSwitch
   * @generated
   */
  public Adapter createCASL_Macro_MetricSwitchAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.CASL_Macro_TODO <em>CASL Macro TODO</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.CASL_Macro_TODO
   * @generated
   */
  public Adapter createCASL_Macro_TODOAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.CASL_Macro_Populate <em>CASL Macro Populate</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.CASL_Macro_Populate
   * @generated
   */
  public Adapter createCASL_Macro_PopulateAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.Raw_Java_Block <em>Raw Java Block</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.Raw_Java_Block
   * @generated
   */
  public Adapter createRaw_Java_BlockAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.Feature <em>Feature</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.Feature
   * @generated
   */
  public Adapter createFeatureAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.AbstractElement <em>Abstract Element</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.AbstractElement
   * @generated
   */
  public Adapter createAbstractElementAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.PackageDeclaration <em>Package Declaration</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.PackageDeclaration
   * @generated
   */
  public Adapter createPackageDeclarationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.Import <em>Import</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.Import
   * @generated
   */
  public Adapter createImportAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.AgentFieldReference <em>Agent Field Reference</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.AgentFieldReference
   * @generated
   */
  public Adapter createAgentFieldReferenceAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.EnvironmentFieldReference <em>Environment Field Reference</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.EnvironmentFieldReference
   * @generated
   */
  public Adapter createEnvironmentFieldReferenceAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.GroupFieldReference <em>Group Field Reference</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.GroupFieldReference
   * @generated
   */
  public Adapter createGroupFieldReferenceAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.FunctionParameter <em>Function Parameter</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.FunctionParameter
   * @generated
   */
  public Adapter createFunctionParameterAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.AgentInteraction <em>Agent Interaction</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.AgentInteraction
   * @generated
   */
  public Adapter createAgentInteractionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.EnvironmentInteraction <em>Environment Interaction</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.EnvironmentInteraction
   * @generated
   */
  public Adapter createEnvironmentInteractionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.EGInteraction <em>EG Interaction</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.EGInteraction
   * @generated
   */
  public Adapter createEGInteractionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.DataTypeDeclaration <em>Data Type Declaration</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.DataTypeDeclaration
   * @generated
   */
  public Adapter createDataTypeDeclarationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.BooleanExpression <em>Boolean Expression</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.BooleanExpression
   * @generated
   */
  public Adapter createBooleanExpressionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.Equals <em>Equals</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.Equals
   * @generated
   */
  public Adapter createEqualsAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.Comparison <em>Comparison</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.Comparison
   * @generated
   */
  public Adapter createComparisonAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.Subtraction <em>Subtraction</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.Subtraction
   * @generated
   */
  public Adapter createSubtractionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.Addition <em>Addition</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.Addition
   * @generated
   */
  public Adapter createAdditionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.Multiplication <em>Multiplication</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.Multiplication
   * @generated
   */
  public Adapter createMultiplicationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.Div <em>Div</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.Div
   * @generated
   */
  public Adapter createDivAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.BooleanNegation <em>Boolean Negation</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.BooleanNegation
   * @generated
   */
  public Adapter createBooleanNegationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.ArithmeticSigned <em>Arithmetic Signed</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.ArithmeticSigned
   * @generated
   */
  public Adapter createArithmeticSignedAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.NumberLiteral <em>Number Literal</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.NumberLiteral
   * @generated
   */
  public Adapter createNumberLiteralAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.StringLiteral <em>String Literal</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.StringLiteral
   * @generated
   */
  public Adapter createStringLiteralAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.NullTypeLiteral <em>Null Type Literal</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.NullTypeLiteral
   * @generated
   */
  public Adapter createNullTypeLiteralAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.TypeRef <em>Type Ref</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.TypeRef
   * @generated
   */
  public Adapter createTypeRefAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.SystemCallObj <em>System Call Obj</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.SystemCallObj
   * @generated
   */
  public Adapter createSystemCallObjAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.FeatureCallExp <em>Feature Call Exp</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.FeatureCallExp
   * @generated
   */
  public Adapter createFeatureCallExpAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.SelfCallExpr <em>Self Call Expr</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.SelfCallExpr
   * @generated
   */
  public Adapter createSelfCallExprAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.MacroCall <em>Macro Call</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.MacroCall
   * @generated
   */
  public Adapter createMacroCallAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.FunctionCallExpr <em>Function Call Expr</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.FunctionCallExpr
   * @generated
   */
  public Adapter createFunctionCallExprAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uofa.lbirdsey.castle.casl.EnumCallExpr <em>Enum Call Expr</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uofa.lbirdsey.castle.casl.EnumCallExpr
   * @generated
   */
  public Adapter createEnumCallExprAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for the default case.
   * <!-- begin-user-doc -->
   * This default implementation returns null.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @generated
   */
  public Adapter createEObjectAdapter()
  {
    return null;
  }

} //CaslAdapterFactory
