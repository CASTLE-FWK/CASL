/**
 * generated by Xtext 2.12.0
 */
package uofa.lbirdsey.castle.casl.util;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

import uofa.lbirdsey.castle.casl.AbstractElement;
import uofa.lbirdsey.castle.casl.AdaptiveProcess;
import uofa.lbirdsey.castle.casl.AdaptiveProcessFeatureCall;
import uofa.lbirdsey.castle.casl.AdaptiveProcesses;
import uofa.lbirdsey.castle.casl.Addition;
import uofa.lbirdsey.castle.casl.Agent;
import uofa.lbirdsey.castle.casl.AgentFieldReference;
import uofa.lbirdsey.castle.casl.AgentInteraction;
import uofa.lbirdsey.castle.casl.AgentInteractionFeatureCall;
import uofa.lbirdsey.castle.casl.AgentInteractions;
import uofa.lbirdsey.castle.casl.Agent_Call;
import uofa.lbirdsey.castle.casl.Agent_Type_Name;
import uofa.lbirdsey.castle.casl.Agent_Types;
import uofa.lbirdsey.castle.casl.ArithmeticSigned;
import uofa.lbirdsey.castle.casl.Behavior;
import uofa.lbirdsey.castle.casl.BehaviorFeatureCall;
import uofa.lbirdsey.castle.casl.Behaviors;
import uofa.lbirdsey.castle.casl.BooleanExpression;
import uofa.lbirdsey.castle.casl.BooleanNegation;
import uofa.lbirdsey.castle.casl.BooleanType;
import uofa.lbirdsey.castle.casl.CASL_Macro;
import uofa.lbirdsey.castle.casl.CASL_Macro_Call;
import uofa.lbirdsey.castle.casl.CASL_Macro_CountConditions;
import uofa.lbirdsey.castle.casl.CASL_Macro_EntitySetup;
import uofa.lbirdsey.castle.casl.CASL_Macro_FilterAndFunction;
import uofa.lbirdsey.castle.casl.CASL_Macro_ForEach;
import uofa.lbirdsey.castle.casl.CASL_Macro_MetricSwitch;
import uofa.lbirdsey.castle.casl.CASL_Macro_Neighbours;
import uofa.lbirdsey.castle.casl.CASL_Macro_Print;
import uofa.lbirdsey.castle.casl.CASL_Macro_Random;
import uofa.lbirdsey.castle.casl.CASL_Macro_TODO;
import uofa.lbirdsey.castle.casl.CAS_Rules;
import uofa.lbirdsey.castle.casl.Casl;
import uofa.lbirdsey.castle.casl.CaslPackage;
import uofa.lbirdsey.castle.casl.Comparison;
import uofa.lbirdsey.castle.casl.Concern;
import uofa.lbirdsey.castle.casl.DataTypeDeclaration;
import uofa.lbirdsey.castle.casl.Div;
import uofa.lbirdsey.castle.casl.EGInteraction;
import uofa.lbirdsey.castle.casl.EGInteractions;
import uofa.lbirdsey.castle.casl.ElseIfExpr;
import uofa.lbirdsey.castle.casl.End_Condition;
import uofa.lbirdsey.castle.casl.End_Conditions;
import uofa.lbirdsey.castle.casl.Entity;
import uofa.lbirdsey.castle.casl.Entity_Feature;
import uofa.lbirdsey.castle.casl.EnumCall;
import uofa.lbirdsey.castle.casl.EnumCallExpr;
import uofa.lbirdsey.castle.casl.Environment;
import uofa.lbirdsey.castle.casl.EnvironmentFieldReference;
import uofa.lbirdsey.castle.casl.EnvironmentInteraction;
import uofa.lbirdsey.castle.casl.EnvironmentInteractionFeatureCall;
import uofa.lbirdsey.castle.casl.EnvironmentInteractions;
import uofa.lbirdsey.castle.casl.Environment_Call;
import uofa.lbirdsey.castle.casl.Environment_Rules;
import uofa.lbirdsey.castle.casl.Environment_Type_Name;
import uofa.lbirdsey.castle.casl.Environment_Types;
import uofa.lbirdsey.castle.casl.Equals;
import uofa.lbirdsey.castle.casl.Expression;
import uofa.lbirdsey.castle.casl.ExternalInteractionFeatureCall;
import uofa.lbirdsey.castle.casl.Feature;
import uofa.lbirdsey.castle.casl.FeatureCall;
import uofa.lbirdsey.castle.casl.FeatureCallExp;
import uofa.lbirdsey.castle.casl.Field;
import uofa.lbirdsey.castle.casl.FloatType;
import uofa.lbirdsey.castle.casl.ForEachLoop;
import uofa.lbirdsey.castle.casl.ForLoop;
import uofa.lbirdsey.castle.casl.Formula;
import uofa.lbirdsey.castle.casl.Function;
import uofa.lbirdsey.castle.casl.FunctionCall;
import uofa.lbirdsey.castle.casl.FunctionCallExpr;
import uofa.lbirdsey.castle.casl.FunctionFeatureCall;
import uofa.lbirdsey.castle.casl.FunctionParameter;
import uofa.lbirdsey.castle.casl.Functions;
import uofa.lbirdsey.castle.casl.Group;
import uofa.lbirdsey.castle.casl.GroupExternalInteraction;
import uofa.lbirdsey.castle.casl.GroupExternalInteractionFeatureCall;
import uofa.lbirdsey.castle.casl.GroupExternalInteractions;
import uofa.lbirdsey.castle.casl.GroupFieldReference;
import uofa.lbirdsey.castle.casl.GroupInternalInteraction;
import uofa.lbirdsey.castle.casl.GroupInternalInteractions;
import uofa.lbirdsey.castle.casl.GroupInternalInteractionsFeatureCall;
import uofa.lbirdsey.castle.casl.GroupSelfInternalInteractionsFeatureCall;
import uofa.lbirdsey.castle.casl.Group_Call;
import uofa.lbirdsey.castle.casl.Group_Rules;
import uofa.lbirdsey.castle.casl.Group_Type_Name;
import uofa.lbirdsey.castle.casl.Group_Types;
import uofa.lbirdsey.castle.casl.IfStatement;
import uofa.lbirdsey.castle.casl.Import;
import uofa.lbirdsey.castle.casl.IntType;
import uofa.lbirdsey.castle.casl.Interaction;
import uofa.lbirdsey.castle.casl.InteractionFeatureCall;
import uofa.lbirdsey.castle.casl.InteractionTriggerParameter;
import uofa.lbirdsey.castle.casl.Interactions;
import uofa.lbirdsey.castle.casl.MacroCall;
import uofa.lbirdsey.castle.casl.Multiplication;
import uofa.lbirdsey.castle.casl.NonPrimitiveType;
import uofa.lbirdsey.castle.casl.NullType;
import uofa.lbirdsey.castle.casl.NullTypeLiteral;
import uofa.lbirdsey.castle.casl.NumberLiteral;
import uofa.lbirdsey.castle.casl.PackageDeclaration;
import uofa.lbirdsey.castle.casl.Parameters;
import uofa.lbirdsey.castle.casl.PrimitiveType;
import uofa.lbirdsey.castle.casl.Raw_Java_Block;
import uofa.lbirdsey.castle.casl.SelfAssignedFormula;
import uofa.lbirdsey.castle.casl.SelfCall;
import uofa.lbirdsey.castle.casl.SelfCallExpr;
import uofa.lbirdsey.castle.casl.State_Block_Refs;
import uofa.lbirdsey.castle.casl.StringLiteral;
import uofa.lbirdsey.castle.casl.StringType;
import uofa.lbirdsey.castle.casl.SubSystem;
import uofa.lbirdsey.castle.casl.SubSystems;
import uofa.lbirdsey.castle.casl.Subtraction;
import uofa.lbirdsey.castle.casl.Symbol;
import uofa.lbirdsey.castle.casl.SystemCall;
import uofa.lbirdsey.castle.casl.SystemCallObj;
import uofa.lbirdsey.castle.casl.Type;
import uofa.lbirdsey.castle.casl.TypeRef;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see uofa.lbirdsey.castle.casl.CaslPackage
 * @generated
 */
public class CaslSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static CaslPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CaslSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = CaslPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case CaslPackage.CASL:
      {
        Casl casl = (Casl)theEObject;
        T result = caseCasl(casl);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.SYSTEM:
      {
        uofa.lbirdsey.castle.casl.System system = (uofa.lbirdsey.castle.casl.System)theEObject;
        T result = caseSystem(system);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.AGENT_TYPES:
      {
        Agent_Types agent_Types = (Agent_Types)theEObject;
        T result = caseAgent_Types(agent_Types);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.AGENT_TYPE_NAME:
      {
        Agent_Type_Name agent_Type_Name = (Agent_Type_Name)theEObject;
        T result = caseAgent_Type_Name(agent_Type_Name);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.ENVIRONMENT_TYPES:
      {
        Environment_Types environment_Types = (Environment_Types)theEObject;
        T result = caseEnvironment_Types(environment_Types);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.ENVIRONMENT_TYPE_NAME:
      {
        Environment_Type_Name environment_Type_Name = (Environment_Type_Name)theEObject;
        T result = caseEnvironment_Type_Name(environment_Type_Name);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.ENVIRONMENT_RULES:
      {
        Environment_Rules environment_Rules = (Environment_Rules)theEObject;
        T result = caseEnvironment_Rules(environment_Rules);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.GROUP_TYPES:
      {
        Group_Types group_Types = (Group_Types)theEObject;
        T result = caseGroup_Types(group_Types);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.GROUP_TYPE_NAME:
      {
        Group_Type_Name group_Type_Name = (Group_Type_Name)theEObject;
        T result = caseGroup_Type_Name(group_Type_Name);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.END_CONDITIONS:
      {
        End_Conditions end_Conditions = (End_Conditions)theEObject;
        T result = caseEnd_Conditions(end_Conditions);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.END_CONDITION:
      {
        End_Condition end_Condition = (End_Condition)theEObject;
        T result = caseEnd_Condition(end_Condition);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.CAS_RULES:
      {
        CAS_Rules caS_Rules = (CAS_Rules)theEObject;
        T result = caseCAS_Rules(caS_Rules);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.ENTITY:
      {
        Entity entity = (Entity)theEObject;
        T result = caseEntity(entity);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.ENTITY_FEATURE:
      {
        Entity_Feature entity_Feature = (Entity_Feature)theEObject;
        T result = caseEntity_Feature(entity_Feature);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.AGENT:
      {
        Agent agent = (Agent)theEObject;
        T result = caseAgent(agent);
        if (result == null) result = caseEntity(agent);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.ENVIRONMENT:
      {
        Environment environment = (Environment)theEObject;
        T result = caseEnvironment(environment);
        if (result == null) result = caseEntity(environment);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.GROUP:
      {
        Group group = (Group)theEObject;
        T result = caseGroup(group);
        if (result == null) result = caseEntity(group);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.GROUP_RULES:
      {
        Group_Rules group_Rules = (Group_Rules)theEObject;
        T result = caseGroup_Rules(group_Rules);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.GROUP_EXTERNAL_INTERACTIONS:
      {
        GroupExternalInteractions groupExternalInteractions = (GroupExternalInteractions)theEObject;
        T result = caseGroupExternalInteractions(groupExternalInteractions);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.GROUP_EXTERNAL_INTERACTION:
      {
        GroupExternalInteraction groupExternalInteraction = (GroupExternalInteraction)theEObject;
        T result = caseGroupExternalInteraction(groupExternalInteraction);
        if (result == null) result = caseEntity_Feature(groupExternalInteraction);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.GROUP_INTERNAL_INTERACTIONS:
      {
        GroupInternalInteractions groupInternalInteractions = (GroupInternalInteractions)theEObject;
        T result = caseGroupInternalInteractions(groupInternalInteractions);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.GROUP_INTERNAL_INTERACTION:
      {
        GroupInternalInteraction groupInternalInteraction = (GroupInternalInteraction)theEObject;
        T result = caseGroupInternalInteraction(groupInternalInteraction);
        if (result == null) result = caseEntity_Feature(groupInternalInteraction);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.PARAMETERS:
      {
        Parameters parameters = (Parameters)theEObject;
        T result = caseParameters(parameters);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.FIELD:
      {
        Field field = (Field)theEObject;
        T result = caseField(field);
        if (result == null) result = caseEntity_Feature(field);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.SYMBOL:
      {
        Symbol symbol = (Symbol)theEObject;
        T result = caseSymbol(symbol);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.FUNCTION:
      {
        Function function = (Function)theEObject;
        T result = caseFunction(function);
        if (result == null) result = caseEntity_Feature(function);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.FUNCTIONS:
      {
        Functions functions = (Functions)theEObject;
        T result = caseFunctions(functions);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.CONCERN:
      {
        Concern concern = (Concern)theEObject;
        T result = caseConcern(concern);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.STATE_BLOCK_REFS:
      {
        State_Block_Refs state_Block_Refs = (State_Block_Refs)theEObject;
        T result = caseState_Block_Refs(state_Block_Refs);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.BEHAVIOR:
      {
        Behavior behavior = (Behavior)theEObject;
        T result = caseBehavior(behavior);
        if (result == null) result = caseEntity_Feature(behavior);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.BEHAVIORS:
      {
        Behaviors behaviors = (Behaviors)theEObject;
        T result = caseBehaviors(behaviors);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.INTERACTION:
      {
        Interaction interaction = (Interaction)theEObject;
        T result = caseInteraction(interaction);
        if (result == null) result = caseEntity_Feature(interaction);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.AGENT_INTERACTIONS:
      {
        AgentInteractions agentInteractions = (AgentInteractions)theEObject;
        T result = caseAgentInteractions(agentInteractions);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.INTERACTIONS:
      {
        Interactions interactions = (Interactions)theEObject;
        T result = caseInteractions(interactions);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.ENVIRONMENT_INTERACTIONS:
      {
        EnvironmentInteractions environmentInteractions = (EnvironmentInteractions)theEObject;
        T result = caseEnvironmentInteractions(environmentInteractions);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.EG_INTERACTIONS:
      {
        EGInteractions egInteractions = (EGInteractions)theEObject;
        T result = caseEGInteractions(egInteractions);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.INTERACTION_TRIGGER_PARAMETER:
      {
        InteractionTriggerParameter interactionTriggerParameter = (InteractionTriggerParameter)theEObject;
        T result = caseInteractionTriggerParameter(interactionTriggerParameter);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.ADAPTIVE_PROCESS:
      {
        AdaptiveProcess adaptiveProcess = (AdaptiveProcess)theEObject;
        T result = caseAdaptiveProcess(adaptiveProcess);
        if (result == null) result = caseEntity_Feature(adaptiveProcess);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.ADAPTIVE_PROCESSES:
      {
        AdaptiveProcesses adaptiveProcesses = (AdaptiveProcesses)theEObject;
        T result = caseAdaptiveProcesses(adaptiveProcesses);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.FEATURE_CALL:
      {
        FeatureCall featureCall = (FeatureCall)theEObject;
        T result = caseFeatureCall(featureCall);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.ADAPTIVE_PROCESS_FEATURE_CALL:
      {
        AdaptiveProcessFeatureCall adaptiveProcessFeatureCall = (AdaptiveProcessFeatureCall)theEObject;
        T result = caseAdaptiveProcessFeatureCall(adaptiveProcessFeatureCall);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.INTERACTION_FEATURE_CALL:
      {
        InteractionFeatureCall interactionFeatureCall = (InteractionFeatureCall)theEObject;
        T result = caseInteractionFeatureCall(interactionFeatureCall);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.AGENT_INTERACTION_FEATURE_CALL:
      {
        AgentInteractionFeatureCall agentInteractionFeatureCall = (AgentInteractionFeatureCall)theEObject;
        T result = caseAgentInteractionFeatureCall(agentInteractionFeatureCall);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.GROUP_EXTERNAL_INTERACTION_FEATURE_CALL:
      {
        GroupExternalInteractionFeatureCall groupExternalInteractionFeatureCall = (GroupExternalInteractionFeatureCall)theEObject;
        T result = caseGroupExternalInteractionFeatureCall(groupExternalInteractionFeatureCall);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.EXTERNAL_INTERACTION_FEATURE_CALL:
      {
        ExternalInteractionFeatureCall externalInteractionFeatureCall = (ExternalInteractionFeatureCall)theEObject;
        T result = caseExternalInteractionFeatureCall(externalInteractionFeatureCall);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.GROUP_INTERNAL_INTERACTIONS_FEATURE_CALL:
      {
        GroupInternalInteractionsFeatureCall groupInternalInteractionsFeatureCall = (GroupInternalInteractionsFeatureCall)theEObject;
        T result = caseGroupInternalInteractionsFeatureCall(groupInternalInteractionsFeatureCall);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.ENVIRONMENT_INTERACTION_FEATURE_CALL:
      {
        EnvironmentInteractionFeatureCall environmentInteractionFeatureCall = (EnvironmentInteractionFeatureCall)theEObject;
        T result = caseEnvironmentInteractionFeatureCall(environmentInteractionFeatureCall);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.GROUP_SELF_INTERNAL_INTERACTIONS_FEATURE_CALL:
      {
        GroupSelfInternalInteractionsFeatureCall groupSelfInternalInteractionsFeatureCall = (GroupSelfInternalInteractionsFeatureCall)theEObject;
        T result = caseGroupSelfInternalInteractionsFeatureCall(groupSelfInternalInteractionsFeatureCall);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.FUNCTION_FEATURE_CALL:
      {
        FunctionFeatureCall functionFeatureCall = (FunctionFeatureCall)theEObject;
        T result = caseFunctionFeatureCall(functionFeatureCall);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.BEHAVIOR_FEATURE_CALL:
      {
        BehaviorFeatureCall behaviorFeatureCall = (BehaviorFeatureCall)theEObject;
        T result = caseBehaviorFeatureCall(behaviorFeatureCall);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.SUB_SYSTEM:
      {
        SubSystem subSystem = (SubSystem)theEObject;
        T result = caseSubSystem(subSystem);
        if (result == null) result = caseEntity_Feature(subSystem);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.SUB_SYSTEMS:
      {
        SubSystems subSystems = (SubSystems)theEObject;
        T result = caseSubSystems(subSystems);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.TYPE:
      {
        Type type = (Type)theEObject;
        T result = caseType(type);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.NON_PRIMITIVE_TYPE:
      {
        NonPrimitiveType nonPrimitiveType = (NonPrimitiveType)theEObject;
        T result = caseNonPrimitiveType(nonPrimitiveType);
        if (result == null) result = caseType(nonPrimitiveType);
        if (result == null) result = caseAbstractElement(nonPrimitiveType);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.PRIMITIVE_TYPE:
      {
        PrimitiveType primitiveType = (PrimitiveType)theEObject;
        T result = casePrimitiveType(primitiveType);
        if (result == null) result = caseType(primitiveType);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.INT_TYPE:
      {
        IntType intType = (IntType)theEObject;
        T result = caseIntType(intType);
        if (result == null) result = casePrimitiveType(intType);
        if (result == null) result = caseType(intType);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.BOOLEAN_TYPE:
      {
        BooleanType booleanType = (BooleanType)theEObject;
        T result = caseBooleanType(booleanType);
        if (result == null) result = casePrimitiveType(booleanType);
        if (result == null) result = caseExpression(booleanType);
        if (result == null) result = caseType(booleanType);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.FLOAT_TYPE:
      {
        FloatType floatType = (FloatType)theEObject;
        T result = caseFloatType(floatType);
        if (result == null) result = casePrimitiveType(floatType);
        if (result == null) result = caseType(floatType);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.STRING_TYPE:
      {
        StringType stringType = (StringType)theEObject;
        T result = caseStringType(stringType);
        if (result == null) result = casePrimitiveType(stringType);
        if (result == null) result = caseType(stringType);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.NULL_TYPE:
      {
        NullType nullType = (NullType)theEObject;
        T result = caseNullType(nullType);
        if (result == null) result = casePrimitiveType(nullType);
        if (result == null) result = caseType(nullType);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.FORMULA:
      {
        Formula formula = (Formula)theEObject;
        T result = caseFormula(formula);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.SELF_ASSIGNED_FORMULA:
      {
        SelfAssignedFormula selfAssignedFormula = (SelfAssignedFormula)theEObject;
        T result = caseSelfAssignedFormula(selfAssignedFormula);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.EXPRESSION:
      {
        Expression expression = (Expression)theEObject;
        T result = caseExpression(expression);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.FOR_LOOP:
      {
        ForLoop forLoop = (ForLoop)theEObject;
        T result = caseForLoop(forLoop);
        if (result == null) result = caseExpression(forLoop);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.FOR_EACH_LOOP:
      {
        ForEachLoop forEachLoop = (ForEachLoop)theEObject;
        T result = caseForEachLoop(forEachLoop);
        if (result == null) result = caseExpression(forEachLoop);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.IF_STATEMENT:
      {
        IfStatement ifStatement = (IfStatement)theEObject;
        T result = caseIfStatement(ifStatement);
        if (result == null) result = caseExpression(ifStatement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.ELSE_IF_EXPR:
      {
        ElseIfExpr elseIfExpr = (ElseIfExpr)theEObject;
        T result = caseElseIfExpr(elseIfExpr);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.SELF_CALL:
      {
        SelfCall selfCall = (SelfCall)theEObject;
        T result = caseSelfCall(selfCall);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.FUNCTION_CALL:
      {
        FunctionCall functionCall = (FunctionCall)theEObject;
        T result = caseFunctionCall(functionCall);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.ENUM_CALL:
      {
        EnumCall enumCall = (EnumCall)theEObject;
        T result = caseEnumCall(enumCall);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.SYSTEM_CALL:
      {
        SystemCall systemCall = (SystemCall)theEObject;
        T result = caseSystemCall(systemCall);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.AGENT_CALL:
      {
        Agent_Call agent_Call = (Agent_Call)theEObject;
        T result = caseAgent_Call(agent_Call);
        if (result == null) result = caseExpression(agent_Call);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.ENVIRONMENT_CALL:
      {
        Environment_Call environment_Call = (Environment_Call)theEObject;
        T result = caseEnvironment_Call(environment_Call);
        if (result == null) result = caseExpression(environment_Call);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.GROUP_CALL:
      {
        Group_Call group_Call = (Group_Call)theEObject;
        T result = caseGroup_Call(group_Call);
        if (result == null) result = caseExpression(group_Call);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.OBJECT:
      {
        uofa.lbirdsey.castle.casl.Object object = (uofa.lbirdsey.castle.casl.Object)theEObject;
        T result = caseObject(object);
        if (result == null) result = caseNonPrimitiveType(object);
        if (result == null) result = caseType(object);
        if (result == null) result = caseAbstractElement(object);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.ENUM:
      {
        uofa.lbirdsey.castle.casl.Enum enum_ = (uofa.lbirdsey.castle.casl.Enum)theEObject;
        T result = caseEnum(enum_);
        if (result == null) result = caseNonPrimitiveType(enum_);
        if (result == null) result = caseType(enum_);
        if (result == null) result = caseAbstractElement(enum_);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.CASL_MACRO_CALL:
      {
        CASL_Macro_Call casL_Macro_Call = (CASL_Macro_Call)theEObject;
        T result = caseCASL_Macro_Call(casL_Macro_Call);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.CASL_MACRO:
      {
        CASL_Macro casL_Macro = (CASL_Macro)theEObject;
        T result = caseCASL_Macro(casL_Macro);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.CASL_MACRO_NEIGHBOURS:
      {
        CASL_Macro_Neighbours casL_Macro_Neighbours = (CASL_Macro_Neighbours)theEObject;
        T result = caseCASL_Macro_Neighbours(casL_Macro_Neighbours);
        if (result == null) result = caseCASL_Macro(casL_Macro_Neighbours);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.CASL_MACRO_FILTER_AND_FUNCTION:
      {
        CASL_Macro_FilterAndFunction casL_Macro_FilterAndFunction = (CASL_Macro_FilterAndFunction)theEObject;
        T result = caseCASL_Macro_FilterAndFunction(casL_Macro_FilterAndFunction);
        if (result == null) result = caseCASL_Macro(casL_Macro_FilterAndFunction);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.CASL_MACRO_COUNT_CONDITIONS:
      {
        CASL_Macro_CountConditions casL_Macro_CountConditions = (CASL_Macro_CountConditions)theEObject;
        T result = caseCASL_Macro_CountConditions(casL_Macro_CountConditions);
        if (result == null) result = caseCASL_Macro(casL_Macro_CountConditions);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.CASL_MACRO_RANDOM:
      {
        CASL_Macro_Random casL_Macro_Random = (CASL_Macro_Random)theEObject;
        T result = caseCASL_Macro_Random(casL_Macro_Random);
        if (result == null) result = caseCASL_Macro(casL_Macro_Random);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.CASL_MACRO_FOR_EACH:
      {
        CASL_Macro_ForEach casL_Macro_ForEach = (CASL_Macro_ForEach)theEObject;
        T result = caseCASL_Macro_ForEach(casL_Macro_ForEach);
        if (result == null) result = caseCASL_Macro(casL_Macro_ForEach);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.CASL_MACRO_PRINT:
      {
        CASL_Macro_Print casL_Macro_Print = (CASL_Macro_Print)theEObject;
        T result = caseCASL_Macro_Print(casL_Macro_Print);
        if (result == null) result = caseCASL_Macro(casL_Macro_Print);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.CASL_MACRO_METRIC_SWITCH:
      {
        CASL_Macro_MetricSwitch casL_Macro_MetricSwitch = (CASL_Macro_MetricSwitch)theEObject;
        T result = caseCASL_Macro_MetricSwitch(casL_Macro_MetricSwitch);
        if (result == null) result = caseCASL_Macro(casL_Macro_MetricSwitch);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.CASL_MACRO_ENTITY_SETUP:
      {
        CASL_Macro_EntitySetup casL_Macro_EntitySetup = (CASL_Macro_EntitySetup)theEObject;
        T result = caseCASL_Macro_EntitySetup(casL_Macro_EntitySetup);
        if (result == null) result = caseCASL_Macro(casL_Macro_EntitySetup);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.CASL_MACRO_TODO:
      {
        CASL_Macro_TODO casL_Macro_TODO = (CASL_Macro_TODO)theEObject;
        T result = caseCASL_Macro_TODO(casL_Macro_TODO);
        if (result == null) result = caseCASL_Macro(casL_Macro_TODO);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.RAW_JAVA_BLOCK:
      {
        Raw_Java_Block raw_Java_Block = (Raw_Java_Block)theEObject;
        T result = caseRaw_Java_Block(raw_Java_Block);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.FEATURE:
      {
        Feature feature = (Feature)theEObject;
        T result = caseFeature(feature);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.ABSTRACT_ELEMENT:
      {
        AbstractElement abstractElement = (AbstractElement)theEObject;
        T result = caseAbstractElement(abstractElement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.PACKAGE_DECLARATION:
      {
        PackageDeclaration packageDeclaration = (PackageDeclaration)theEObject;
        T result = casePackageDeclaration(packageDeclaration);
        if (result == null) result = caseAbstractElement(packageDeclaration);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.IMPORT:
      {
        Import import_ = (Import)theEObject;
        T result = caseImport(import_);
        if (result == null) result = caseAbstractElement(import_);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.AGENT_FIELD_REFERENCE:
      {
        AgentFieldReference agentFieldReference = (AgentFieldReference)theEObject;
        T result = caseAgentFieldReference(agentFieldReference);
        if (result == null) result = caseSymbol(agentFieldReference);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.ENVIRONMENT_FIELD_REFERENCE:
      {
        EnvironmentFieldReference environmentFieldReference = (EnvironmentFieldReference)theEObject;
        T result = caseEnvironmentFieldReference(environmentFieldReference);
        if (result == null) result = caseSymbol(environmentFieldReference);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.GROUP_FIELD_REFERENCE:
      {
        GroupFieldReference groupFieldReference = (GroupFieldReference)theEObject;
        T result = caseGroupFieldReference(groupFieldReference);
        if (result == null) result = caseSymbol(groupFieldReference);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.FUNCTION_PARAMETER:
      {
        FunctionParameter functionParameter = (FunctionParameter)theEObject;
        T result = caseFunctionParameter(functionParameter);
        if (result == null) result = caseSymbol(functionParameter);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.AGENT_INTERACTION:
      {
        AgentInteraction agentInteraction = (AgentInteraction)theEObject;
        T result = caseAgentInteraction(agentInteraction);
        if (result == null) result = caseInteraction(agentInteraction);
        if (result == null) result = caseEntity_Feature(agentInteraction);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.ENVIRONMENT_INTERACTION:
      {
        EnvironmentInteraction environmentInteraction = (EnvironmentInteraction)theEObject;
        T result = caseEnvironmentInteraction(environmentInteraction);
        if (result == null) result = caseInteraction(environmentInteraction);
        if (result == null) result = caseEntity_Feature(environmentInteraction);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.EG_INTERACTION:
      {
        EGInteraction egInteraction = (EGInteraction)theEObject;
        T result = caseEGInteraction(egInteraction);
        if (result == null) result = caseInteraction(egInteraction);
        if (result == null) result = caseEntity_Feature(egInteraction);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.DATA_TYPE_DECLARATION:
      {
        DataTypeDeclaration dataTypeDeclaration = (DataTypeDeclaration)theEObject;
        T result = caseDataTypeDeclaration(dataTypeDeclaration);
        if (result == null) result = caseSymbol(dataTypeDeclaration);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.BOOLEAN_EXPRESSION:
      {
        BooleanExpression booleanExpression = (BooleanExpression)theEObject;
        T result = caseBooleanExpression(booleanExpression);
        if (result == null) result = caseExpression(booleanExpression);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.EQUALS:
      {
        Equals equals = (Equals)theEObject;
        T result = caseEquals(equals);
        if (result == null) result = caseExpression(equals);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.COMPARISON:
      {
        Comparison comparison = (Comparison)theEObject;
        T result = caseComparison(comparison);
        if (result == null) result = caseExpression(comparison);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.SUBTRACTION:
      {
        Subtraction subtraction = (Subtraction)theEObject;
        T result = caseSubtraction(subtraction);
        if (result == null) result = caseExpression(subtraction);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.ADDITION:
      {
        Addition addition = (Addition)theEObject;
        T result = caseAddition(addition);
        if (result == null) result = caseExpression(addition);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.MULTIPLICATION:
      {
        Multiplication multiplication = (Multiplication)theEObject;
        T result = caseMultiplication(multiplication);
        if (result == null) result = caseExpression(multiplication);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.DIV:
      {
        Div div = (Div)theEObject;
        T result = caseDiv(div);
        if (result == null) result = caseExpression(div);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.BOOLEAN_NEGATION:
      {
        BooleanNegation booleanNegation = (BooleanNegation)theEObject;
        T result = caseBooleanNegation(booleanNegation);
        if (result == null) result = caseExpression(booleanNegation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.ARITHMETIC_SIGNED:
      {
        ArithmeticSigned arithmeticSigned = (ArithmeticSigned)theEObject;
        T result = caseArithmeticSigned(arithmeticSigned);
        if (result == null) result = caseExpression(arithmeticSigned);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.NUMBER_LITERAL:
      {
        NumberLiteral numberLiteral = (NumberLiteral)theEObject;
        T result = caseNumberLiteral(numberLiteral);
        if (result == null) result = caseExpression(numberLiteral);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.STRING_LITERAL:
      {
        StringLiteral stringLiteral = (StringLiteral)theEObject;
        T result = caseStringLiteral(stringLiteral);
        if (result == null) result = caseExpression(stringLiteral);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.NULL_TYPE_LITERAL:
      {
        NullTypeLiteral nullTypeLiteral = (NullTypeLiteral)theEObject;
        T result = caseNullTypeLiteral(nullTypeLiteral);
        if (result == null) result = caseExpression(nullTypeLiteral);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.TYPE_REF:
      {
        TypeRef typeRef = (TypeRef)theEObject;
        T result = caseTypeRef(typeRef);
        if (result == null) result = caseExpression(typeRef);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.SYSTEM_CALL_OBJ:
      {
        SystemCallObj systemCallObj = (SystemCallObj)theEObject;
        T result = caseSystemCallObj(systemCallObj);
        if (result == null) result = caseExpression(systemCallObj);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.FEATURE_CALL_EXP:
      {
        FeatureCallExp featureCallExp = (FeatureCallExp)theEObject;
        T result = caseFeatureCallExp(featureCallExp);
        if (result == null) result = caseExpression(featureCallExp);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.SELF_CALL_EXPR:
      {
        SelfCallExpr selfCallExpr = (SelfCallExpr)theEObject;
        T result = caseSelfCallExpr(selfCallExpr);
        if (result == null) result = caseExpression(selfCallExpr);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.MACRO_CALL:
      {
        MacroCall macroCall = (MacroCall)theEObject;
        T result = caseMacroCall(macroCall);
        if (result == null) result = caseExpression(macroCall);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.FUNCTION_CALL_EXPR:
      {
        FunctionCallExpr functionCallExpr = (FunctionCallExpr)theEObject;
        T result = caseFunctionCallExpr(functionCallExpr);
        if (result == null) result = caseExpression(functionCallExpr);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case CaslPackage.ENUM_CALL_EXPR:
      {
        EnumCallExpr enumCallExpr = (EnumCallExpr)theEObject;
        T result = caseEnumCallExpr(enumCallExpr);
        if (result == null) result = caseExpression(enumCallExpr);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Casl</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Casl</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCasl(Casl object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>System</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>System</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSystem(uofa.lbirdsey.castle.casl.System object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Agent Types</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Agent Types</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAgent_Types(Agent_Types object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Agent Type Name</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Agent Type Name</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAgent_Type_Name(Agent_Type_Name object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Environment Types</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Environment Types</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEnvironment_Types(Environment_Types object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Environment Type Name</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Environment Type Name</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEnvironment_Type_Name(Environment_Type_Name object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Environment Rules</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Environment Rules</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEnvironment_Rules(Environment_Rules object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Group Types</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Group Types</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGroup_Types(Group_Types object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Group Type Name</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Group Type Name</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGroup_Type_Name(Group_Type_Name object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>End Conditions</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>End Conditions</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEnd_Conditions(End_Conditions object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>End Condition</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>End Condition</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEnd_Condition(End_Condition object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>CAS Rules</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>CAS Rules</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCAS_Rules(CAS_Rules object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Entity</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Entity</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEntity(Entity object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Entity Feature</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Entity Feature</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEntity_Feature(Entity_Feature object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Agent</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Agent</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAgent(Agent object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Environment</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Environment</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEnvironment(Environment object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Group</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Group</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGroup(Group object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Group Rules</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Group Rules</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGroup_Rules(Group_Rules object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Group External Interactions</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Group External Interactions</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGroupExternalInteractions(GroupExternalInteractions object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Group External Interaction</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Group External Interaction</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGroupExternalInteraction(GroupExternalInteraction object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Group Internal Interactions</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Group Internal Interactions</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGroupInternalInteractions(GroupInternalInteractions object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Group Internal Interaction</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Group Internal Interaction</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGroupInternalInteraction(GroupInternalInteraction object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Parameters</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Parameters</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseParameters(Parameters object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Field</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Field</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseField(Field object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Symbol</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Symbol</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSymbol(Symbol object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Function</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Function</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFunction(Function object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Functions</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Functions</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFunctions(Functions object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Concern</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Concern</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseConcern(Concern object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>State Block Refs</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>State Block Refs</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseState_Block_Refs(State_Block_Refs object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Behavior</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Behavior</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBehavior(Behavior object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Behaviors</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Behaviors</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBehaviors(Behaviors object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Interaction</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Interaction</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseInteraction(Interaction object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Agent Interactions</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Agent Interactions</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAgentInteractions(AgentInteractions object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Interactions</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Interactions</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseInteractions(Interactions object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Environment Interactions</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Environment Interactions</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEnvironmentInteractions(EnvironmentInteractions object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EG Interactions</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EG Interactions</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEGInteractions(EGInteractions object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Interaction Trigger Parameter</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Interaction Trigger Parameter</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseInteractionTriggerParameter(InteractionTriggerParameter object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Adaptive Process</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Adaptive Process</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAdaptiveProcess(AdaptiveProcess object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Adaptive Processes</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Adaptive Processes</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAdaptiveProcesses(AdaptiveProcesses object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Feature Call</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Feature Call</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFeatureCall(FeatureCall object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Adaptive Process Feature Call</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Adaptive Process Feature Call</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAdaptiveProcessFeatureCall(AdaptiveProcessFeatureCall object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Interaction Feature Call</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Interaction Feature Call</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseInteractionFeatureCall(InteractionFeatureCall object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Agent Interaction Feature Call</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Agent Interaction Feature Call</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAgentInteractionFeatureCall(AgentInteractionFeatureCall object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Group External Interaction Feature Call</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Group External Interaction Feature Call</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGroupExternalInteractionFeatureCall(GroupExternalInteractionFeatureCall object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>External Interaction Feature Call</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>External Interaction Feature Call</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseExternalInteractionFeatureCall(ExternalInteractionFeatureCall object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Group Internal Interactions Feature Call</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Group Internal Interactions Feature Call</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGroupInternalInteractionsFeatureCall(GroupInternalInteractionsFeatureCall object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Environment Interaction Feature Call</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Environment Interaction Feature Call</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEnvironmentInteractionFeatureCall(EnvironmentInteractionFeatureCall object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Group Self Internal Interactions Feature Call</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Group Self Internal Interactions Feature Call</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGroupSelfInternalInteractionsFeatureCall(GroupSelfInternalInteractionsFeatureCall object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Function Feature Call</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Function Feature Call</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFunctionFeatureCall(FunctionFeatureCall object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Behavior Feature Call</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Behavior Feature Call</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBehaviorFeatureCall(BehaviorFeatureCall object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Sub System</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Sub System</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSubSystem(SubSystem object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Sub Systems</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Sub Systems</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSubSystems(SubSystems object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Type</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Type</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseType(Type object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Non Primitive Type</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Non Primitive Type</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseNonPrimitiveType(NonPrimitiveType object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Primitive Type</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Primitive Type</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePrimitiveType(PrimitiveType object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Int Type</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Int Type</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIntType(IntType object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Boolean Type</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Boolean Type</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBooleanType(BooleanType object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Float Type</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Float Type</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFloatType(FloatType object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>String Type</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>String Type</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseStringType(StringType object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Null Type</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Null Type</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseNullType(NullType object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Formula</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Formula</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFormula(Formula object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Self Assigned Formula</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Self Assigned Formula</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSelfAssignedFormula(SelfAssignedFormula object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Expression</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Expression</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseExpression(Expression object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>For Loop</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>For Loop</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseForLoop(ForLoop object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>For Each Loop</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>For Each Loop</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseForEachLoop(ForEachLoop object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>If Statement</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>If Statement</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIfStatement(IfStatement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Else If Expr</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Else If Expr</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseElseIfExpr(ElseIfExpr object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Self Call</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Self Call</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSelfCall(SelfCall object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Function Call</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Function Call</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFunctionCall(FunctionCall object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Enum Call</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Enum Call</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEnumCall(EnumCall object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>System Call</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>System Call</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSystemCall(SystemCall object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Agent Call</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Agent Call</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAgent_Call(Agent_Call object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Environment Call</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Environment Call</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEnvironment_Call(Environment_Call object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Group Call</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Group Call</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGroup_Call(Group_Call object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Object</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Object</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseObject(uofa.lbirdsey.castle.casl.Object object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Enum</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Enum</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEnum(uofa.lbirdsey.castle.casl.Enum object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>CASL Macro Call</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>CASL Macro Call</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCASL_Macro_Call(CASL_Macro_Call object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>CASL Macro</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>CASL Macro</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCASL_Macro(CASL_Macro object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>CASL Macro Neighbours</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>CASL Macro Neighbours</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCASL_Macro_Neighbours(CASL_Macro_Neighbours object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>CASL Macro Filter And Function</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>CASL Macro Filter And Function</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCASL_Macro_FilterAndFunction(CASL_Macro_FilterAndFunction object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>CASL Macro Count Conditions</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>CASL Macro Count Conditions</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCASL_Macro_CountConditions(CASL_Macro_CountConditions object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>CASL Macro Random</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>CASL Macro Random</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCASL_Macro_Random(CASL_Macro_Random object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>CASL Macro For Each</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>CASL Macro For Each</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCASL_Macro_ForEach(CASL_Macro_ForEach object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>CASL Macro Print</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>CASL Macro Print</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCASL_Macro_Print(CASL_Macro_Print object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>CASL Macro Metric Switch</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>CASL Macro Metric Switch</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCASL_Macro_MetricSwitch(CASL_Macro_MetricSwitch object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>CASL Macro Entity Setup</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>CASL Macro Entity Setup</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCASL_Macro_EntitySetup(CASL_Macro_EntitySetup object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>CASL Macro TODO</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>CASL Macro TODO</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCASL_Macro_TODO(CASL_Macro_TODO object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Raw Java Block</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Raw Java Block</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRaw_Java_Block(Raw_Java_Block object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Feature</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Feature</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFeature(Feature object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Abstract Element</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Abstract Element</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAbstractElement(AbstractElement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Package Declaration</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Package Declaration</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePackageDeclaration(PackageDeclaration object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Import</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Import</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseImport(Import object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Agent Field Reference</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Agent Field Reference</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAgentFieldReference(AgentFieldReference object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Environment Field Reference</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Environment Field Reference</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEnvironmentFieldReference(EnvironmentFieldReference object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Group Field Reference</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Group Field Reference</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGroupFieldReference(GroupFieldReference object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Function Parameter</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Function Parameter</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFunctionParameter(FunctionParameter object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Agent Interaction</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Agent Interaction</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAgentInteraction(AgentInteraction object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Environment Interaction</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Environment Interaction</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEnvironmentInteraction(EnvironmentInteraction object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EG Interaction</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EG Interaction</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEGInteraction(EGInteraction object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Data Type Declaration</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Data Type Declaration</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDataTypeDeclaration(DataTypeDeclaration object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Boolean Expression</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Boolean Expression</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBooleanExpression(BooleanExpression object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Equals</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Equals</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEquals(Equals object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Comparison</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Comparison</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseComparison(Comparison object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Subtraction</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Subtraction</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSubtraction(Subtraction object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Addition</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Addition</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAddition(Addition object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Multiplication</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Multiplication</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMultiplication(Multiplication object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Div</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Div</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDiv(Div object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Boolean Negation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Boolean Negation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBooleanNegation(BooleanNegation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Arithmetic Signed</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Arithmetic Signed</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseArithmeticSigned(ArithmeticSigned object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Number Literal</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Number Literal</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseNumberLiteral(NumberLiteral object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>String Literal</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>String Literal</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseStringLiteral(StringLiteral object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Null Type Literal</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Null Type Literal</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseNullTypeLiteral(NullTypeLiteral object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Type Ref</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Type Ref</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTypeRef(TypeRef object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>System Call Obj</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>System Call Obj</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSystemCallObj(SystemCallObj object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Feature Call Exp</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Feature Call Exp</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFeatureCallExp(FeatureCallExp object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Self Call Expr</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Self Call Expr</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSelfCallExpr(SelfCallExpr object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Macro Call</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Macro Call</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMacroCall(MacroCall object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Function Call Expr</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Function Call Expr</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFunctionCallExpr(FunctionCallExpr object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Enum Call Expr</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Enum Call Expr</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEnumCallExpr(EnumCallExpr object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //CaslSwitch
