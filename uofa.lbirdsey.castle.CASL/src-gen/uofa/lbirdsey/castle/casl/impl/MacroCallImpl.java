/**
 * generated by Xtext 2.11.0
 */
package uofa.lbirdsey.castle.casl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import uofa.lbirdsey.castle.casl.CASL_Macro_Call;
import uofa.lbirdsey.castle.casl.CaslPackage;
import uofa.lbirdsey.castle.casl.MacroCall;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Macro Call</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link uofa.lbirdsey.castle.casl.impl.MacroCallImpl#getMacroCall <em>Macro Call</em>}</li>
 * </ul>
 *
 * @generated
 */
public class MacroCallImpl extends ExpressionImpl implements MacroCall
{
  /**
   * The cached value of the '{@link #getMacroCall() <em>Macro Call</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMacroCall()
   * @generated
   * @ordered
   */
  protected CASL_Macro_Call macroCall;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected MacroCallImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return CaslPackage.eINSTANCE.getMacroCall();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CASL_Macro_Call getMacroCall()
  {
    return macroCall;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetMacroCall(CASL_Macro_Call newMacroCall, NotificationChain msgs)
  {
    CASL_Macro_Call oldMacroCall = macroCall;
    macroCall = newMacroCall;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, CaslPackage.MACRO_CALL__MACRO_CALL, oldMacroCall, newMacroCall);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMacroCall(CASL_Macro_Call newMacroCall)
  {
    if (newMacroCall != macroCall)
    {
      NotificationChain msgs = null;
      if (macroCall != null)
        msgs = ((InternalEObject)macroCall).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - CaslPackage.MACRO_CALL__MACRO_CALL, null, msgs);
      if (newMacroCall != null)
        msgs = ((InternalEObject)newMacroCall).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - CaslPackage.MACRO_CALL__MACRO_CALL, null, msgs);
      msgs = basicSetMacroCall(newMacroCall, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CaslPackage.MACRO_CALL__MACRO_CALL, newMacroCall, newMacroCall));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case CaslPackage.MACRO_CALL__MACRO_CALL:
        return basicSetMacroCall(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case CaslPackage.MACRO_CALL__MACRO_CALL:
        return getMacroCall();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case CaslPackage.MACRO_CALL__MACRO_CALL:
        setMacroCall((CASL_Macro_Call)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case CaslPackage.MACRO_CALL__MACRO_CALL:
        setMacroCall((CASL_Macro_Call)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case CaslPackage.MACRO_CALL__MACRO_CALL:
        return macroCall != null;
    }
    return super.eIsSet(featureID);
  }

} //MacroCallImpl
