/**
 * generated by Xtext 2.12.0
 */
package uofa.lbirdsey.castle.casl.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import uofa.lbirdsey.castle.casl.Agent;
import uofa.lbirdsey.castle.casl.CaslPackage;
import uofa.lbirdsey.castle.casl.Environment;
import uofa.lbirdsey.castle.casl.SubSystem;
import uofa.lbirdsey.castle.casl.SubSystems;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Sub Systems</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link uofa.lbirdsey.castle.casl.impl.SubSystemsImpl#getSubSystems <em>Sub Systems</em>}</li>
 *   <li>{@link uofa.lbirdsey.castle.casl.impl.SubSystemsImpl#getSubAgents <em>Sub Agents</em>}</li>
 *   <li>{@link uofa.lbirdsey.castle.casl.impl.SubSystemsImpl#getSubEnvs <em>Sub Envs</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SubSystemsImpl extends MinimalEObjectImpl.Container implements SubSystems
{
  /**
   * The cached value of the '{@link #getSubSystems() <em>Sub Systems</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSubSystems()
   * @generated
   * @ordered
   */
  protected EList<SubSystem> subSystems;

  /**
   * The cached value of the '{@link #getSubAgents() <em>Sub Agents</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSubAgents()
   * @generated
   * @ordered
   */
  protected EList<Agent> subAgents;

  /**
   * The cached value of the '{@link #getSubEnvs() <em>Sub Envs</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSubEnvs()
   * @generated
   * @ordered
   */
  protected EList<Environment> subEnvs;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SubSystemsImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return CaslPackage.eINSTANCE.getSubSystems();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<SubSystem> getSubSystems()
  {
    if (subSystems == null)
    {
      subSystems = new EObjectContainmentEList<SubSystem>(SubSystem.class, this, CaslPackage.SUB_SYSTEMS__SUB_SYSTEMS);
    }
    return subSystems;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Agent> getSubAgents()
  {
    if (subAgents == null)
    {
      subAgents = new EObjectContainmentEList<Agent>(Agent.class, this, CaslPackage.SUB_SYSTEMS__SUB_AGENTS);
    }
    return subAgents;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Environment> getSubEnvs()
  {
    if (subEnvs == null)
    {
      subEnvs = new EObjectContainmentEList<Environment>(Environment.class, this, CaslPackage.SUB_SYSTEMS__SUB_ENVS);
    }
    return subEnvs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case CaslPackage.SUB_SYSTEMS__SUB_SYSTEMS:
        return ((InternalEList<?>)getSubSystems()).basicRemove(otherEnd, msgs);
      case CaslPackage.SUB_SYSTEMS__SUB_AGENTS:
        return ((InternalEList<?>)getSubAgents()).basicRemove(otherEnd, msgs);
      case CaslPackage.SUB_SYSTEMS__SUB_ENVS:
        return ((InternalEList<?>)getSubEnvs()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case CaslPackage.SUB_SYSTEMS__SUB_SYSTEMS:
        return getSubSystems();
      case CaslPackage.SUB_SYSTEMS__SUB_AGENTS:
        return getSubAgents();
      case CaslPackage.SUB_SYSTEMS__SUB_ENVS:
        return getSubEnvs();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case CaslPackage.SUB_SYSTEMS__SUB_SYSTEMS:
        getSubSystems().clear();
        getSubSystems().addAll((Collection<? extends SubSystem>)newValue);
        return;
      case CaslPackage.SUB_SYSTEMS__SUB_AGENTS:
        getSubAgents().clear();
        getSubAgents().addAll((Collection<? extends Agent>)newValue);
        return;
      case CaslPackage.SUB_SYSTEMS__SUB_ENVS:
        getSubEnvs().clear();
        getSubEnvs().addAll((Collection<? extends Environment>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case CaslPackage.SUB_SYSTEMS__SUB_SYSTEMS:
        getSubSystems().clear();
        return;
      case CaslPackage.SUB_SYSTEMS__SUB_AGENTS:
        getSubAgents().clear();
        return;
      case CaslPackage.SUB_SYSTEMS__SUB_ENVS:
        getSubEnvs().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case CaslPackage.SUB_SYSTEMS__SUB_SYSTEMS:
        return subSystems != null && !subSystems.isEmpty();
      case CaslPackage.SUB_SYSTEMS__SUB_AGENTS:
        return subAgents != null && !subAgents.isEmpty();
      case CaslPackage.SUB_SYSTEMS__SUB_ENVS:
        return subEnvs != null && !subEnvs.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //SubSystemsImpl
