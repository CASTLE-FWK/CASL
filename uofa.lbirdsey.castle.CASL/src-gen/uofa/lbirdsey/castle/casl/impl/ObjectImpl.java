/**
 * generated by Xtext 2.11.0
 */
package uofa.lbirdsey.castle.casl.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import uofa.lbirdsey.castle.casl.CaslPackage;
import uofa.lbirdsey.castle.casl.Entity_Feature;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Object</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link uofa.lbirdsey.castle.casl.impl.ObjectImpl#getUseType <em>Use Type</em>}</li>
 *   <li>{@link uofa.lbirdsey.castle.casl.impl.ObjectImpl#getFields <em>Fields</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ObjectImpl extends NonPrimitiveTypeImpl implements uofa.lbirdsey.castle.casl.Object
{
  /**
   * The cached value of the '{@link #getUseType() <em>Use Type</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUseType()
   * @generated
   * @ordered
   */
  protected uofa.lbirdsey.castle.casl.Object useType;

  /**
   * The cached value of the '{@link #getFields() <em>Fields</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFields()
   * @generated
   * @ordered
   */
  protected EList<Entity_Feature> fields;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ObjectImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return CaslPackage.eINSTANCE.getObject();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public uofa.lbirdsey.castle.casl.Object getUseType()
  {
    if (useType != null && useType.eIsProxy())
    {
      InternalEObject oldUseType = (InternalEObject)useType;
      useType = (uofa.lbirdsey.castle.casl.Object)eResolveProxy(oldUseType);
      if (useType != oldUseType)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, CaslPackage.OBJECT__USE_TYPE, oldUseType, useType));
      }
    }
    return useType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public uofa.lbirdsey.castle.casl.Object basicGetUseType()
  {
    return useType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setUseType(uofa.lbirdsey.castle.casl.Object newUseType)
  {
    uofa.lbirdsey.castle.casl.Object oldUseType = useType;
    useType = newUseType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CaslPackage.OBJECT__USE_TYPE, oldUseType, useType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Entity_Feature> getFields()
  {
    if (fields == null)
    {
      fields = new EObjectContainmentEList<Entity_Feature>(Entity_Feature.class, this, CaslPackage.OBJECT__FIELDS);
    }
    return fields;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case CaslPackage.OBJECT__FIELDS:
        return ((InternalEList<?>)getFields()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case CaslPackage.OBJECT__USE_TYPE:
        if (resolve) return getUseType();
        return basicGetUseType();
      case CaslPackage.OBJECT__FIELDS:
        return getFields();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case CaslPackage.OBJECT__USE_TYPE:
        setUseType((uofa.lbirdsey.castle.casl.Object)newValue);
        return;
      case CaslPackage.OBJECT__FIELDS:
        getFields().clear();
        getFields().addAll((Collection<? extends Entity_Feature>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case CaslPackage.OBJECT__USE_TYPE:
        setUseType((uofa.lbirdsey.castle.casl.Object)null);
        return;
      case CaslPackage.OBJECT__FIELDS:
        getFields().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case CaslPackage.OBJECT__USE_TYPE:
        return useType != null;
      case CaslPackage.OBJECT__FIELDS:
        return fields != null && !fields.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //ObjectImpl
