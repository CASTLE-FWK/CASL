/**
 * generated by Xtext 2.12.0
 */
package uofa.lbirdsey.castle.casl.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EDataType;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import uofa.lbirdsey.castle.casl.AbstractElement;
import uofa.lbirdsey.castle.casl.AdaptationDelay;
import uofa.lbirdsey.castle.casl.AdaptationType;
import uofa.lbirdsey.castle.casl.AdaptiveProcess;
import uofa.lbirdsey.castle.casl.AdaptiveProcessFeatureCall;
import uofa.lbirdsey.castle.casl.AdaptiveProcesses;
import uofa.lbirdsey.castle.casl.Addition;
import uofa.lbirdsey.castle.casl.Agent;
import uofa.lbirdsey.castle.casl.AgentFieldReference;
import uofa.lbirdsey.castle.casl.AgentInteraction;
import uofa.lbirdsey.castle.casl.AgentInteractionFeatureCall;
import uofa.lbirdsey.castle.casl.AgentInteractions;
import uofa.lbirdsey.castle.casl.Agent_Call;
import uofa.lbirdsey.castle.casl.Agent_Type_Name;
import uofa.lbirdsey.castle.casl.Agent_Types;
import uofa.lbirdsey.castle.casl.ArithmeticSigned;
import uofa.lbirdsey.castle.casl.Behavior;
import uofa.lbirdsey.castle.casl.BehaviorFeatureCall;
import uofa.lbirdsey.castle.casl.BehaviorReactionTime;
import uofa.lbirdsey.castle.casl.BehaviorType;
import uofa.lbirdsey.castle.casl.Behaviors;
import uofa.lbirdsey.castle.casl.BooleanExpression;
import uofa.lbirdsey.castle.casl.BooleanNegation;
import uofa.lbirdsey.castle.casl.BooleanType;
import uofa.lbirdsey.castle.casl.CASL_Macro;
import uofa.lbirdsey.castle.casl.CASL_Macro_Call;
import uofa.lbirdsey.castle.casl.CASL_Macro_CountConditions;
import uofa.lbirdsey.castle.casl.CASL_Macro_FilterAndFunction;
import uofa.lbirdsey.castle.casl.CASL_Macro_ForEach;
import uofa.lbirdsey.castle.casl.CASL_Macro_MetricSwitch;
import uofa.lbirdsey.castle.casl.CASL_Macro_Neighbours;
import uofa.lbirdsey.castle.casl.CASL_Macro_Populate;
import uofa.lbirdsey.castle.casl.CASL_Macro_Print;
import uofa.lbirdsey.castle.casl.CASL_Macro_Random;
import uofa.lbirdsey.castle.casl.CASL_Macro_TODO;
import uofa.lbirdsey.castle.casl.CAS_Inspection_Level;
import uofa.lbirdsey.castle.casl.CAS_Rule_Exception;
import uofa.lbirdsey.castle.casl.CAS_Rule_Types;
import uofa.lbirdsey.castle.casl.CAS_Rules;
import uofa.lbirdsey.castle.casl.CAS_Semantic_Group_Switch;
import uofa.lbirdsey.castle.casl.Casl;
import uofa.lbirdsey.castle.casl.CaslFactory;
import uofa.lbirdsey.castle.casl.CaslPackage;
import uofa.lbirdsey.castle.casl.Comparison;
import uofa.lbirdsey.castle.casl.Concern;
import uofa.lbirdsey.castle.casl.DataTypeDeclaration;
import uofa.lbirdsey.castle.casl.Div;
import uofa.lbirdsey.castle.casl.EGInteraction;
import uofa.lbirdsey.castle.casl.EGInteractions;
import uofa.lbirdsey.castle.casl.ElseIfExpr;
import uofa.lbirdsey.castle.casl.EndConditionTypes;
import uofa.lbirdsey.castle.casl.End_Condition;
import uofa.lbirdsey.castle.casl.End_Conditions;
import uofa.lbirdsey.castle.casl.Entity;
import uofa.lbirdsey.castle.casl.Entity_Call;
import uofa.lbirdsey.castle.casl.Entity_Feature;
import uofa.lbirdsey.castle.casl.EnumCall;
import uofa.lbirdsey.castle.casl.EnumCallExpr;
import uofa.lbirdsey.castle.casl.Environment;
import uofa.lbirdsey.castle.casl.EnvironmentFieldReference;
import uofa.lbirdsey.castle.casl.EnvironmentInteraction;
import uofa.lbirdsey.castle.casl.EnvironmentInteractionFeatureCall;
import uofa.lbirdsey.castle.casl.EnvironmentInteractions;
import uofa.lbirdsey.castle.casl.Environment_Attribute;
import uofa.lbirdsey.castle.casl.Environment_Call;
import uofa.lbirdsey.castle.casl.Environment_Rules;
import uofa.lbirdsey.castle.casl.Environment_Type;
import uofa.lbirdsey.castle.casl.Environment_Type_Name;
import uofa.lbirdsey.castle.casl.Environment_Types;
import uofa.lbirdsey.castle.casl.Equals;
import uofa.lbirdsey.castle.casl.Expression;
import uofa.lbirdsey.castle.casl.ExternalInteractionFeatureCall;
import uofa.lbirdsey.castle.casl.Feature;
import uofa.lbirdsey.castle.casl.FeatureCall;
import uofa.lbirdsey.castle.casl.FeatureCallExp;
import uofa.lbirdsey.castle.casl.Field;
import uofa.lbirdsey.castle.casl.FloatType;
import uofa.lbirdsey.castle.casl.ForEachLoop;
import uofa.lbirdsey.castle.casl.ForLoop;
import uofa.lbirdsey.castle.casl.Formula;
import uofa.lbirdsey.castle.casl.Function;
import uofa.lbirdsey.castle.casl.FunctionCall;
import uofa.lbirdsey.castle.casl.FunctionCallExpr;
import uofa.lbirdsey.castle.casl.FunctionFeatureCall;
import uofa.lbirdsey.castle.casl.FunctionParameter;
import uofa.lbirdsey.castle.casl.Functions;
import uofa.lbirdsey.castle.casl.Group;
import uofa.lbirdsey.castle.casl.GroupExternalInteraction;
import uofa.lbirdsey.castle.casl.GroupExternalInteractionFeatureCall;
import uofa.lbirdsey.castle.casl.GroupExternalInteractions;
import uofa.lbirdsey.castle.casl.GroupFieldReference;
import uofa.lbirdsey.castle.casl.GroupInternalInteraction;
import uofa.lbirdsey.castle.casl.GroupInternalInteractions;
import uofa.lbirdsey.castle.casl.GroupInternalInteractionsFeatureCall;
import uofa.lbirdsey.castle.casl.GroupSelfInternalInteractionsFeatureCall;
import uofa.lbirdsey.castle.casl.Group_Call;
import uofa.lbirdsey.castle.casl.Group_Rules;
import uofa.lbirdsey.castle.casl.Group_Type_Name;
import uofa.lbirdsey.castle.casl.Group_Types;
import uofa.lbirdsey.castle.casl.IfStatement;
import uofa.lbirdsey.castle.casl.Import;
import uofa.lbirdsey.castle.casl.IntType;
import uofa.lbirdsey.castle.casl.Interaction;
import uofa.lbirdsey.castle.casl.InteractionFeatureCall;
import uofa.lbirdsey.castle.casl.InteractionTriggerParameter;
import uofa.lbirdsey.castle.casl.InteractionTriggerTypes;
import uofa.lbirdsey.castle.casl.InteractionType;
import uofa.lbirdsey.castle.casl.Interactions;
import uofa.lbirdsey.castle.casl.LayoutType;
import uofa.lbirdsey.castle.casl.MacroCall;
import uofa.lbirdsey.castle.casl.Multiplication;
import uofa.lbirdsey.castle.casl.NonPrimitiveType;
import uofa.lbirdsey.castle.casl.NullType;
import uofa.lbirdsey.castle.casl.NullTypeLiteral;
import uofa.lbirdsey.castle.casl.NumberLiteral;
import uofa.lbirdsey.castle.casl.PackageDeclaration;
import uofa.lbirdsey.castle.casl.Parameters;
import uofa.lbirdsey.castle.casl.PrimitiveType;
import uofa.lbirdsey.castle.casl.RandomType;
import uofa.lbirdsey.castle.casl.Raw_Java_Block;
import uofa.lbirdsey.castle.casl.SelfAssignedFormula;
import uofa.lbirdsey.castle.casl.SelfCall;
import uofa.lbirdsey.castle.casl.SelfCallExpr;
import uofa.lbirdsey.castle.casl.State_Block_Refs;
import uofa.lbirdsey.castle.casl.StringLiteral;
import uofa.lbirdsey.castle.casl.StringType;
import uofa.lbirdsey.castle.casl.SubSystem;
import uofa.lbirdsey.castle.casl.SubSystemType;
import uofa.lbirdsey.castle.casl.SubSystems;
import uofa.lbirdsey.castle.casl.Subtraction;
import uofa.lbirdsey.castle.casl.Symbol;
import uofa.lbirdsey.castle.casl.SystemCall;
import uofa.lbirdsey.castle.casl.SystemCallObj;
import uofa.lbirdsey.castle.casl.Transmission_Contents;
import uofa.lbirdsey.castle.casl.Transmission_Phase;
import uofa.lbirdsey.castle.casl.Transmission_Repeat;
import uofa.lbirdsey.castle.casl.Type;
import uofa.lbirdsey.castle.casl.TypeRef;
import uofa.lbirdsey.castle.casl.WorldType;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class CaslFactoryImpl extends EFactoryImpl implements CaslFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static CaslFactory init()
  {
    try
    {
      CaslFactory theCaslFactory = (CaslFactory)EPackage.Registry.INSTANCE.getEFactory(CaslPackage.eNS_URI);
      if (theCaslFactory != null)
      {
        return theCaslFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new CaslFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CaslFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case CaslPackage.CASL: return createCasl();
      case CaslPackage.SYSTEM: return createSystem();
      case CaslPackage.AGENT_TYPES: return createAgent_Types();
      case CaslPackage.AGENT_TYPE_NAME: return createAgent_Type_Name();
      case CaslPackage.ENVIRONMENT_TYPES: return createEnvironment_Types();
      case CaslPackage.ENVIRONMENT_TYPE_NAME: return createEnvironment_Type_Name();
      case CaslPackage.ENVIRONMENT_RULES: return createEnvironment_Rules();
      case CaslPackage.GROUP_TYPES: return createGroup_Types();
      case CaslPackage.GROUP_TYPE_NAME: return createGroup_Type_Name();
      case CaslPackage.END_CONDITIONS: return createEnd_Conditions();
      case CaslPackage.END_CONDITION: return createEnd_Condition();
      case CaslPackage.CAS_RULES: return createCAS_Rules();
      case CaslPackage.ENTITY: return createEntity();
      case CaslPackage.ENTITY_FEATURE: return createEntity_Feature();
      case CaslPackage.AGENT: return createAgent();
      case CaslPackage.ENVIRONMENT: return createEnvironment();
      case CaslPackage.GROUP: return createGroup();
      case CaslPackage.GROUP_RULES: return createGroup_Rules();
      case CaslPackage.GROUP_EXTERNAL_INTERACTIONS: return createGroupExternalInteractions();
      case CaslPackage.GROUP_EXTERNAL_INTERACTION: return createGroupExternalInteraction();
      case CaslPackage.GROUP_INTERNAL_INTERACTIONS: return createGroupInternalInteractions();
      case CaslPackage.GROUP_INTERNAL_INTERACTION: return createGroupInternalInteraction();
      case CaslPackage.PARAMETERS: return createParameters();
      case CaslPackage.FIELD: return createField();
      case CaslPackage.SYMBOL: return createSymbol();
      case CaslPackage.FUNCTION: return createFunction();
      case CaslPackage.FUNCTIONS: return createFunctions();
      case CaslPackage.CONCERN: return createConcern();
      case CaslPackage.STATE_BLOCK_REFS: return createState_Block_Refs();
      case CaslPackage.BEHAVIOR: return createBehavior();
      case CaslPackage.BEHAVIORS: return createBehaviors();
      case CaslPackage.INTERACTION: return createInteraction();
      case CaslPackage.AGENT_INTERACTIONS: return createAgentInteractions();
      case CaslPackage.INTERACTIONS: return createInteractions();
      case CaslPackage.ENVIRONMENT_INTERACTIONS: return createEnvironmentInteractions();
      case CaslPackage.EG_INTERACTIONS: return createEGInteractions();
      case CaslPackage.INTERACTION_TRIGGER_PARAMETER: return createInteractionTriggerParameter();
      case CaslPackage.ADAPTIVE_PROCESS: return createAdaptiveProcess();
      case CaslPackage.ADAPTIVE_PROCESSES: return createAdaptiveProcesses();
      case CaslPackage.FEATURE_CALL: return createFeatureCall();
      case CaslPackage.ADAPTIVE_PROCESS_FEATURE_CALL: return createAdaptiveProcessFeatureCall();
      case CaslPackage.INTERACTION_FEATURE_CALL: return createInteractionFeatureCall();
      case CaslPackage.AGENT_INTERACTION_FEATURE_CALL: return createAgentInteractionFeatureCall();
      case CaslPackage.GROUP_EXTERNAL_INTERACTION_FEATURE_CALL: return createGroupExternalInteractionFeatureCall();
      case CaslPackage.EXTERNAL_INTERACTION_FEATURE_CALL: return createExternalInteractionFeatureCall();
      case CaslPackage.GROUP_INTERNAL_INTERACTIONS_FEATURE_CALL: return createGroupInternalInteractionsFeatureCall();
      case CaslPackage.ENVIRONMENT_INTERACTION_FEATURE_CALL: return createEnvironmentInteractionFeatureCall();
      case CaslPackage.GROUP_SELF_INTERNAL_INTERACTIONS_FEATURE_CALL: return createGroupSelfInternalInteractionsFeatureCall();
      case CaslPackage.FUNCTION_FEATURE_CALL: return createFunctionFeatureCall();
      case CaslPackage.BEHAVIOR_FEATURE_CALL: return createBehaviorFeatureCall();
      case CaslPackage.SUB_SYSTEM: return createSubSystem();
      case CaslPackage.SUB_SYSTEMS: return createSubSystems();
      case CaslPackage.TYPE: return createType();
      case CaslPackage.NON_PRIMITIVE_TYPE: return createNonPrimitiveType();
      case CaslPackage.PRIMITIVE_TYPE: return createPrimitiveType();
      case CaslPackage.INT_TYPE: return createIntType();
      case CaslPackage.BOOLEAN_TYPE: return createBooleanType();
      case CaslPackage.FLOAT_TYPE: return createFloatType();
      case CaslPackage.STRING_TYPE: return createStringType();
      case CaslPackage.NULL_TYPE: return createNullType();
      case CaslPackage.FORMULA: return createFormula();
      case CaslPackage.SELF_ASSIGNED_FORMULA: return createSelfAssignedFormula();
      case CaslPackage.EXPRESSION: return createExpression();
      case CaslPackage.FOR_LOOP: return createForLoop();
      case CaslPackage.FOR_EACH_LOOP: return createForEachLoop();
      case CaslPackage.IF_STATEMENT: return createIfStatement();
      case CaslPackage.ELSE_IF_EXPR: return createElseIfExpr();
      case CaslPackage.SELF_CALL: return createSelfCall();
      case CaslPackage.FUNCTION_CALL: return createFunctionCall();
      case CaslPackage.ENUM_CALL: return createEnumCall();
      case CaslPackage.SYSTEM_CALL: return createSystemCall();
      case CaslPackage.AGENT_CALL: return createAgent_Call();
      case CaslPackage.ENVIRONMENT_CALL: return createEnvironment_Call();
      case CaslPackage.GROUP_CALL: return createGroup_Call();
      case CaslPackage.ENTITY_CALL: return createEntity_Call();
      case CaslPackage.OBJECT: return createObject();
      case CaslPackage.ENUM: return createEnum();
      case CaslPackage.CASL_MACRO_CALL: return createCASL_Macro_Call();
      case CaslPackage.CASL_MACRO: return createCASL_Macro();
      case CaslPackage.CASL_MACRO_NEIGHBOURS: return createCASL_Macro_Neighbours();
      case CaslPackage.CASL_MACRO_FILTER_AND_FUNCTION: return createCASL_Macro_FilterAndFunction();
      case CaslPackage.CASL_MACRO_COUNT_CONDITIONS: return createCASL_Macro_CountConditions();
      case CaslPackage.CASL_MACRO_RANDOM: return createCASL_Macro_Random();
      case CaslPackage.CASL_MACRO_FOR_EACH: return createCASL_Macro_ForEach();
      case CaslPackage.CASL_MACRO_PRINT: return createCASL_Macro_Print();
      case CaslPackage.CASL_MACRO_METRIC_SWITCH: return createCASL_Macro_MetricSwitch();
      case CaslPackage.CASL_MACRO_TODO: return createCASL_Macro_TODO();
      case CaslPackage.CASL_MACRO_POPULATE: return createCASL_Macro_Populate();
      case CaslPackage.RAW_JAVA_BLOCK: return createRaw_Java_Block();
      case CaslPackage.FEATURE: return createFeature();
      case CaslPackage.ABSTRACT_ELEMENT: return createAbstractElement();
      case CaslPackage.PACKAGE_DECLARATION: return createPackageDeclaration();
      case CaslPackage.IMPORT: return createImport();
      case CaslPackage.AGENT_FIELD_REFERENCE: return createAgentFieldReference();
      case CaslPackage.ENVIRONMENT_FIELD_REFERENCE: return createEnvironmentFieldReference();
      case CaslPackage.GROUP_FIELD_REFERENCE: return createGroupFieldReference();
      case CaslPackage.FUNCTION_PARAMETER: return createFunctionParameter();
      case CaslPackage.AGENT_INTERACTION: return createAgentInteraction();
      case CaslPackage.ENVIRONMENT_INTERACTION: return createEnvironmentInteraction();
      case CaslPackage.EG_INTERACTION: return createEGInteraction();
      case CaslPackage.DATA_TYPE_DECLARATION: return createDataTypeDeclaration();
      case CaslPackage.BOOLEAN_EXPRESSION: return createBooleanExpression();
      case CaslPackage.EQUALS: return createEquals();
      case CaslPackage.COMPARISON: return createComparison();
      case CaslPackage.SUBTRACTION: return createSubtraction();
      case CaslPackage.ADDITION: return createAddition();
      case CaslPackage.MULTIPLICATION: return createMultiplication();
      case CaslPackage.DIV: return createDiv();
      case CaslPackage.BOOLEAN_NEGATION: return createBooleanNegation();
      case CaslPackage.ARITHMETIC_SIGNED: return createArithmeticSigned();
      case CaslPackage.NUMBER_LITERAL: return createNumberLiteral();
      case CaslPackage.STRING_LITERAL: return createStringLiteral();
      case CaslPackage.NULL_TYPE_LITERAL: return createNullTypeLiteral();
      case CaslPackage.TYPE_REF: return createTypeRef();
      case CaslPackage.SYSTEM_CALL_OBJ: return createSystemCallObj();
      case CaslPackage.FEATURE_CALL_EXP: return createFeatureCallExp();
      case CaslPackage.SELF_CALL_EXPR: return createSelfCallExpr();
      case CaslPackage.MACRO_CALL: return createMacroCall();
      case CaslPackage.FUNCTION_CALL_EXPR: return createFunctionCallExpr();
      case CaslPackage.ENUM_CALL_EXPR: return createEnumCallExpr();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object createFromString(EDataType eDataType, String initialValue)
  {
    switch (eDataType.getClassifierID())
    {
      case CaslPackage.ENVIRONMENT_ATTRIBUTE:
        return createEnvironment_AttributeFromString(eDataType, initialValue);
      case CaslPackage.ENVIRONMENT_TYPE:
        return createEnvironment_TypeFromString(eDataType, initialValue);
      case CaslPackage.END_CONDITION_TYPES:
        return createEndConditionTypesFromString(eDataType, initialValue);
      case CaslPackage.CAS_RULE_TYPES:
        return createCAS_Rule_TypesFromString(eDataType, initialValue);
      case CaslPackage.CAS_RULE_EXCEPTION:
        return createCAS_Rule_ExceptionFromString(eDataType, initialValue);
      case CaslPackage.CAS_INSPECTION_LEVEL:
        return createCAS_Inspection_LevelFromString(eDataType, initialValue);
      case CaslPackage.CAS_SEMANTIC_GROUP_SWITCH:
        return createCAS_Semantic_Group_SwitchFromString(eDataType, initialValue);
      case CaslPackage.TRANSMISSION_PHASE:
        return createTransmission_PhaseFromString(eDataType, initialValue);
      case CaslPackage.TRANSMISSION_CONTENTS:
        return createTransmission_ContentsFromString(eDataType, initialValue);
      case CaslPackage.TRANSMISSION_REPEAT:
        return createTransmission_RepeatFromString(eDataType, initialValue);
      case CaslPackage.BEHAVIOR_TYPE:
        return createBehaviorTypeFromString(eDataType, initialValue);
      case CaslPackage.BEHAVIOR_REACTION_TIME:
        return createBehaviorReactionTimeFromString(eDataType, initialValue);
      case CaslPackage.LAYOUT_TYPE:
        return createLayoutTypeFromString(eDataType, initialValue);
      case CaslPackage.INTERACTION_TYPE:
        return createInteractionTypeFromString(eDataType, initialValue);
      case CaslPackage.INTERACTION_TRIGGER_TYPES:
        return createInteractionTriggerTypesFromString(eDataType, initialValue);
      case CaslPackage.ADAPTATION_TYPE:
        return createAdaptationTypeFromString(eDataType, initialValue);
      case CaslPackage.ADAPTATION_DELAY:
        return createAdaptationDelayFromString(eDataType, initialValue);
      case CaslPackage.SUB_SYSTEM_TYPE:
        return createSubSystemTypeFromString(eDataType, initialValue);
      case CaslPackage.WORLD_TYPE:
        return createWorldTypeFromString(eDataType, initialValue);
      case CaslPackage.RANDOM_TYPE:
        return createRandomTypeFromString(eDataType, initialValue);
      default:
        throw new IllegalArgumentException("The datatype '" + eDataType.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String convertToString(EDataType eDataType, Object instanceValue)
  {
    switch (eDataType.getClassifierID())
    {
      case CaslPackage.ENVIRONMENT_ATTRIBUTE:
        return convertEnvironment_AttributeToString(eDataType, instanceValue);
      case CaslPackage.ENVIRONMENT_TYPE:
        return convertEnvironment_TypeToString(eDataType, instanceValue);
      case CaslPackage.END_CONDITION_TYPES:
        return convertEndConditionTypesToString(eDataType, instanceValue);
      case CaslPackage.CAS_RULE_TYPES:
        return convertCAS_Rule_TypesToString(eDataType, instanceValue);
      case CaslPackage.CAS_RULE_EXCEPTION:
        return convertCAS_Rule_ExceptionToString(eDataType, instanceValue);
      case CaslPackage.CAS_INSPECTION_LEVEL:
        return convertCAS_Inspection_LevelToString(eDataType, instanceValue);
      case CaslPackage.CAS_SEMANTIC_GROUP_SWITCH:
        return convertCAS_Semantic_Group_SwitchToString(eDataType, instanceValue);
      case CaslPackage.TRANSMISSION_PHASE:
        return convertTransmission_PhaseToString(eDataType, instanceValue);
      case CaslPackage.TRANSMISSION_CONTENTS:
        return convertTransmission_ContentsToString(eDataType, instanceValue);
      case CaslPackage.TRANSMISSION_REPEAT:
        return convertTransmission_RepeatToString(eDataType, instanceValue);
      case CaslPackage.BEHAVIOR_TYPE:
        return convertBehaviorTypeToString(eDataType, instanceValue);
      case CaslPackage.BEHAVIOR_REACTION_TIME:
        return convertBehaviorReactionTimeToString(eDataType, instanceValue);
      case CaslPackage.LAYOUT_TYPE:
        return convertLayoutTypeToString(eDataType, instanceValue);
      case CaslPackage.INTERACTION_TYPE:
        return convertInteractionTypeToString(eDataType, instanceValue);
      case CaslPackage.INTERACTION_TRIGGER_TYPES:
        return convertInteractionTriggerTypesToString(eDataType, instanceValue);
      case CaslPackage.ADAPTATION_TYPE:
        return convertAdaptationTypeToString(eDataType, instanceValue);
      case CaslPackage.ADAPTATION_DELAY:
        return convertAdaptationDelayToString(eDataType, instanceValue);
      case CaslPackage.SUB_SYSTEM_TYPE:
        return convertSubSystemTypeToString(eDataType, instanceValue);
      case CaslPackage.WORLD_TYPE:
        return convertWorldTypeToString(eDataType, instanceValue);
      case CaslPackage.RANDOM_TYPE:
        return convertRandomTypeToString(eDataType, instanceValue);
      default:
        throw new IllegalArgumentException("The datatype '" + eDataType.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Casl createCasl()
  {
    CaslImpl casl = new CaslImpl();
    return casl;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public uofa.lbirdsey.castle.casl.System createSystem()
  {
    SystemImpl system = new SystemImpl();
    return system;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Agent_Types createAgent_Types()
  {
    Agent_TypesImpl agent_Types = new Agent_TypesImpl();
    return agent_Types;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Agent_Type_Name createAgent_Type_Name()
  {
    Agent_Type_NameImpl agent_Type_Name = new Agent_Type_NameImpl();
    return agent_Type_Name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Environment_Types createEnvironment_Types()
  {
    Environment_TypesImpl environment_Types = new Environment_TypesImpl();
    return environment_Types;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Environment_Type_Name createEnvironment_Type_Name()
  {
    Environment_Type_NameImpl environment_Type_Name = new Environment_Type_NameImpl();
    return environment_Type_Name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Environment_Rules createEnvironment_Rules()
  {
    Environment_RulesImpl environment_Rules = new Environment_RulesImpl();
    return environment_Rules;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Group_Types createGroup_Types()
  {
    Group_TypesImpl group_Types = new Group_TypesImpl();
    return group_Types;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Group_Type_Name createGroup_Type_Name()
  {
    Group_Type_NameImpl group_Type_Name = new Group_Type_NameImpl();
    return group_Type_Name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public End_Conditions createEnd_Conditions()
  {
    End_ConditionsImpl end_Conditions = new End_ConditionsImpl();
    return end_Conditions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public End_Condition createEnd_Condition()
  {
    End_ConditionImpl end_Condition = new End_ConditionImpl();
    return end_Condition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CAS_Rules createCAS_Rules()
  {
    CAS_RulesImpl caS_Rules = new CAS_RulesImpl();
    return caS_Rules;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Entity createEntity()
  {
    EntityImpl entity = new EntityImpl();
    return entity;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Entity_Feature createEntity_Feature()
  {
    Entity_FeatureImpl entity_Feature = new Entity_FeatureImpl();
    return entity_Feature;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Agent createAgent()
  {
    AgentImpl agent = new AgentImpl();
    return agent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Environment createEnvironment()
  {
    EnvironmentImpl environment = new EnvironmentImpl();
    return environment;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Group createGroup()
  {
    GroupImpl group = new GroupImpl();
    return group;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Group_Rules createGroup_Rules()
  {
    Group_RulesImpl group_Rules = new Group_RulesImpl();
    return group_Rules;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public GroupExternalInteractions createGroupExternalInteractions()
  {
    GroupExternalInteractionsImpl groupExternalInteractions = new GroupExternalInteractionsImpl();
    return groupExternalInteractions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public GroupExternalInteraction createGroupExternalInteraction()
  {
    GroupExternalInteractionImpl groupExternalInteraction = new GroupExternalInteractionImpl();
    return groupExternalInteraction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public GroupInternalInteractions createGroupInternalInteractions()
  {
    GroupInternalInteractionsImpl groupInternalInteractions = new GroupInternalInteractionsImpl();
    return groupInternalInteractions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public GroupInternalInteraction createGroupInternalInteraction()
  {
    GroupInternalInteractionImpl groupInternalInteraction = new GroupInternalInteractionImpl();
    return groupInternalInteraction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Parameters createParameters()
  {
    ParametersImpl parameters = new ParametersImpl();
    return parameters;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Field createField()
  {
    FieldImpl field = new FieldImpl();
    return field;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Symbol createSymbol()
  {
    SymbolImpl symbol = new SymbolImpl();
    return symbol;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Function createFunction()
  {
    FunctionImpl function = new FunctionImpl();
    return function;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Functions createFunctions()
  {
    FunctionsImpl functions = new FunctionsImpl();
    return functions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Concern createConcern()
  {
    ConcernImpl concern = new ConcernImpl();
    return concern;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public State_Block_Refs createState_Block_Refs()
  {
    State_Block_RefsImpl state_Block_Refs = new State_Block_RefsImpl();
    return state_Block_Refs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Behavior createBehavior()
  {
    BehaviorImpl behavior = new BehaviorImpl();
    return behavior;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Behaviors createBehaviors()
  {
    BehaviorsImpl behaviors = new BehaviorsImpl();
    return behaviors;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Interaction createInteraction()
  {
    InteractionImpl interaction = new InteractionImpl();
    return interaction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AgentInteractions createAgentInteractions()
  {
    AgentInteractionsImpl agentInteractions = new AgentInteractionsImpl();
    return agentInteractions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Interactions createInteractions()
  {
    InteractionsImpl interactions = new InteractionsImpl();
    return interactions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EnvironmentInteractions createEnvironmentInteractions()
  {
    EnvironmentInteractionsImpl environmentInteractions = new EnvironmentInteractionsImpl();
    return environmentInteractions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EGInteractions createEGInteractions()
  {
    EGInteractionsImpl egInteractions = new EGInteractionsImpl();
    return egInteractions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public InteractionTriggerParameter createInteractionTriggerParameter()
  {
    InteractionTriggerParameterImpl interactionTriggerParameter = new InteractionTriggerParameterImpl();
    return interactionTriggerParameter;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AdaptiveProcess createAdaptiveProcess()
  {
    AdaptiveProcessImpl adaptiveProcess = new AdaptiveProcessImpl();
    return adaptiveProcess;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AdaptiveProcesses createAdaptiveProcesses()
  {
    AdaptiveProcessesImpl adaptiveProcesses = new AdaptiveProcessesImpl();
    return adaptiveProcesses;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FeatureCall createFeatureCall()
  {
    FeatureCallImpl featureCall = new FeatureCallImpl();
    return featureCall;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AdaptiveProcessFeatureCall createAdaptiveProcessFeatureCall()
  {
    AdaptiveProcessFeatureCallImpl adaptiveProcessFeatureCall = new AdaptiveProcessFeatureCallImpl();
    return adaptiveProcessFeatureCall;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public InteractionFeatureCall createInteractionFeatureCall()
  {
    InteractionFeatureCallImpl interactionFeatureCall = new InteractionFeatureCallImpl();
    return interactionFeatureCall;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AgentInteractionFeatureCall createAgentInteractionFeatureCall()
  {
    AgentInteractionFeatureCallImpl agentInteractionFeatureCall = new AgentInteractionFeatureCallImpl();
    return agentInteractionFeatureCall;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public GroupExternalInteractionFeatureCall createGroupExternalInteractionFeatureCall()
  {
    GroupExternalInteractionFeatureCallImpl groupExternalInteractionFeatureCall = new GroupExternalInteractionFeatureCallImpl();
    return groupExternalInteractionFeatureCall;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ExternalInteractionFeatureCall createExternalInteractionFeatureCall()
  {
    ExternalInteractionFeatureCallImpl externalInteractionFeatureCall = new ExternalInteractionFeatureCallImpl();
    return externalInteractionFeatureCall;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public GroupInternalInteractionsFeatureCall createGroupInternalInteractionsFeatureCall()
  {
    GroupInternalInteractionsFeatureCallImpl groupInternalInteractionsFeatureCall = new GroupInternalInteractionsFeatureCallImpl();
    return groupInternalInteractionsFeatureCall;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EnvironmentInteractionFeatureCall createEnvironmentInteractionFeatureCall()
  {
    EnvironmentInteractionFeatureCallImpl environmentInteractionFeatureCall = new EnvironmentInteractionFeatureCallImpl();
    return environmentInteractionFeatureCall;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public GroupSelfInternalInteractionsFeatureCall createGroupSelfInternalInteractionsFeatureCall()
  {
    GroupSelfInternalInteractionsFeatureCallImpl groupSelfInternalInteractionsFeatureCall = new GroupSelfInternalInteractionsFeatureCallImpl();
    return groupSelfInternalInteractionsFeatureCall;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FunctionFeatureCall createFunctionFeatureCall()
  {
    FunctionFeatureCallImpl functionFeatureCall = new FunctionFeatureCallImpl();
    return functionFeatureCall;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BehaviorFeatureCall createBehaviorFeatureCall()
  {
    BehaviorFeatureCallImpl behaviorFeatureCall = new BehaviorFeatureCallImpl();
    return behaviorFeatureCall;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SubSystem createSubSystem()
  {
    SubSystemImpl subSystem = new SubSystemImpl();
    return subSystem;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SubSystems createSubSystems()
  {
    SubSystemsImpl subSystems = new SubSystemsImpl();
    return subSystems;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Type createType()
  {
    TypeImpl type = new TypeImpl();
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NonPrimitiveType createNonPrimitiveType()
  {
    NonPrimitiveTypeImpl nonPrimitiveType = new NonPrimitiveTypeImpl();
    return nonPrimitiveType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PrimitiveType createPrimitiveType()
  {
    PrimitiveTypeImpl primitiveType = new PrimitiveTypeImpl();
    return primitiveType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public IntType createIntType()
  {
    IntTypeImpl intType = new IntTypeImpl();
    return intType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BooleanType createBooleanType()
  {
    BooleanTypeImpl booleanType = new BooleanTypeImpl();
    return booleanType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FloatType createFloatType()
  {
    FloatTypeImpl floatType = new FloatTypeImpl();
    return floatType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public StringType createStringType()
  {
    StringTypeImpl stringType = new StringTypeImpl();
    return stringType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NullType createNullType()
  {
    NullTypeImpl nullType = new NullTypeImpl();
    return nullType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Formula createFormula()
  {
    FormulaImpl formula = new FormulaImpl();
    return formula;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SelfAssignedFormula createSelfAssignedFormula()
  {
    SelfAssignedFormulaImpl selfAssignedFormula = new SelfAssignedFormulaImpl();
    return selfAssignedFormula;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Expression createExpression()
  {
    ExpressionImpl expression = new ExpressionImpl();
    return expression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ForLoop createForLoop()
  {
    ForLoopImpl forLoop = new ForLoopImpl();
    return forLoop;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ForEachLoop createForEachLoop()
  {
    ForEachLoopImpl forEachLoop = new ForEachLoopImpl();
    return forEachLoop;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public IfStatement createIfStatement()
  {
    IfStatementImpl ifStatement = new IfStatementImpl();
    return ifStatement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ElseIfExpr createElseIfExpr()
  {
    ElseIfExprImpl elseIfExpr = new ElseIfExprImpl();
    return elseIfExpr;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SelfCall createSelfCall()
  {
    SelfCallImpl selfCall = new SelfCallImpl();
    return selfCall;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FunctionCall createFunctionCall()
  {
    FunctionCallImpl functionCall = new FunctionCallImpl();
    return functionCall;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EnumCall createEnumCall()
  {
    EnumCallImpl enumCall = new EnumCallImpl();
    return enumCall;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SystemCall createSystemCall()
  {
    SystemCallImpl systemCall = new SystemCallImpl();
    return systemCall;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Agent_Call createAgent_Call()
  {
    Agent_CallImpl agent_Call = new Agent_CallImpl();
    return agent_Call;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Environment_Call createEnvironment_Call()
  {
    Environment_CallImpl environment_Call = new Environment_CallImpl();
    return environment_Call;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Group_Call createGroup_Call()
  {
    Group_CallImpl group_Call = new Group_CallImpl();
    return group_Call;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Entity_Call createEntity_Call()
  {
    Entity_CallImpl entity_Call = new Entity_CallImpl();
    return entity_Call;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public uofa.lbirdsey.castle.casl.Object createObject()
  {
    ObjectImpl object = new ObjectImpl();
    return object;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public uofa.lbirdsey.castle.casl.Enum createEnum()
  {
    EnumImpl enum_ = new EnumImpl();
    return enum_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CASL_Macro_Call createCASL_Macro_Call()
  {
    CASL_Macro_CallImpl casL_Macro_Call = new CASL_Macro_CallImpl();
    return casL_Macro_Call;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CASL_Macro createCASL_Macro()
  {
    CASL_MacroImpl casL_Macro = new CASL_MacroImpl();
    return casL_Macro;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CASL_Macro_Neighbours createCASL_Macro_Neighbours()
  {
    CASL_Macro_NeighboursImpl casL_Macro_Neighbours = new CASL_Macro_NeighboursImpl();
    return casL_Macro_Neighbours;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CASL_Macro_FilterAndFunction createCASL_Macro_FilterAndFunction()
  {
    CASL_Macro_FilterAndFunctionImpl casL_Macro_FilterAndFunction = new CASL_Macro_FilterAndFunctionImpl();
    return casL_Macro_FilterAndFunction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CASL_Macro_CountConditions createCASL_Macro_CountConditions()
  {
    CASL_Macro_CountConditionsImpl casL_Macro_CountConditions = new CASL_Macro_CountConditionsImpl();
    return casL_Macro_CountConditions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CASL_Macro_Random createCASL_Macro_Random()
  {
    CASL_Macro_RandomImpl casL_Macro_Random = new CASL_Macro_RandomImpl();
    return casL_Macro_Random;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CASL_Macro_ForEach createCASL_Macro_ForEach()
  {
    CASL_Macro_ForEachImpl casL_Macro_ForEach = new CASL_Macro_ForEachImpl();
    return casL_Macro_ForEach;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CASL_Macro_Print createCASL_Macro_Print()
  {
    CASL_Macro_PrintImpl casL_Macro_Print = new CASL_Macro_PrintImpl();
    return casL_Macro_Print;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CASL_Macro_MetricSwitch createCASL_Macro_MetricSwitch()
  {
    CASL_Macro_MetricSwitchImpl casL_Macro_MetricSwitch = new CASL_Macro_MetricSwitchImpl();
    return casL_Macro_MetricSwitch;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CASL_Macro_TODO createCASL_Macro_TODO()
  {
    CASL_Macro_TODOImpl casL_Macro_TODO = new CASL_Macro_TODOImpl();
    return casL_Macro_TODO;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CASL_Macro_Populate createCASL_Macro_Populate()
  {
    CASL_Macro_PopulateImpl casL_Macro_Populate = new CASL_Macro_PopulateImpl();
    return casL_Macro_Populate;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Raw_Java_Block createRaw_Java_Block()
  {
    Raw_Java_BlockImpl raw_Java_Block = new Raw_Java_BlockImpl();
    return raw_Java_Block;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Feature createFeature()
  {
    FeatureImpl feature = new FeatureImpl();
    return feature;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AbstractElement createAbstractElement()
  {
    AbstractElementImpl abstractElement = new AbstractElementImpl();
    return abstractElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PackageDeclaration createPackageDeclaration()
  {
    PackageDeclarationImpl packageDeclaration = new PackageDeclarationImpl();
    return packageDeclaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Import createImport()
  {
    ImportImpl import_ = new ImportImpl();
    return import_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AgentFieldReference createAgentFieldReference()
  {
    AgentFieldReferenceImpl agentFieldReference = new AgentFieldReferenceImpl();
    return agentFieldReference;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EnvironmentFieldReference createEnvironmentFieldReference()
  {
    EnvironmentFieldReferenceImpl environmentFieldReference = new EnvironmentFieldReferenceImpl();
    return environmentFieldReference;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public GroupFieldReference createGroupFieldReference()
  {
    GroupFieldReferenceImpl groupFieldReference = new GroupFieldReferenceImpl();
    return groupFieldReference;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FunctionParameter createFunctionParameter()
  {
    FunctionParameterImpl functionParameter = new FunctionParameterImpl();
    return functionParameter;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AgentInteraction createAgentInteraction()
  {
    AgentInteractionImpl agentInteraction = new AgentInteractionImpl();
    return agentInteraction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EnvironmentInteraction createEnvironmentInteraction()
  {
    EnvironmentInteractionImpl environmentInteraction = new EnvironmentInteractionImpl();
    return environmentInteraction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EGInteraction createEGInteraction()
  {
    EGInteractionImpl egInteraction = new EGInteractionImpl();
    return egInteraction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DataTypeDeclaration createDataTypeDeclaration()
  {
    DataTypeDeclarationImpl dataTypeDeclaration = new DataTypeDeclarationImpl();
    return dataTypeDeclaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BooleanExpression createBooleanExpression()
  {
    BooleanExpressionImpl booleanExpression = new BooleanExpressionImpl();
    return booleanExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Equals createEquals()
  {
    EqualsImpl equals = new EqualsImpl();
    return equals;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Comparison createComparison()
  {
    ComparisonImpl comparison = new ComparisonImpl();
    return comparison;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Subtraction createSubtraction()
  {
    SubtractionImpl subtraction = new SubtractionImpl();
    return subtraction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Addition createAddition()
  {
    AdditionImpl addition = new AdditionImpl();
    return addition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Multiplication createMultiplication()
  {
    MultiplicationImpl multiplication = new MultiplicationImpl();
    return multiplication;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Div createDiv()
  {
    DivImpl div = new DivImpl();
    return div;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BooleanNegation createBooleanNegation()
  {
    BooleanNegationImpl booleanNegation = new BooleanNegationImpl();
    return booleanNegation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ArithmeticSigned createArithmeticSigned()
  {
    ArithmeticSignedImpl arithmeticSigned = new ArithmeticSignedImpl();
    return arithmeticSigned;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NumberLiteral createNumberLiteral()
  {
    NumberLiteralImpl numberLiteral = new NumberLiteralImpl();
    return numberLiteral;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public StringLiteral createStringLiteral()
  {
    StringLiteralImpl stringLiteral = new StringLiteralImpl();
    return stringLiteral;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NullTypeLiteral createNullTypeLiteral()
  {
    NullTypeLiteralImpl nullTypeLiteral = new NullTypeLiteralImpl();
    return nullTypeLiteral;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TypeRef createTypeRef()
  {
    TypeRefImpl typeRef = new TypeRefImpl();
    return typeRef;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SystemCallObj createSystemCallObj()
  {
    SystemCallObjImpl systemCallObj = new SystemCallObjImpl();
    return systemCallObj;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FeatureCallExp createFeatureCallExp()
  {
    FeatureCallExpImpl featureCallExp = new FeatureCallExpImpl();
    return featureCallExp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SelfCallExpr createSelfCallExpr()
  {
    SelfCallExprImpl selfCallExpr = new SelfCallExprImpl();
    return selfCallExpr;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MacroCall createMacroCall()
  {
    MacroCallImpl macroCall = new MacroCallImpl();
    return macroCall;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FunctionCallExpr createFunctionCallExpr()
  {
    FunctionCallExprImpl functionCallExpr = new FunctionCallExprImpl();
    return functionCallExpr;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EnumCallExpr createEnumCallExpr()
  {
    EnumCallExprImpl enumCallExpr = new EnumCallExprImpl();
    return enumCallExpr;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Environment_Attribute createEnvironment_AttributeFromString(EDataType eDataType, String initialValue)
  {
    Environment_Attribute result = Environment_Attribute.get(initialValue);
    if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
    return result;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String convertEnvironment_AttributeToString(EDataType eDataType, Object instanceValue)
  {
    return instanceValue == null ? null : instanceValue.toString();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Environment_Type createEnvironment_TypeFromString(EDataType eDataType, String initialValue)
  {
    Environment_Type result = Environment_Type.get(initialValue);
    if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
    return result;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String convertEnvironment_TypeToString(EDataType eDataType, Object instanceValue)
  {
    return instanceValue == null ? null : instanceValue.toString();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EndConditionTypes createEndConditionTypesFromString(EDataType eDataType, String initialValue)
  {
    EndConditionTypes result = EndConditionTypes.get(initialValue);
    if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
    return result;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String convertEndConditionTypesToString(EDataType eDataType, Object instanceValue)
  {
    return instanceValue == null ? null : instanceValue.toString();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CAS_Rule_Types createCAS_Rule_TypesFromString(EDataType eDataType, String initialValue)
  {
    CAS_Rule_Types result = CAS_Rule_Types.get(initialValue);
    if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
    return result;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String convertCAS_Rule_TypesToString(EDataType eDataType, Object instanceValue)
  {
    return instanceValue == null ? null : instanceValue.toString();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CAS_Rule_Exception createCAS_Rule_ExceptionFromString(EDataType eDataType, String initialValue)
  {
    CAS_Rule_Exception result = CAS_Rule_Exception.get(initialValue);
    if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
    return result;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String convertCAS_Rule_ExceptionToString(EDataType eDataType, Object instanceValue)
  {
    return instanceValue == null ? null : instanceValue.toString();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CAS_Inspection_Level createCAS_Inspection_LevelFromString(EDataType eDataType, String initialValue)
  {
    CAS_Inspection_Level result = CAS_Inspection_Level.get(initialValue);
    if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
    return result;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String convertCAS_Inspection_LevelToString(EDataType eDataType, Object instanceValue)
  {
    return instanceValue == null ? null : instanceValue.toString();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CAS_Semantic_Group_Switch createCAS_Semantic_Group_SwitchFromString(EDataType eDataType, String initialValue)
  {
    CAS_Semantic_Group_Switch result = CAS_Semantic_Group_Switch.get(initialValue);
    if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
    return result;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String convertCAS_Semantic_Group_SwitchToString(EDataType eDataType, Object instanceValue)
  {
    return instanceValue == null ? null : instanceValue.toString();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Transmission_Phase createTransmission_PhaseFromString(EDataType eDataType, String initialValue)
  {
    Transmission_Phase result = Transmission_Phase.get(initialValue);
    if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
    return result;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String convertTransmission_PhaseToString(EDataType eDataType, Object instanceValue)
  {
    return instanceValue == null ? null : instanceValue.toString();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Transmission_Contents createTransmission_ContentsFromString(EDataType eDataType, String initialValue)
  {
    Transmission_Contents result = Transmission_Contents.get(initialValue);
    if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
    return result;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String convertTransmission_ContentsToString(EDataType eDataType, Object instanceValue)
  {
    return instanceValue == null ? null : instanceValue.toString();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Transmission_Repeat createTransmission_RepeatFromString(EDataType eDataType, String initialValue)
  {
    Transmission_Repeat result = Transmission_Repeat.get(initialValue);
    if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
    return result;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String convertTransmission_RepeatToString(EDataType eDataType, Object instanceValue)
  {
    return instanceValue == null ? null : instanceValue.toString();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BehaviorType createBehaviorTypeFromString(EDataType eDataType, String initialValue)
  {
    BehaviorType result = BehaviorType.get(initialValue);
    if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
    return result;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String convertBehaviorTypeToString(EDataType eDataType, Object instanceValue)
  {
    return instanceValue == null ? null : instanceValue.toString();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BehaviorReactionTime createBehaviorReactionTimeFromString(EDataType eDataType, String initialValue)
  {
    BehaviorReactionTime result = BehaviorReactionTime.get(initialValue);
    if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
    return result;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String convertBehaviorReactionTimeToString(EDataType eDataType, Object instanceValue)
  {
    return instanceValue == null ? null : instanceValue.toString();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LayoutType createLayoutTypeFromString(EDataType eDataType, String initialValue)
  {
    LayoutType result = LayoutType.get(initialValue);
    if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
    return result;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String convertLayoutTypeToString(EDataType eDataType, Object instanceValue)
  {
    return instanceValue == null ? null : instanceValue.toString();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public InteractionType createInteractionTypeFromString(EDataType eDataType, String initialValue)
  {
    InteractionType result = InteractionType.get(initialValue);
    if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
    return result;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String convertInteractionTypeToString(EDataType eDataType, Object instanceValue)
  {
    return instanceValue == null ? null : instanceValue.toString();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public InteractionTriggerTypes createInteractionTriggerTypesFromString(EDataType eDataType, String initialValue)
  {
    InteractionTriggerTypes result = InteractionTriggerTypes.get(initialValue);
    if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
    return result;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String convertInteractionTriggerTypesToString(EDataType eDataType, Object instanceValue)
  {
    return instanceValue == null ? null : instanceValue.toString();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AdaptationType createAdaptationTypeFromString(EDataType eDataType, String initialValue)
  {
    AdaptationType result = AdaptationType.get(initialValue);
    if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
    return result;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String convertAdaptationTypeToString(EDataType eDataType, Object instanceValue)
  {
    return instanceValue == null ? null : instanceValue.toString();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AdaptationDelay createAdaptationDelayFromString(EDataType eDataType, String initialValue)
  {
    AdaptationDelay result = AdaptationDelay.get(initialValue);
    if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
    return result;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String convertAdaptationDelayToString(EDataType eDataType, Object instanceValue)
  {
    return instanceValue == null ? null : instanceValue.toString();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SubSystemType createSubSystemTypeFromString(EDataType eDataType, String initialValue)
  {
    SubSystemType result = SubSystemType.get(initialValue);
    if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
    return result;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String convertSubSystemTypeToString(EDataType eDataType, Object instanceValue)
  {
    return instanceValue == null ? null : instanceValue.toString();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public WorldType createWorldTypeFromString(EDataType eDataType, String initialValue)
  {
    WorldType result = WorldType.get(initialValue);
    if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
    return result;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String convertWorldTypeToString(EDataType eDataType, Object instanceValue)
  {
    return instanceValue == null ? null : instanceValue.toString();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RandomType createRandomTypeFromString(EDataType eDataType, String initialValue)
  {
    RandomType result = RandomType.get(initialValue);
    if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
    return result;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String convertRandomTypeToString(EDataType eDataType, Object instanceValue)
  {
    return instanceValue == null ? null : instanceValue.toString();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CaslPackage getCaslPackage()
  {
    return (CaslPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static CaslPackage getPackage()
  {
    return CaslPackage.eINSTANCE;
  }

} //CaslFactoryImpl
