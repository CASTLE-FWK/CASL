/**
 * generated by Xtext 2.12.0
 */
package uofa.lbirdsey.castle.casl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import uofa.lbirdsey.castle.casl.Agent;
import uofa.lbirdsey.castle.casl.CaslPackage;
import uofa.lbirdsey.castle.casl.DataTypeDeclaration;
import uofa.lbirdsey.castle.casl.Environment;
import uofa.lbirdsey.castle.casl.Expression;
import uofa.lbirdsey.castle.casl.Group;
import uofa.lbirdsey.castle.casl.NonPrimitiveType;
import uofa.lbirdsey.castle.casl.PrimitiveType;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Data Type Declaration</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link uofa.lbirdsey.castle.casl.impl.DataTypeDeclarationImpl#getInitInclude <em>Init Include</em>}</li>
 *   <li>{@link uofa.lbirdsey.castle.casl.impl.DataTypeDeclarationImpl#getType <em>Type</em>}</li>
 *   <li>{@link uofa.lbirdsey.castle.casl.impl.DataTypeDeclarationImpl#getObj <em>Obj</em>}</li>
 *   <li>{@link uofa.lbirdsey.castle.casl.impl.DataTypeDeclarationImpl#getUseGroup <em>Use Group</em>}</li>
 *   <li>{@link uofa.lbirdsey.castle.casl.impl.DataTypeDeclarationImpl#getUseAgent <em>Use Agent</em>}</li>
 *   <li>{@link uofa.lbirdsey.castle.casl.impl.DataTypeDeclarationImpl#getUseEnv <em>Use Env</em>}</li>
 *   <li>{@link uofa.lbirdsey.castle.casl.impl.DataTypeDeclarationImpl#getUseObj <em>Use Obj</em>}</li>
 *   <li>{@link uofa.lbirdsey.castle.casl.impl.DataTypeDeclarationImpl#getUseType <em>Use Type</em>}</li>
 *   <li>{@link uofa.lbirdsey.castle.casl.impl.DataTypeDeclarationImpl#getExpr <em>Expr</em>}</li>
 * </ul>
 *
 * @generated
 */
public class DataTypeDeclarationImpl extends SymbolImpl implements DataTypeDeclaration
{
  /**
   * The default value of the '{@link #getInitInclude() <em>Init Include</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInitInclude()
   * @generated
   * @ordered
   */
  protected static final String INIT_INCLUDE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getInitInclude() <em>Init Include</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInitInclude()
   * @generated
   * @ordered
   */
  protected String initInclude = INIT_INCLUDE_EDEFAULT;

  /**
   * The cached value of the '{@link #getType() <em>Type</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected PrimitiveType type;

  /**
   * The cached value of the '{@link #getObj() <em>Obj</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getObj()
   * @generated
   * @ordered
   */
  protected NonPrimitiveType obj;

  /**
   * The cached value of the '{@link #getUseGroup() <em>Use Group</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUseGroup()
   * @generated
   * @ordered
   */
  protected Group useGroup;

  /**
   * The cached value of the '{@link #getUseAgent() <em>Use Agent</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUseAgent()
   * @generated
   * @ordered
   */
  protected Agent useAgent;

  /**
   * The cached value of the '{@link #getUseEnv() <em>Use Env</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUseEnv()
   * @generated
   * @ordered
   */
  protected Environment useEnv;

  /**
   * The cached value of the '{@link #getUseObj() <em>Use Obj</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUseObj()
   * @generated
   * @ordered
   */
  protected NonPrimitiveType useObj;

  /**
   * The cached value of the '{@link #getUseType() <em>Use Type</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUseType()
   * @generated
   * @ordered
   */
  protected PrimitiveType useType;

  /**
   * The cached value of the '{@link #getExpr() <em>Expr</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExpr()
   * @generated
   * @ordered
   */
  protected Expression expr;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DataTypeDeclarationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return CaslPackage.eINSTANCE.getDataTypeDeclaration();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getInitInclude()
  {
    return initInclude;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setInitInclude(String newInitInclude)
  {
    String oldInitInclude = initInclude;
    initInclude = newInitInclude;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CaslPackage.DATA_TYPE_DECLARATION__INIT_INCLUDE, oldInitInclude, initInclude));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PrimitiveType getType()
  {
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetType(PrimitiveType newType, NotificationChain msgs)
  {
    PrimitiveType oldType = type;
    type = newType;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, CaslPackage.DATA_TYPE_DECLARATION__TYPE, oldType, newType);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setType(PrimitiveType newType)
  {
    if (newType != type)
    {
      NotificationChain msgs = null;
      if (type != null)
        msgs = ((InternalEObject)type).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - CaslPackage.DATA_TYPE_DECLARATION__TYPE, null, msgs);
      if (newType != null)
        msgs = ((InternalEObject)newType).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - CaslPackage.DATA_TYPE_DECLARATION__TYPE, null, msgs);
      msgs = basicSetType(newType, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CaslPackage.DATA_TYPE_DECLARATION__TYPE, newType, newType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NonPrimitiveType getObj()
  {
    if (obj != null && obj.eIsProxy())
    {
      InternalEObject oldObj = (InternalEObject)obj;
      obj = (NonPrimitiveType)eResolveProxy(oldObj);
      if (obj != oldObj)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, CaslPackage.DATA_TYPE_DECLARATION__OBJ, oldObj, obj));
      }
    }
    return obj;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NonPrimitiveType basicGetObj()
  {
    return obj;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setObj(NonPrimitiveType newObj)
  {
    NonPrimitiveType oldObj = obj;
    obj = newObj;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CaslPackage.DATA_TYPE_DECLARATION__OBJ, oldObj, obj));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Group getUseGroup()
  {
    if (useGroup != null && useGroup.eIsProxy())
    {
      InternalEObject oldUseGroup = (InternalEObject)useGroup;
      useGroup = (Group)eResolveProxy(oldUseGroup);
      if (useGroup != oldUseGroup)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, CaslPackage.DATA_TYPE_DECLARATION__USE_GROUP, oldUseGroup, useGroup));
      }
    }
    return useGroup;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Group basicGetUseGroup()
  {
    return useGroup;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setUseGroup(Group newUseGroup)
  {
    Group oldUseGroup = useGroup;
    useGroup = newUseGroup;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CaslPackage.DATA_TYPE_DECLARATION__USE_GROUP, oldUseGroup, useGroup));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Agent getUseAgent()
  {
    if (useAgent != null && useAgent.eIsProxy())
    {
      InternalEObject oldUseAgent = (InternalEObject)useAgent;
      useAgent = (Agent)eResolveProxy(oldUseAgent);
      if (useAgent != oldUseAgent)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, CaslPackage.DATA_TYPE_DECLARATION__USE_AGENT, oldUseAgent, useAgent));
      }
    }
    return useAgent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Agent basicGetUseAgent()
  {
    return useAgent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setUseAgent(Agent newUseAgent)
  {
    Agent oldUseAgent = useAgent;
    useAgent = newUseAgent;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CaslPackage.DATA_TYPE_DECLARATION__USE_AGENT, oldUseAgent, useAgent));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Environment getUseEnv()
  {
    if (useEnv != null && useEnv.eIsProxy())
    {
      InternalEObject oldUseEnv = (InternalEObject)useEnv;
      useEnv = (Environment)eResolveProxy(oldUseEnv);
      if (useEnv != oldUseEnv)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, CaslPackage.DATA_TYPE_DECLARATION__USE_ENV, oldUseEnv, useEnv));
      }
    }
    return useEnv;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Environment basicGetUseEnv()
  {
    return useEnv;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setUseEnv(Environment newUseEnv)
  {
    Environment oldUseEnv = useEnv;
    useEnv = newUseEnv;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CaslPackage.DATA_TYPE_DECLARATION__USE_ENV, oldUseEnv, useEnv));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NonPrimitiveType getUseObj()
  {
    if (useObj != null && useObj.eIsProxy())
    {
      InternalEObject oldUseObj = (InternalEObject)useObj;
      useObj = (NonPrimitiveType)eResolveProxy(oldUseObj);
      if (useObj != oldUseObj)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, CaslPackage.DATA_TYPE_DECLARATION__USE_OBJ, oldUseObj, useObj));
      }
    }
    return useObj;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NonPrimitiveType basicGetUseObj()
  {
    return useObj;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setUseObj(NonPrimitiveType newUseObj)
  {
    NonPrimitiveType oldUseObj = useObj;
    useObj = newUseObj;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CaslPackage.DATA_TYPE_DECLARATION__USE_OBJ, oldUseObj, useObj));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PrimitiveType getUseType()
  {
    return useType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetUseType(PrimitiveType newUseType, NotificationChain msgs)
  {
    PrimitiveType oldUseType = useType;
    useType = newUseType;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, CaslPackage.DATA_TYPE_DECLARATION__USE_TYPE, oldUseType, newUseType);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setUseType(PrimitiveType newUseType)
  {
    if (newUseType != useType)
    {
      NotificationChain msgs = null;
      if (useType != null)
        msgs = ((InternalEObject)useType).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - CaslPackage.DATA_TYPE_DECLARATION__USE_TYPE, null, msgs);
      if (newUseType != null)
        msgs = ((InternalEObject)newUseType).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - CaslPackage.DATA_TYPE_DECLARATION__USE_TYPE, null, msgs);
      msgs = basicSetUseType(newUseType, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CaslPackage.DATA_TYPE_DECLARATION__USE_TYPE, newUseType, newUseType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Expression getExpr()
  {
    return expr;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetExpr(Expression newExpr, NotificationChain msgs)
  {
    Expression oldExpr = expr;
    expr = newExpr;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, CaslPackage.DATA_TYPE_DECLARATION__EXPR, oldExpr, newExpr);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setExpr(Expression newExpr)
  {
    if (newExpr != expr)
    {
      NotificationChain msgs = null;
      if (expr != null)
        msgs = ((InternalEObject)expr).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - CaslPackage.DATA_TYPE_DECLARATION__EXPR, null, msgs);
      if (newExpr != null)
        msgs = ((InternalEObject)newExpr).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - CaslPackage.DATA_TYPE_DECLARATION__EXPR, null, msgs);
      msgs = basicSetExpr(newExpr, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CaslPackage.DATA_TYPE_DECLARATION__EXPR, newExpr, newExpr));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case CaslPackage.DATA_TYPE_DECLARATION__TYPE:
        return basicSetType(null, msgs);
      case CaslPackage.DATA_TYPE_DECLARATION__USE_TYPE:
        return basicSetUseType(null, msgs);
      case CaslPackage.DATA_TYPE_DECLARATION__EXPR:
        return basicSetExpr(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case CaslPackage.DATA_TYPE_DECLARATION__INIT_INCLUDE:
        return getInitInclude();
      case CaslPackage.DATA_TYPE_DECLARATION__TYPE:
        return getType();
      case CaslPackage.DATA_TYPE_DECLARATION__OBJ:
        if (resolve) return getObj();
        return basicGetObj();
      case CaslPackage.DATA_TYPE_DECLARATION__USE_GROUP:
        if (resolve) return getUseGroup();
        return basicGetUseGroup();
      case CaslPackage.DATA_TYPE_DECLARATION__USE_AGENT:
        if (resolve) return getUseAgent();
        return basicGetUseAgent();
      case CaslPackage.DATA_TYPE_DECLARATION__USE_ENV:
        if (resolve) return getUseEnv();
        return basicGetUseEnv();
      case CaslPackage.DATA_TYPE_DECLARATION__USE_OBJ:
        if (resolve) return getUseObj();
        return basicGetUseObj();
      case CaslPackage.DATA_TYPE_DECLARATION__USE_TYPE:
        return getUseType();
      case CaslPackage.DATA_TYPE_DECLARATION__EXPR:
        return getExpr();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case CaslPackage.DATA_TYPE_DECLARATION__INIT_INCLUDE:
        setInitInclude((String)newValue);
        return;
      case CaslPackage.DATA_TYPE_DECLARATION__TYPE:
        setType((PrimitiveType)newValue);
        return;
      case CaslPackage.DATA_TYPE_DECLARATION__OBJ:
        setObj((NonPrimitiveType)newValue);
        return;
      case CaslPackage.DATA_TYPE_DECLARATION__USE_GROUP:
        setUseGroup((Group)newValue);
        return;
      case CaslPackage.DATA_TYPE_DECLARATION__USE_AGENT:
        setUseAgent((Agent)newValue);
        return;
      case CaslPackage.DATA_TYPE_DECLARATION__USE_ENV:
        setUseEnv((Environment)newValue);
        return;
      case CaslPackage.DATA_TYPE_DECLARATION__USE_OBJ:
        setUseObj((NonPrimitiveType)newValue);
        return;
      case CaslPackage.DATA_TYPE_DECLARATION__USE_TYPE:
        setUseType((PrimitiveType)newValue);
        return;
      case CaslPackage.DATA_TYPE_DECLARATION__EXPR:
        setExpr((Expression)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case CaslPackage.DATA_TYPE_DECLARATION__INIT_INCLUDE:
        setInitInclude(INIT_INCLUDE_EDEFAULT);
        return;
      case CaslPackage.DATA_TYPE_DECLARATION__TYPE:
        setType((PrimitiveType)null);
        return;
      case CaslPackage.DATA_TYPE_DECLARATION__OBJ:
        setObj((NonPrimitiveType)null);
        return;
      case CaslPackage.DATA_TYPE_DECLARATION__USE_GROUP:
        setUseGroup((Group)null);
        return;
      case CaslPackage.DATA_TYPE_DECLARATION__USE_AGENT:
        setUseAgent((Agent)null);
        return;
      case CaslPackage.DATA_TYPE_DECLARATION__USE_ENV:
        setUseEnv((Environment)null);
        return;
      case CaslPackage.DATA_TYPE_DECLARATION__USE_OBJ:
        setUseObj((NonPrimitiveType)null);
        return;
      case CaslPackage.DATA_TYPE_DECLARATION__USE_TYPE:
        setUseType((PrimitiveType)null);
        return;
      case CaslPackage.DATA_TYPE_DECLARATION__EXPR:
        setExpr((Expression)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case CaslPackage.DATA_TYPE_DECLARATION__INIT_INCLUDE:
        return INIT_INCLUDE_EDEFAULT == null ? initInclude != null : !INIT_INCLUDE_EDEFAULT.equals(initInclude);
      case CaslPackage.DATA_TYPE_DECLARATION__TYPE:
        return type != null;
      case CaslPackage.DATA_TYPE_DECLARATION__OBJ:
        return obj != null;
      case CaslPackage.DATA_TYPE_DECLARATION__USE_GROUP:
        return useGroup != null;
      case CaslPackage.DATA_TYPE_DECLARATION__USE_AGENT:
        return useAgent != null;
      case CaslPackage.DATA_TYPE_DECLARATION__USE_ENV:
        return useEnv != null;
      case CaslPackage.DATA_TYPE_DECLARATION__USE_OBJ:
        return useObj != null;
      case CaslPackage.DATA_TYPE_DECLARATION__USE_TYPE:
        return useType != null;
      case CaslPackage.DATA_TYPE_DECLARATION__EXPR:
        return expr != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (initInclude: ");
    result.append(initInclude);
    result.append(')');
    return result.toString();
  }

} //DataTypeDeclarationImpl
